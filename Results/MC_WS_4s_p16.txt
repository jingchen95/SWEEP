---------------------- Test Application - Synthetic Benchmarks ---------------------
---------------------- You choose JOSS scheduler ---------------------
CP: Training Phase finished. Predicted execution time and power results for the kernel tasks: 

---------- Execution Time Predictions ---------- 
Memory Frequency: 1866000000: 
Cluster 0: 
CPU_Freq[2035200]: 0.0293726	0.0145496	
CPU_Freq[1881600]: 0.031543	0.0151942	
CPU_Freq[1728000]: 0.0321736	0.0163379	
CPU_Freq[1574400]: 0.0329436	0.0177048	
CPU_Freq[1420800]: 0.0339039	0.0193673	
CPU_Freq[1267200]: 0.0351338	0.0214328	
CPU_Freq[1113600]: 0.0311815	0.0244398	
CPU_Freq[960000]: 0.0390121	0.0275466	
CPU_Freq[806400]: 0.0423088	0.0323504	
CPU_Freq[652800]: 0.0475558	0.0394147	
CPU_Freq[499200]: 0.0570347	0.0508263	
CPU_Freq[345600]: 0.0783201	0.0723816	
Cluster 1: 
CPU_Freq[2035200]: 0.0935802	0.0482294	0.0291314	
CPU_Freq[1881600]: 0.0964522	0.0500492	0.0294422	
CPU_Freq[1728000]: 0.10119	0.052573	0.0300052	
CPU_Freq[1574400]: 0.10689	0.0556125	0.0307003	
CPU_Freq[1420800]: 0.113878	0.0593433	0.0315783	
CPU_Freq[1267200]: 0.122644	0.0640308	0.0327191	
CPU_Freq[1113600]: 0.138787	0.0698823	0.0348491	
CPU_Freq[960000]: 0.149137	0.0782449	0.0364201	
CPU_Freq[806400]: 0.170527	0.0897686	0.0396681	
CPU_Freq[652800]: 0.2029	0.107284	0.044988	
CPU_Freq[499200]: 0.2575	0.137007	0.0549487	
CPU_Freq[345600]: 0.368406	0.197968	0.0783703	
Memory Frequency: 1600000000: 
Cluster 0: 
CPU_Freq[2035200]: 0.035447	0.0153962	
CPU_Freq[1881600]: 0.0359548	0.0163595	
CPU_Freq[1728000]: 0.0365643	0.017494	
CPU_Freq[1574400]: 0.0373091	0.0188499	
CPU_Freq[1420800]: 0.038239	0.020499	
CPU_Freq[1267200]: 0.0394308	0.0225478	
CPU_Freq[1113600]: 0.0410105	0.0251619	
CPU_Freq[960000]: 0.0431967	0.0286124	
CPU_Freq[806400]: 0.0464051	0.0333774	
CPU_Freq[652800]: 0.0515222	0.0403848	
CPU_Freq[499200]: 0.0607914	0.0517044	
CPU_Freq[345600]: 0.0816804	0.073086	
Cluster 1: 
CPU_Freq[2035200]: 0.0965804	0.0500059	0.0311211	
CPU_Freq[1881600]: 0.100549	0.0521078	0.031565	
CPU_Freq[1728000]: 0.10525	0.0545997	0.0321034	
CPU_Freq[1574400]: 0.110906	0.0576012	0.0327692	
CPU_Freq[1420800]: 0.117839	0.0612858	0.0336115	
CPU_Freq[1267200]: 0.126538	0.0659159	0.034708	
CPU_Freq[1113600]: 0.137772	0.0719071	0.0361873	
CPU_Freq[960000]: 0.152833	0.0799598	0.0382778	
CPU_Freq[806400]: 0.174067	0.0913499	0.0414226	
CPU_Freq[652800]: 0.206211	0.108668	0.0465909	
CPU_Freq[499200]: 0.26044	0.138074	0.0563066	
CPU_Freq[345600]: 0.370646	0.198436	0.0792656	
Memory Frequency: 1331200000: 
Cluster 0: 
CPU_Freq[2035200]: 0.0418792	0.017058	
CPU_Freq[1881600]: 0.0423617	0.0180102	
CPU_Freq[1728000]: 0.0429415	0.0191316	
CPU_Freq[1574400]: 0.0436507	0.0204719	
CPU_Freq[1420800]: 0.0445373	0.022102	
CPU_Freq[1267200]: 0.0456754	0.0241273	
CPU_Freq[1113600]: 0.0471863	0.0267112	
CPU_Freq[960000]: 0.049282	0.030122	
CPU_Freq[806400]: 0.0523653	0.0348322	
CPU_Freq[652800]: 0.0572984	0.0417589	
CPU_Freq[499200]: 0.0662703	0.0529483	
CPU_Freq[345600]: 0.0865981	0.0740837	
Cluster 1: 
CPU_Freq[2035200]: 0.102521	0.0530688	0.0342244	
CPU_Freq[1881600]: 0.106445	0.0551325	0.0346387	
CPU_Freq[1728000]: 0.111094	0.0575794	0.0351424	
CPU_Freq[1574400]: 0.116687	0.060527	0.0357666	
CPU_Freq[1420800]: 0.123544	0.0641461	0.0365584	
CPU_Freq[1267200]: 0.132147	0.0686947	0.037592	
CPU_Freq[1113600]: 0.14326	0.0745822	0.0389912	
CPU_Freq[960000]: 0.158161	0.0824977	0.0409759	
CPU_Freq[806400]: 0.179174	0.0936985	0.0439747	
CPU_Freq[652800]: 0.210993	0.110739	0.0489282	
CPU_Freq[499200]: 0.264697	0.139695	0.058297	
CPU_Freq[345600]: 0.373911	0.199207	0.0806005	
Memory Frequency: 1062400000: 
Cluster 0: 
CPU_Freq[2035200]: 0.0519154	0.0195606	
CPU_Freq[1881600]: 0.0523598	0.0204961	
CPU_Freq[1728000]: 0.0528947	0.0215979	
CPU_Freq[1574400]: 0.0535503	0.0229147	
CPU_Freq[1420800]: 0.0543716	0.0245162	
CPU_Freq[1267200]: 0.0554287	0.026506	
CPU_Freq[1113600]: 0.0568363	0.0290446	
CPU_Freq[960000]: 0.0587955	0.0323956	
CPU_Freq[806400]: 0.0616904	0.0370232	
CPU_Freq[652800]: 0.0663465	0.0438284	
CPU_Freq[499200]: 0.0748708	0.0548215	
CPU_Freq[345600]: 0.0943531	0.0755863	
Cluster 1: 
CPU_Freq[2035200]: 0.111673	0.0579223	0.0390457	
CPU_Freq[1881600]: 0.11553	0.0599283	0.0394155	
CPU_Freq[1728000]: 0.120099	0.0623074	0.0398668	
CPU_Freq[1574400]: 0.125598	0.0651739	0.0404284	
CPU_Freq[1420800]: 0.13234	0.0686943	0.0411441	
CPU_Freq[1267200]: 0.1408	0.0731204	0.0420832	
CPU_Freq[1113600]: 0.15173	0.0788514	0.0433617	
CPU_Freq[960000]: 0.16639	0.0865605	0.0451871	
CPU_Freq[806400]: 0.187071	0.0974763	0.0479659	
CPU_Freq[652800]: 0.2184	0.114097	0.052596	
CPU_Freq[499200]: 0.271314	0.142376	0.0614422	
CPU_Freq[345600]: 0.379035	0.200609	0.0827587	
Memory Frequency: 800000000: 
Cluster 0: 
CPU_Freq[2035200]: 0.0691119	0.0236259	
CPU_Freq[1881600]: 0.0694944	0.0245343	
CPU_Freq[1728000]: 0.0699565	0.0256041	
CPU_Freq[1574400]: 0.070525	0.0268827	
CPU_Freq[1420800]: 0.0712404	0.0284378	
CPU_Freq[1267200]: 0.0721659	0.0303698	
CPU_Freq[1113600]: 0.0734056	0.0328349	
CPU_Freq[960000]: 0.0751432	0.0360887	
CPU_Freq[806400]: 0.077732	0.0405821	
CPU_Freq[652800]: 0.081938	0.0471901	
CPU_Freq[499200]: 0.0897353	0.0578644	
CPU_Freq[345600]: 0.107844	0.0780272	
Cluster 1: 
CPU_Freq[2035200]: 0.127066	0.0664226	0.0472557	
CPU_Freq[1881600]: 0.130813	0.068335	0.0475534	
CPU_Freq[1728000]: 0.135254	0.0706038	0.0479196	
CPU_Freq[1574400]: 0.140598	0.0733385	0.0483795	
CPU_Freq[1420800]: 0.147153	0.0766987	0.0489715	
CPU_Freq[1267200]: 0.155381	0.0809256	0.049757	
CPU_Freq[1113600]: 0.166015	0.0864026	0.0508395	
CPU_Freq[960000]: 0.180283	0.0937764	0.0524062	
CPU_Freq[806400]: 0.200423	0.104229	0.0548277	
CPU_Freq[652800]: 0.230957	0.120169	0.0589323	
CPU_Freq[499200]: 0.282587	0.147347	0.0669297	
CPU_Freq[345600]: 0.387882	0.203502	0.086643	

---------- CPU Power Predictions ---------- 
Memory Frequency: 1866000000: 
Cluster 0: 
CPU_Freq[2035200]: 3.55802	3.33325	
CPU_Freq[1881600]: 3.19062	2.90256	
CPU_Freq[1728000]: 2.84721	2.5124	
CPU_Freq[1574400]: 2.52781	2.16278	
CPU_Freq[1420800]: 2.23241	1.85369	
CPU_Freq[1267200]: 1.96101	1.58513	
CPU_Freq[1113600]: 1.71362	1.35711	
CPU_Freq[960000]: 1.49022	1.16962	
CPU_Freq[806400]: 1.29083	1.02266	
CPU_Freq[652800]: 1.11544	0.916239	
CPU_Freq[499200]: 0.964059	0.850351	
CPU_Freq[345600]: 0.836676	0.824997	
Cluster 1: 
CPU_Freq[2035200]: 1.16151	1.59759	1.93641	
CPU_Freq[1881600]: 1.02119	1.40228	1.67002	
CPU_Freq[1728000]: 0.894049	1.22469	1.43149	
CPU_Freq[1574400]: 0.780094	1.06481	1.22084	
CPU_Freq[1420800]: 0.67932	0.922651	1.03806	
CPU_Freq[1267200]: 0.591729	0.798201	0.88316	
CPU_Freq[1113600]: 0.517319	0.691465	0.75613	
CPU_Freq[960000]: 0.456092	0.602443	0.656974	
CPU_Freq[806400]: 0.408047	0.531134	0.585691	
CPU_Freq[652800]: 0.373183	0.477539	0.542282	
CPU_Freq[499200]: 0.351502	0.441657	0.526747	
CPU_Freq[345600]: 0.343003	0.423489	0.539085	
Memory Frequency: 1600000000: 
Cluster 0: 
CPU_Freq[2035200]: 3.55802	3.33325	
CPU_Freq[1881600]: 3.19062	2.90256	
CPU_Freq[1728000]: 2.84721	2.5124	
CPU_Freq[1574400]: 2.52781	2.16278	
CPU_Freq[1420800]: 2.23241	1.85369	
CPU_Freq[1267200]: 1.96101	1.58513	
CPU_Freq[1113600]: 1.71362	1.35711	
CPU_Freq[960000]: 1.49022	1.16962	
CPU_Freq[806400]: 1.29083	1.02266	
CPU_Freq[652800]: 1.11544	0.916239	
CPU_Freq[499200]: 0.964059	0.850351	
CPU_Freq[345600]: 0.836676	0.824997	
Cluster 1: 
CPU_Freq[2035200]: 1.16151	1.59759	1.93641	
CPU_Freq[1881600]: 1.02119	1.40228	1.67002	
CPU_Freq[1728000]: 0.894049	1.22469	1.43149	
CPU_Freq[1574400]: 0.780094	1.06481	1.22084	
CPU_Freq[1420800]: 0.67932	0.922651	1.03806	
CPU_Freq[1267200]: 0.591729	0.798201	0.88316	
CPU_Freq[1113600]: 0.517319	0.691465	0.75613	
CPU_Freq[960000]: 0.456092	0.602443	0.656974	
CPU_Freq[806400]: 0.408047	0.531134	0.585691	
CPU_Freq[652800]: 0.373183	0.477539	0.542282	
CPU_Freq[499200]: 0.351502	0.441657	0.526747	
CPU_Freq[345600]: 0.343003	0.423489	0.539085	
Memory Frequency: 1331200000: 
Cluster 0: 
CPU_Freq[2035200]: 3.55802	3.33325	
CPU_Freq[1881600]: 3.19062	2.90256	
CPU_Freq[1728000]: 2.84721	2.5124	
CPU_Freq[1574400]: 2.52781	2.16278	
CPU_Freq[1420800]: 2.23241	1.85369	
CPU_Freq[1267200]: 1.96101	1.58513	
CPU_Freq[1113600]: 1.71362	1.35711	
CPU_Freq[960000]: 1.49022	1.16962	
CPU_Freq[806400]: 1.29083	1.02266	
CPU_Freq[652800]: 1.11544	0.916239	
CPU_Freq[499200]: 0.964059	0.850351	
CPU_Freq[345600]: 0.836676	0.824997	
Cluster 1: 
CPU_Freq[2035200]: 1.16151	1.59759	1.93641	
CPU_Freq[1881600]: 1.02119	1.40228	1.67002	
CPU_Freq[1728000]: 0.894049	1.22469	1.43149	
CPU_Freq[1574400]: 0.780094	1.06481	1.22084	
CPU_Freq[1420800]: 0.67932	0.922651	1.03806	
CPU_Freq[1267200]: 0.591729	0.798201	0.88316	
CPU_Freq[1113600]: 0.517319	0.691465	0.75613	
CPU_Freq[960000]: 0.456092	0.602443	0.656974	
CPU_Freq[806400]: 0.408047	0.531134	0.585691	
CPU_Freq[652800]: 0.373183	0.477539	0.542282	
CPU_Freq[499200]: 0.351502	0.441657	0.526747	
CPU_Freq[345600]: 0.343003	0.423489	0.539085	
Memory Frequency: 1062400000: 
Cluster 0: 
CPU_Freq[2035200]: 3.55802	3.33325	
CPU_Freq[1881600]: 3.19062	2.90256	
CPU_Freq[1728000]: 2.84721	2.5124	
CPU_Freq[1574400]: 2.52781	2.16278	
CPU_Freq[1420800]: 2.23241	1.85369	
CPU_Freq[1267200]: 1.96101	1.58513	
CPU_Freq[1113600]: 1.71362	1.35711	
CPU_Freq[960000]: 1.49022	1.16962	
CPU_Freq[806400]: 1.29083	1.02266	
CPU_Freq[652800]: 1.11544	0.916239	
CPU_Freq[499200]: 0.964059	0.850351	
CPU_Freq[345600]: 0.836676	0.824997	
Cluster 1: 
CPU_Freq[2035200]: 1.16151	1.59759	1.93641	
CPU_Freq[1881600]: 1.02119	1.40228	1.67002	
CPU_Freq[1728000]: 0.894049	1.22469	1.43149	
CPU_Freq[1574400]: 0.780094	1.06481	1.22084	
CPU_Freq[1420800]: 0.67932	0.922651	1.03806	
CPU_Freq[1267200]: 0.591729	0.798201	0.88316	
CPU_Freq[1113600]: 0.517319	0.691465	0.75613	
CPU_Freq[960000]: 0.456092	0.602443	0.656974	
CPU_Freq[806400]: 0.408047	0.531134	0.585691	
CPU_Freq[652800]: 0.373183	0.477539	0.542282	
CPU_Freq[499200]: 0.351502	0.441657	0.526747	
CPU_Freq[345600]: 0.343003	0.423489	0.539085	
Memory Frequency: 800000000: 
Cluster 0: 
CPU_Freq[2035200]: 3.55802	3.33325	
CPU_Freq[1881600]: 3.19062	2.90256	
CPU_Freq[1728000]: 2.84721	2.5124	
CPU_Freq[1574400]: 2.52781	2.16278	
CPU_Freq[1420800]: 2.23241	1.85369	
CPU_Freq[1267200]: 1.96101	1.58513	
CPU_Freq[1113600]: 1.71362	1.35711	
CPU_Freq[960000]: 1.49022	1.16962	
CPU_Freq[806400]: 1.29083	1.02266	
CPU_Freq[652800]: 1.11544	0.916239	
CPU_Freq[499200]: 0.964059	0.850351	
CPU_Freq[345600]: 0.836676	0.824997	
Cluster 1: 
CPU_Freq[2035200]: 1.16151	1.59759	1.93641	
CPU_Freq[1881600]: 1.02119	1.40228	1.67002	
CPU_Freq[1728000]: 0.894049	1.22469	1.43149	
CPU_Freq[1574400]: 0.780094	1.06481	1.22084	
CPU_Freq[1420800]: 0.67932	0.922651	1.03806	
CPU_Freq[1267200]: 0.591729	0.798201	0.88316	
CPU_Freq[1113600]: 0.517319	0.691465	0.75613	
CPU_Freq[960000]: 0.456092	0.602443	0.656974	
CPU_Freq[806400]: 0.408047	0.531134	0.585691	
CPU_Freq[652800]: 0.373183	0.477539	0.542282	
CPU_Freq[499200]: 0.351502	0.441657	0.526747	
CPU_Freq[345600]: 0.343003	0.423489	0.539085	

---------- Memory Power Predictions ---------- 
Memory Frequency: 1866000000: 
Cluster 0: 
CPU_Freq[2035200]: 5.63339	4.96997	
CPU_Freq[1881600]: 5.37389	4.74259	
CPU_Freq[1728000]: 5.11155	4.51113	
CPU_Freq[1574400]: 4.84637	4.27559	
CPU_Freq[1420800]: 4.57834	4.03597	
CPU_Freq[1267200]: 4.30747	3.79227	
CPU_Freq[1113600]: 4.03376	3.54449	
CPU_Freq[960000]: 3.75721	3.29263	
CPU_Freq[806400]: 3.47782	3.03669	
CPU_Freq[652800]: 3.19559	2.77668	
CPU_Freq[499200]: 2.91052	2.51258	
CPU_Freq[345600]: 2.6226	2.2444	
Cluster 1: 
CPU_Freq[2035200]: 1.65383	1.72969	2.35908	
CPU_Freq[1881600]: 1.6396	1.71726	2.32311	
CPU_Freq[1728000]: 1.62353	1.70192	2.28525	
CPU_Freq[1574400]: 1.60562	1.68368	2.24551	
CPU_Freq[1420800]: 1.58588	1.66253	2.20387	
CPU_Freq[1267200]: 1.56429	1.63848	2.16035	
CPU_Freq[1113600]: 1.54087	1.61152	2.11494	
CPU_Freq[960000]: 1.5156	1.58166	2.06764	
CPU_Freq[806400]: 1.4885	1.5489	2.01845	
CPU_Freq[652800]: 1.45956	1.51323	1.96738	
CPU_Freq[499200]: 1.42878	1.47466	1.91441	
CPU_Freq[345600]: 1.39616	1.43318	1.85956	
Memory Frequency: 1600000000: 
Cluster 0: 
CPU_Freq[2035200]: 5.3916	4.68121	
CPU_Freq[1881600]: 5.13198	4.4547	
CPU_Freq[1728000]: 4.86951	4.2241	
CPU_Freq[1574400]: 4.6042	3.98942	
CPU_Freq[1420800]: 4.33606	3.75066	
CPU_Freq[1267200]: 4.06507	3.50783	
CPU_Freq[1113600]: 3.79124	3.26091	
CPU_Freq[960000]: 3.51456	3.00992	
CPU_Freq[806400]: 3.23505	2.75484	
CPU_Freq[652800]: 2.9527	2.49569	
CPU_Freq[499200]: 2.6675	2.23246	
CPU_Freq[345600]: 2.37946	1.96514	
Cluster 1: 
CPU_Freq[2035200]: 1.25185	1.33821	1.97407	
CPU_Freq[1881600]: 1.23762	1.32578	1.93809	
CPU_Freq[1728000]: 1.22155	1.31045	1.90023	
CPU_Freq[1574400]: 1.20364	1.29221	1.86048	
CPU_Freq[1420800]: 1.18389	1.27107	1.81884	
CPU_Freq[1267200]: 1.16231	1.24702	1.77532	
CPU_Freq[1113600]: 1.13888	1.22007	1.7299	
CPU_Freq[960000]: 1.11362	1.19021	1.6826	
CPU_Freq[806400]: 1.08652	1.15745	1.6334	
CPU_Freq[652800]: 1.05757	1.12179	1.58232	
CPU_Freq[499200]: 1.02679	1.08322	1.52936	
CPU_Freq[345600]: 0.994176	1.04175	1.4745	
Memory Frequency: 1331200000: 
Cluster 0: 
CPU_Freq[2035200]: 5.26236	4.49489	
CPU_Freq[1881600]: 5.00261	4.26924	
CPU_Freq[1728000]: 4.74003	4.03952	
CPU_Freq[1574400]: 4.4746	3.80571	
CPU_Freq[1420800]: 4.20633	3.56783	
CPU_Freq[1267200]: 3.93521	3.32587	
CPU_Freq[1113600]: 3.66126	3.07982	
CPU_Freq[960000]: 3.38446	2.8297	
CPU_Freq[806400]: 3.10483	2.5755	
CPU_Freq[652800]: 2.82235	2.31722	
CPU_Freq[499200]: 2.53703	2.05486	
CPU_Freq[345600]: 2.24887	1.78842	
Cluster 1: 
CPU_Freq[2035200]: 0.980206	1.0671	1.71224	
CPU_Freq[1881600]: 0.965975	1.05468	1.67626	
CPU_Freq[1728000]: 0.949905	1.03935	1.6384	
CPU_Freq[1574400]: 0.931996	1.02111	1.59864	
CPU_Freq[1420800]: 0.912249	0.999976	1.557	
CPU_Freq[1267200]: 0.890663	0.975934	1.51347	
CPU_Freq[1113600]: 0.867238	0.948988	1.46805	
CPU_Freq[960000]: 0.841974	0.919136	1.42074	
CPU_Freq[806400]: 0.814872	0.886381	1.37154	
CPU_Freq[652800]: 0.785931	0.850721	1.32046	
CPU_Freq[499200]: 0.755151	0.812156	1.26748	
CPU_Freq[345600]: 0.722532	0.770687	1.21262	
Memory Frequency: 1062400000: 
Cluster 0: 
CPU_Freq[2035200]: 5.24883	4.41459	
CPU_Freq[1881600]: 4.98896	4.18981	
CPU_Freq[1728000]: 4.72625	3.96096	
CPU_Freq[1574400]: 4.46069	3.72803	
CPU_Freq[1420800]: 4.1923	3.49102	
CPU_Freq[1267200]: 3.92106	3.24993	
CPU_Freq[1113600]: 3.64699	3.00476	
CPU_Freq[960000]: 3.37007	2.75551	
CPU_Freq[806400]: 3.09031	2.50218	
CPU_Freq[652800]: 2.8077	2.24477	
CPU_Freq[499200]: 2.52226	1.98328	
CPU_Freq[345600]: 2.23398	1.71772	
Cluster 1: 
CPU_Freq[2035200]: 0.843838	0.921135	1.57832	
CPU_Freq[1881600]: 0.829607	0.908715	1.54234	
CPU_Freq[1728000]: 0.813537	0.893391	1.50447	
CPU_Freq[1574400]: 0.795628	0.875162	1.46471	
CPU_Freq[1420800]: 0.775881	0.854029	1.42306	
CPU_Freq[1267200]: 0.754295	0.829992	1.37952	
CPU_Freq[1113600]: 0.73087	0.80305	1.3341	
CPU_Freq[960000]: 0.705607	0.773203	1.28679	
CPU_Freq[806400]: 0.678504	0.740452	1.23759	
CPU_Freq[652800]: 0.649563	0.704796	1.1865	
CPU_Freq[499200]: 0.618783	0.666236	1.13352	
CPU_Freq[345600]: 0.586164	0.624771	1.07865	
Memory Frequency: 800000000: 
Cluster 0: 
CPU_Freq[2035200]: 5.34722	4.43847	
CPU_Freq[1881600]: 5.08723	4.21455	
CPU_Freq[1728000]: 4.8244	3.98655	
CPU_Freq[1574400]: 4.55873	3.75447	
CPU_Freq[1420800]: 4.29021	3.51831	
CPU_Freq[1267200]: 4.01886	3.27807	
CPU_Freq[1113600]: 3.74466	3.03375	
CPU_Freq[960000]: 3.46762	2.78535	
CPU_Freq[806400]: 3.18774	2.53288	
CPU_Freq[652800]: 2.90502	2.27632	
CPU_Freq[499200]: 2.61945	2.01568	
CPU_Freq[345600]: 2.33105	1.75097	
Cluster 1: 
CPU_Freq[2035200]: 0.841201	0.899355	1.57096	
CPU_Freq[1881600]: 0.826969	0.88694	1.53497	
CPU_Freq[1728000]: 0.8109	0.87162	1.4971	
CPU_Freq[1574400]: 0.792991	0.853396	1.45734	
CPU_Freq[1420800]: 0.773244	0.832267	1.41568	
CPU_Freq[1267200]: 0.751657	0.808234	1.37214	
CPU_Freq[1113600]: 0.728233	0.781296	1.32671	
CPU_Freq[960000]: 0.702969	0.751454	1.2794	
CPU_Freq[806400]: 0.675867	0.718707	1.23019	
CPU_Freq[652800]: 0.646926	0.683056	1.1791	
CPU_Freq[499200]: 0.616146	0.6445	1.12612	
CPU_Freq[345600]: 0.583527	0.603039	1.07124	

[Congratulations!] All the training Phase finished. Training finished time: 1686226845690. Set the CPU frequency of all clusters back to the highest frequency
[DEBUG] Work stealing from cluster 1 to cluster 0
[DEBUG] The best resource width for CP tasks on cluster 1 and 2 are <2> and <1>
[DEBUG] Task exec_time on cluster 1: 0.0142453, task exec_time on cluster 2: 0.0858355
[DEBUG] Using <2> cores in cluster 1 and <4> cores in cluster 2 achieves the lowest predicted EDP.
[DEBUG] For CP tasks, 60.1019% of tasks should be scheduled to cluster 0
[DEBUG] For CP tasks, 39.8981% of tasks should be scheduled to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 1 to cluster 0
[DEBUG] Work stealing from cluster 1 to cluster 0
[DEBUG] Work stealing from cluster 1 to cluster 0
[DEBUG] Work stealing from cluster 1 to cluster 0
[DEBUG] Work stealing from cluster 1 to cluster 0
[DEBUG] Work stealing from cluster 1 to cluster 0
[DEBUG] Work stealing from cluster 1 to cluster 0
[DEBUG] Work stealing from cluster 1 to cluster 0
[DEBUG] Work stealing from cluster 1 to cluster 0
[DEBUG] Work stealing from cluster 1 to cluster 0
[DEBUG] Work stealing from cluster 1 to cluster 0
[DEBUG] Work stealing from cluster 1 to cluster 0
[DEBUG] Work stealing from cluster 1 to cluster 0
[DEBUG] Work stealing from cluster 1 to cluster 0
[DEBUG] Work stealing from cluster 1 to cluster 0
[DEBUG] Work stealing from cluster 1 to cluster 0
[DEBUG] Work stealing from cluster 1 to cluster 0
[DEBUG] Work stealing from cluster 1 to cluster 0
[DEBUG] Work stealing from cluster 1 to cluster 0
[DEBUG] Work stealing from cluster 1 to cluster 0
[DEBUG] Work stealing from cluster 1 to cluster 0
[DEBUG] Work stealing from cluster 1 to cluster 0
[DEBUG] Work stealing from cluster 1 to cluster 0
[DEBUG] Work stealing from cluster 1 to cluster 0
[DEBUG] Work stealing from cluster 1 to cluster 0
[DEBUG] Work stealing from cluster 1 to cluster 0
[DEBUG] Work stealing from cluster 1 to cluster 0
[DEBUG] Work stealing from cluster 1 to cluster 0
[DEBUG] The best resource width for CP tasks on cluster 1 and 2 are <2> and <4>
[DEBUG] Task exec_time on cluster 1: 0.014007, task exec_time on cluster 2: 0.0216472
[DEBUG] Using <2> cores in cluster 1 and <4> cores in cluster 2 achieves the lowest predicted EDP.
[DEBUG] For CP tasks, 60.7142% of tasks should be scheduled to cluster 0
[DEBUG] For CP tasks, 39.2858% of tasks should be scheduled to cluster 1
[DEBUG] The best resource width for CP tasks on cluster 1 and 2 are <2> and <2>
[DEBUG] Task exec_time on cluster 1: 0.0141932, task exec_time on cluster 2: 0.0482294
[DEBUG] Using <2> cores in cluster 1 and <4> cores in cluster 2 achieves the lowest predicted EDP.
[DEBUG] For CP tasks, 62.9497% of tasks should be scheduled to cluster 0
[DEBUG] For CP tasks, 37.0503% of tasks should be scheduled to cluster 1
[DEBUG] Work stealing from cluster 1 to cluster 0
[DEBUG] Work stealing from cluster 1 to cluster 0
[DEBUG] Work stealing from cluster 1 to cluster 0
[DEBUG] Work stealing from cluster 1 to cluster 0
[DEBUG] Work stealing from cluster 1 to cluster 0
[DEBUG] Work stealing from cluster 1 to cluster 0
[DEBUG] Work stealing from cluster 1 to cluster 0
[DEBUG] Work stealing from cluster 1 to cluster 0
[DEBUG] Work stealing from cluster 1 to cluster 0
[DEBUG] Work stealing from cluster 1 to cluster 0
[DEBUG] Work stealing from cluster 1 to cluster 0
[DEBUG] Work stealing from cluster 1 to cluster 0
[DEBUG] Work stealing from cluster 1 to cluster 0
[DEBUG] Work stealing from cluster 1 to cluster 0
[DEBUG] Work stealing from cluster 1 to cluster 0
[DEBUG] Work stealing from cluster 1 to cluster 0
[DEBUG] Work stealing from cluster 1 to cluster 0
[DEBUG] Work stealing from cluster 1 to cluster 0
[DEBUG] Work stealing from cluster 1 to cluster 0
[DEBUG] Work stealing from cluster 1 to cluster 0
[DEBUG] Work stealing from cluster 1 to cluster 0
[DEBUG] Work stealing from cluster 1 to cluster 0
[DEBUG] Work stealing from cluster 1 to cluster 0
[DEBUG] Work stealing from cluster 1 to cluster 0
[DEBUG] Work stealing from cluster 1 to cluster 0
[DEBUG] Work stealing from cluster 1 to cluster 0
[DEBUG] Work stealing from cluster 1 to cluster 0
[DEBUG] Work stealing from cluster 1 to cluster 0
[DEBUG] Work stealing from cluster 1 to cluster 0
[DEBUG] Work stealing from cluster 1 to cluster 0
[DEBUG] Work stealing from cluster 1 to cluster 0
[DEBUG] Work stealing from cluster 1 to cluster 0
[DEBUG] Work stealing from cluster 1 to cluster 0
[DEBUG] Work stealing from cluster 1 to cluster 0
[DEBUG] Work stealing from cluster 1 to cluster 0
[DEBUG] Work stealing from cluster 1 to cluster 0
[DEBUG] Work stealing from cluster 1 to cluster 0
[DEBUG] Work stealing from cluster 1 to cluster 0
[DEBUG] Work stealing from cluster 1 to cluster 0
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] The best resource width for CP tasks on cluster 1 and 2 are <2> and <2>
[DEBUG] Task exec_time on cluster 1: 0.0140739, task exec_time on cluster 2: 0.0503903
[DEBUG] Using <2> cores in cluster 1 and <4> cores in cluster 2 achieves the lowest predicted EDP.
[DEBUG] For CP tasks, 64.1604% of tasks should be scheduled to cluster 0
[DEBUG] For CP tasks, 35.8396% of tasks should be scheduled to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] The best resource width for CP tasks on cluster 1 and 2 are <2> and <2>
[DEBUG] Task exec_time on cluster 1: 0.0128239, task exec_time on cluster 2: 0.0640226
[DEBUG] Using <2> cores in cluster 1 and <4> cores in cluster 2 achieves the lowest predicted EDP.
[DEBUG] For CP tasks, 71.3977% of tasks should be scheduled to cluster 0
[DEBUG] For CP tasks, 28.6023% of tasks should be scheduled to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] The best resource width for CP tasks on cluster 1 and 2 are <2> and <2>
[DEBUG] Task exec_time on cluster 1: 0.0140959, task exec_time on cluster 2: 0.0592768
[DEBUG] Using <2> cores in cluster 1 and <4> cores in cluster 2 achieves the lowest predicted EDP.
[DEBUG] For CP tasks, 67.7691% of tasks should be scheduled to cluster 0
[DEBUG] For CP tasks, 32.2308% of tasks should be scheduled to cluster 1
[DEBUG] Work stealing from cluster 1 to cluster 0
[DEBUG] Work stealing from cluster 1 to cluster 0
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 1 to cluster 0
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] The best resource width for CP tasks on cluster 1 and 2 are <2> and <2>
[DEBUG] Task exec_time on cluster 1: 0.0140255, task exec_time on cluster 2: 0.0670232
[DEBUG] Using <2> cores in cluster 1 and <4> cores in cluster 2 achieves the lowest predicted EDP.
[DEBUG] For CP tasks, 70.4957% of tasks should be scheduled to cluster 0
[DEBUG] For CP tasks, 29.5043% of tasks should be scheduled to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] The best resource width for CP tasks on cluster 1 and 2 are <2> and <2>
[DEBUG] Task exec_time on cluster 1: 0.0139251, task exec_time on cluster 2: 0.0456385
[DEBUG] Using <2> cores in cluster 1 and <4> cores in cluster 2 achieves the lowest predicted EDP.
[DEBUG] For CP tasks, 62.1028% of tasks should be scheduled to cluster 0
[DEBUG] For CP tasks, 37.8972% of tasks should be scheduled to cluster 1
[DEBUG] Work stealing from cluster 1 to cluster 0
[DEBUG] Work stealing from cluster 1 to cluster 0
[DEBUG] Work stealing from cluster 1 to cluster 0
[DEBUG] Work stealing from cluster 1 to cluster 0
[DEBUG] Work stealing from cluster 1 to cluster 0
[DEBUG] Work stealing from cluster 1 to cluster 0
[DEBUG] Work stealing from cluster 1 to cluster 0
[DEBUG] Work stealing from cluster 1 to cluster 0
[DEBUG] Work stealing from cluster 1 to cluster 0
[DEBUG] Work stealing from cluster 1 to cluster 0
[DEBUG] Work stealing from cluster 1 to cluster 0
[DEBUG] Work stealing from cluster 1 to cluster 0
[DEBUG] Work stealing from cluster 1 to cluster 0
[DEBUG] Work stealing from cluster 1 to cluster 0
[DEBUG] Work stealing from cluster 1 to cluster 0
[DEBUG] Work stealing from cluster 1 to cluster 0
[DEBUG] Work stealing from cluster 1 to cluster 0
[DEBUG] Work stealing from cluster 1 to cluster 0
[DEBUG] Work stealing from cluster 1 to cluster 0
[DEBUG] Work stealing from cluster 1 to cluster 0
[DEBUG] Work stealing from cluster 1 to cluster 0
[DEBUG] Work stealing from cluster 1 to cluster 0
[DEBUG] Work stealing from cluster 1 to cluster 0
[DEBUG] Work stealing from cluster 1 to cluster 0
[DEBUG] Work stealing from cluster 1 to cluster 0
[DEBUG] Work stealing from cluster 1 to cluster 0
[DEBUG] The best resource width for CP tasks on cluster 1 and 2 are <2> and <2>
[DEBUG] Task exec_time on cluster 1: 0.0142683, task exec_time on cluster 2: 0.0666463
[DEBUG] Using <2> cores in cluster 1 and <4> cores in cluster 2 achieves the lowest predicted EDP.
[DEBUG] For CP tasks, 70.0192% of tasks should be scheduled to cluster 0
[DEBUG] For CP tasks, 29.9808% of tasks should be scheduled to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] The best resource width for CP tasks on cluster 1 and 2 are <2> and <2>
[DEBUG] Task exec_time on cluster 1: 0.014497, task exec_time on cluster 2: 0.0634333
[DEBUG] Using <2> cores in cluster 1 and <4> cores in cluster 2 achieves the lowest predicted EDP.
[DEBUG] For CP tasks, 68.6305% of tasks should be scheduled to cluster 0
[DEBUG] For CP tasks, 31.3695% of tasks should be scheduled to cluster 1
[DEBUG] Work stealing from cluster 1 to cluster 0
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] The best resource width for CP tasks on cluster 1 and 2 are <2> and <2>
[DEBUG] Task exec_time on cluster 1: 0.0142057, task exec_time on cluster 2: 0.0573912
[DEBUG] Using <2> cores in cluster 1 and <4> cores in cluster 2 achieves the lowest predicted EDP.
[DEBUG] For CP tasks, 66.8875% of tasks should be scheduled to cluster 0
[DEBUG] For CP tasks, 33.1125% of tasks should be scheduled to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 1 to cluster 0
[DEBUG] Work stealing from cluster 1 to cluster 0
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] The best resource width for CP tasks on cluster 1 and 2 are <2> and <2>
[DEBUG] Task exec_time on cluster 1: 0.0137272, task exec_time on cluster 2: 0.0551638
[DEBUG] Using <2> cores in cluster 1 and <4> cores in cluster 2 achieves the lowest predicted EDP.
[DEBUG] For CP tasks, 66.7695% of tasks should be scheduled to cluster 0
[DEBUG] For CP tasks, 33.2305% of tasks should be scheduled to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] The best resource width for CP tasks on cluster 1 and 2 are <2> and <2>
[DEBUG] Task exec_time on cluster 1: 0.0139373, task exec_time on cluster 2: 0.0534187
[DEBUG] Using <2> cores in cluster 1 and <4> cores in cluster 2 achieves the lowest predicted EDP.
[DEBUG] For CP tasks, 65.7111% of tasks should be scheduled to cluster 0
[DEBUG] For CP tasks, 34.289% of tasks should be scheduled to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 1 to cluster 0
[DEBUG] Work stealing from cluster 1 to cluster 0
[DEBUG] The best resource width for CP tasks on cluster 1 and 2 are <2> and <1>
[DEBUG] Task exec_time on cluster 1: 0.0140808, task exec_time on cluster 2: 0.134989
[DEBUG] Using <2> cores in cluster 1 and <4> cores in cluster 2 achieves the lowest predicted EDP.
[DEBUG] For CP tasks, 70.5595% of tasks should be scheduled to cluster 0
[DEBUG] For CP tasks, 29.4405% of tasks should be scheduled to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] The best resource width for CP tasks on cluster 1 and 2 are <2> and <1>
[DEBUG] Task exec_time on cluster 1: 0.0139013, task exec_time on cluster 2: 0.111098
[DEBUG] Using <2> cores in cluster 1 and <4> cores in cluster 2 achieves the lowest predicted EDP.
[DEBUG] For CP tasks, 66.6442% of tasks should be scheduled to cluster 0
[DEBUG] For CP tasks, 33.3558% of tasks should be scheduled to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 1 to cluster 0
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] The best resource width for CP tasks on cluster 1 and 2 are <2> and <1>
[DEBUG] Task exec_time on cluster 1: 0.0128735, task exec_time on cluster 2: 0.112486
[DEBUG] Using <2> cores in cluster 1 and <4> cores in cluster 2 achieves the lowest predicted EDP.
[DEBUG] For CP tasks, 68.5974% of tasks should be scheduled to cluster 0
[DEBUG] For CP tasks, 31.4026% of tasks should be scheduled to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] The best resource width for CP tasks on cluster 1 and 2 are <2> and <1>
[DEBUG] Task exec_time on cluster 1: 0.0120447, task exec_time on cluster 2: 0.104579
[DEBUG] Using <2> cores in cluster 1 and <4> cores in cluster 2 achieves the lowest predicted EDP.
[DEBUG] For CP tasks, 68.4606% of tasks should be scheduled to cluster 0
[DEBUG] For CP tasks, 31.5394% of tasks should be scheduled to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 1 to cluster 0
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] The best resource width for CP tasks on cluster 1 and 2 are <2> and <1>
[DEBUG] Task exec_time on cluster 1: 0.0139133, task exec_time on cluster 2: 0.108781
[DEBUG] Using <2> cores in cluster 1 and <4> cores in cluster 2 achieves the lowest predicted EDP.
[DEBUG] For CP tasks, 66.1547% of tasks should be scheduled to cluster 0
[DEBUG] For CP tasks, 33.8453% of tasks should be scheduled to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] The best resource width for CP tasks on cluster 1 and 2 are <2> and <1>
[DEBUG] Task exec_time on cluster 1: 0.0137452, task exec_time on cluster 2: 0.116855
[DEBUG] Using <2> cores in cluster 1 and <4> cores in cluster 2 achieves the lowest predicted EDP.
[DEBUG] For CP tasks, 68.0038% of tasks should be scheduled to cluster 0
[DEBUG] For CP tasks, 31.9962% of tasks should be scheduled to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] The best resource width for CP tasks on cluster 1 and 2 are <2> and <1>
[DEBUG] Task exec_time on cluster 1: 0.0128677, task exec_time on cluster 2: 0.107994
[DEBUG] Using <2> cores in cluster 1 and <4> cores in cluster 2 achieves the lowest predicted EDP.
[DEBUG] For CP tasks, 67.7228% of tasks should be scheduled to cluster 0
[DEBUG] For CP tasks, 32.2772% of tasks should be scheduled to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 1 to cluster 0
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] The best resource width for CP tasks on cluster 1 and 2 are <2> and <1>
[DEBUG] Task exec_time on cluster 1: 0.0140323, task exec_time on cluster 2: 0.111351
[DEBUG] Using <2> cores in cluster 1 and <4> cores in cluster 2 achieves the lowest predicted EDP.
[DEBUG] For CP tasks, 66.4861% of tasks should be scheduled to cluster 0
[DEBUG] For CP tasks, 33.5139% of tasks should be scheduled to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] The best resource width for CP tasks on cluster 1 and 2 are <2> and <1>
[DEBUG] Task exec_time on cluster 1: 0.0140134, task exec_time on cluster 2: 0.115399
[DEBUG] Using <2> cores in cluster 1 and <4> cores in cluster 2 achieves the lowest predicted EDP.
[DEBUG] For CP tasks, 67.3067% of tasks should be scheduled to cluster 0
[DEBUG] For CP tasks, 32.6933% of tasks should be scheduled to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] The best resource width for CP tasks on cluster 1 and 2 are <2> and <1>
[DEBUG] Task exec_time on cluster 1: 0.0135867, task exec_time on cluster 2: 0.105225
[DEBUG] Using <2> cores in cluster 1 and <4> cores in cluster 2 achieves the lowest predicted EDP.
[DEBUG] For CP tasks, 65.9422% of tasks should be scheduled to cluster 0
[DEBUG] For CP tasks, 34.0578% of tasks should be scheduled to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] The best resource width for CP tasks on cluster 1 and 2 are <2> and <1>
[DEBUG] Task exec_time on cluster 1: 0.0139432, task exec_time on cluster 2: 0.134556
[DEBUG] Using <2> cores in cluster 1 and <4> cores in cluster 2 achieves the lowest predicted EDP.
[DEBUG] For CP tasks, 70.6966% of tasks should be scheduled to cluster 0
[DEBUG] For CP tasks, 29.3034% of tasks should be scheduled to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] The best resource width for CP tasks on cluster 1 and 2 are <2> and <1>
[DEBUG] Task exec_time on cluster 1: 0.0141179, task exec_time on cluster 2: 0.114985
[DEBUG] Using <2> cores in cluster 1 and <4> cores in cluster 2 achieves the lowest predicted EDP.
[DEBUG] For CP tasks, 67.0637% of tasks should be scheduled to cluster 0
[DEBUG] For CP tasks, 32.9363% of tasks should be scheduled to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] The best resource width for CP tasks on cluster 1 and 2 are <2> and <1>
[DEBUG] Task exec_time on cluster 1: 0.0135783, task exec_time on cluster 2: 0.104822
[DEBUG] Using <2> cores in cluster 1 and <4> cores in cluster 2 achieves the lowest predicted EDP.
[DEBUG] For CP tasks, 65.8699% of tasks should be scheduled to cluster 0
[DEBUG] For CP tasks, 34.1301% of tasks should be scheduled to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] The best resource width for CP tasks on cluster 1 and 2 are <2> and <1>
[DEBUG] Task exec_time on cluster 1: 0.0115007, task exec_time on cluster 2: 0.104167
[DEBUG] Using <2> cores in cluster 1 and <4> cores in cluster 2 achieves the lowest predicted EDP.
[DEBUG] For CP tasks, 69.3663% of tasks should be scheduled to cluster 0
[DEBUG] For CP tasks, 30.6337% of tasks should be scheduled to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] The best resource width for CP tasks on cluster 1 and 2 are <2> and <1>
[DEBUG] Task exec_time on cluster 1: 0.0139688, task exec_time on cluster 2: 0.116187
[DEBUG] Using <2> cores in cluster 1 and <4> cores in cluster 2 achieves the lowest predicted EDP.
[DEBUG] For CP tasks, 67.5261% of tasks should be scheduled to cluster 0
[DEBUG] For CP tasks, 32.4739% of tasks should be scheduled to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] The best resource width for CP tasks on cluster 1 and 2 are <2> and <1>
[DEBUG] Task exec_time on cluster 1: 0.0135011, task exec_time on cluster 2: 0.113109
[DEBUG] Using <2> cores in cluster 1 and <4> cores in cluster 2 achieves the lowest predicted EDP.
[DEBUG] For CP tasks, 67.684% of tasks should be scheduled to cluster 0
[DEBUG] For CP tasks, 32.316% of tasks should be scheduled to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] The best resource width for CP tasks on cluster 1 and 2 are <2> and <1>
[DEBUG] Task exec_time on cluster 1: 0.0129377, task exec_time on cluster 2: 0.124936
[DEBUG] Using <2> cores in cluster 1 and <4> cores in cluster 2 achieves the lowest predicted EDP.
[DEBUG] For CP tasks, 70.7104% of tasks should be scheduled to cluster 0
[DEBUG] For CP tasks, 29.2896% of tasks should be scheduled to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] The best resource width for CP tasks on cluster 1 and 2 are <2> and <1>
[DEBUG] Task exec_time on cluster 1: 0.0134917, task exec_time on cluster 2: 0.111803
[DEBUG] Using <2> cores in cluster 1 and <4> cores in cluster 2 achieves the lowest predicted EDP.
[DEBUG] For CP tasks, 67.4448% of tasks should be scheduled to cluster 0
[DEBUG] For CP tasks, 32.5552% of tasks should be scheduled to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] The best resource width for CP tasks on cluster 1 and 2 are <2> and <1>
[DEBUG] Task exec_time on cluster 1: 0.013349, task exec_time on cluster 2: 0.103858
[DEBUG] Using <2> cores in cluster 1 and <4> cores in cluster 2 achieves the lowest predicted EDP.
[DEBUG] For CP tasks, 66.0448% of tasks should be scheduled to cluster 0
[DEBUG] For CP tasks, 33.9552% of tasks should be scheduled to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] The best resource width for CP tasks on cluster 1 and 2 are <2> and <1>
[DEBUG] Task exec_time on cluster 1: 0.0134636, task exec_time on cluster 2: 0.107347
[DEBUG] Using <2> cores in cluster 1 and <4> cores in cluster 2 achieves the lowest predicted EDP.
[DEBUG] For CP tasks, 66.5919% of tasks should be scheduled to cluster 0
[DEBUG] For CP tasks, 33.4082% of tasks should be scheduled to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] The best resource width for CP tasks on cluster 1 and 2 are <2> and <1>
[DEBUG] Task exec_time on cluster 1: 0.0141119, task exec_time on cluster 2: 0.107183
[DEBUG] Using <2> cores in cluster 1 and <4> cores in cluster 2 achieves the lowest predicted EDP.
[DEBUG] For CP tasks, 65.5031% of tasks should be scheduled to cluster 0
[DEBUG] For CP tasks, 34.4969% of tasks should be scheduled to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 1 to cluster 0
[DEBUG] Work stealing from cluster 1 to cluster 0
[DEBUG] The best resource width for CP tasks on cluster 1 and 2 are <2> and <1>
[DEBUG] Task exec_time on cluster 1: 0.0140943, task exec_time on cluster 2: 0.135217
[DEBUG] Using <2> cores in cluster 1 and <4> cores in cluster 2 achieves the lowest predicted EDP.
[DEBUG] For CP tasks, 70.5747% of tasks should be scheduled to cluster 0
[DEBUG] For CP tasks, 29.4253% of tasks should be scheduled to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] The best resource width for CP tasks on cluster 1 and 2 are <2> and <1>
[DEBUG] Task exec_time on cluster 1: 0.0139233, task exec_time on cluster 2: 0.11559
[DEBUG] Using <2> cores in cluster 1 and <4> cores in cluster 2 achieves the lowest predicted EDP.
[DEBUG] For CP tasks, 67.4846% of tasks should be scheduled to cluster 0
[DEBUG] For CP tasks, 32.5154% of tasks should be scheduled to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] The best resource width for CP tasks on cluster 1 and 2 are <2> and <1>
[DEBUG] Task exec_time on cluster 1: 0.0134115, task exec_time on cluster 2: 0.112176
[DEBUG] Using <2> cores in cluster 1 and <4> cores in cluster 2 achieves the lowest predicted EDP.
[DEBUG] For CP tasks, 67.6483% of tasks should be scheduled to cluster 0
[DEBUG] For CP tasks, 32.3517% of tasks should be scheduled to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] The best resource width for CP tasks on cluster 1 and 2 are <2> and <1>
[DEBUG] Task exec_time on cluster 1: 0.013307, task exec_time on cluster 2: 0.108085
[DEBUG] Using <2> cores in cluster 1 and <4> cores in cluster 2 achieves the lowest predicted EDP.
[DEBUG] For CP tasks, 67.0032% of tasks should be scheduled to cluster 0
[DEBUG] For CP tasks, 32.9968% of tasks should be scheduled to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] The best resource width for CP tasks on cluster 1 and 2 are <2> and <1>
[DEBUG] Task exec_time on cluster 1: 0.0134103, task exec_time on cluster 2: 0.108311
[DEBUG] Using <2> cores in cluster 1 and <4> cores in cluster 2 achieves the lowest predicted EDP.
[DEBUG] For CP tasks, 66.8784% of tasks should be scheduled to cluster 0
[DEBUG] For CP tasks, 33.1216% of tasks should be scheduled to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] The best resource width for CP tasks on cluster 1 and 2 are <2> and <1>
[DEBUG] Task exec_time on cluster 1: 0.0139769, task exec_time on cluster 2: 0.113335
[DEBUG] Using <2> cores in cluster 1 and <4> cores in cluster 2 achieves the lowest predicted EDP.
[DEBUG] For CP tasks, 66.9661% of tasks should be scheduled to cluster 0
[DEBUG] For CP tasks, 33.0339% of tasks should be scheduled to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] The best resource width for CP tasks on cluster 1 and 2 are <2> and <1>
[DEBUG] Task exec_time on cluster 1: 0.0136222, task exec_time on cluster 2: 0.110748
[DEBUG] Using <2> cores in cluster 1 and <4> cores in cluster 2 achieves the lowest predicted EDP.
[DEBUG] For CP tasks, 67.0239% of tasks should be scheduled to cluster 0
[DEBUG] For CP tasks, 32.9761% of tasks should be scheduled to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] The best resource width for CP tasks on cluster 1 and 2 are <2> and <1>
[DEBUG] Task exec_time on cluster 1: 0.0141109, task exec_time on cluster 2: 0.104115
[DEBUG] Using <2> cores in cluster 1 and <4> cores in cluster 2 achieves the lowest predicted EDP.
[DEBUG] For CP tasks, 64.8455% of tasks should be scheduled to cluster 0
[DEBUG] For CP tasks, 35.1545% of tasks should be scheduled to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] The best resource width for CP tasks on cluster 1 and 2 are <1> and <1>
[DEBUG] Task exec_time on cluster 1: 0.0293726, task exec_time on cluster 2: 0.104483
[DEBUG] Using <2> cores in cluster 1 and <4> cores in cluster 2 achieves the lowest predicted EDP.
[DEBUG] For CP tasks, 64.0105% of tasks should be scheduled to cluster 0
[DEBUG] For CP tasks, 35.9895% of tasks should be scheduled to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 1 to cluster 0
[DEBUG] Work stealing from cluster 1 to cluster 0
[DEBUG] Work stealing from cluster 1 to cluster 0
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 1 to cluster 0
[DEBUG] Work stealing from cluster 1 to cluster 0
[DEBUG] Work stealing from cluster 1 to cluster 0
[DEBUG] Work stealing from cluster 1 to cluster 0
[DEBUG] The best resource width for CP tasks on cluster 1 and 2 are <1> and <1>
[DEBUG] Task exec_time on cluster 1: 0.0285727, task exec_time on cluster 2: 0.135683
[DEBUG] Using <2> cores in cluster 1 and <4> cores in cluster 2 achieves the lowest predicted EDP.
[DEBUG] For CP tasks, 70.3646% of tasks should be scheduled to cluster 0
[DEBUG] For CP tasks, 29.6354% of tasks should be scheduled to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] The best resource width for CP tasks on cluster 1 and 2 are <1> and <1>
[DEBUG] Task exec_time on cluster 1: 0.0270497, task exec_time on cluster 2: 0.109423
[DEBUG] Using <2> cores in cluster 1 and <4> cores in cluster 2 achieves the lowest predicted EDP.
[DEBUG] For CP tasks, 66.9162% of tasks should be scheduled to cluster 0
[DEBUG] For CP tasks, 33.0838% of tasks should be scheduled to cluster 1
[DEBUG] Work stealing from cluster 1 to cluster 0
[DEBUG] Work stealing from cluster 1 to cluster 0
[DEBUG] The best resource width for CP tasks on cluster 1 and 2 are <1> and <2>
[DEBUG] Task exec_time on cluster 1: 0.0285192, task exec_time on cluster 2: 0.0681757
[DEBUG] Using <2> cores in cluster 1 and <4> cores in cluster 2 achieves the lowest predicted EDP.
[DEBUG] For CP tasks, 70.506% of tasks should be scheduled to cluster 0
[DEBUG] For CP tasks, 29.494% of tasks should be scheduled to cluster 1
[DEBUG] Work stealing from cluster 1 to cluster 0
[DEBUG] Work stealing from cluster 1 to cluster 0
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] The best resource width for CP tasks on cluster 1 and 2 are <1> and <2>
[DEBUG] Task exec_time on cluster 1: 0.027937, task exec_time on cluster 2: 0.0505697
[DEBUG] Using <2> cores in cluster 1 and <4> cores in cluster 2 achieves the lowest predicted EDP.
[DEBUG] For CP tasks, 64.4146% of tasks should be scheduled to cluster 0
[DEBUG] For CP tasks, 35.5854% of tasks should be scheduled to cluster 1
[DEBUG] The best resource width for CP tasks on cluster 1 and 2 are <1> and <1>
[DEBUG] Task exec_time on cluster 1: 0.0286287, task exec_time on cluster 2: 0.13079
[DEBUG] Using <2> cores in cluster 1 and <4> cores in cluster 2 achieves the lowest predicted EDP.
[DEBUG] For CP tasks, 69.5515% of tasks should be scheduled to cluster 0
[DEBUG] For CP tasks, 30.4485% of tasks should be scheduled to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] The best resource width for CP tasks on cluster 1 and 2 are <1> and <1>
[DEBUG] Task exec_time on cluster 1: 0.0285053, task exec_time on cluster 2: 0.115704
[DEBUG] Using <2> cores in cluster 1 and <4> cores in cluster 2 achieves the lowest predicted EDP.
[DEBUG] For CP tasks, 66.9915% of tasks should be scheduled to cluster 0
[DEBUG] For CP tasks, 33.0085% of tasks should be scheduled to cluster 1
[DEBUG] Work stealing from cluster 1 to cluster 0
[DEBUG] Work stealing from cluster 1 to cluster 0
[DEBUG] The best resource width for CP tasks on cluster 1 and 2 are <1> and <1>
[DEBUG] Task exec_time on cluster 1: 0.0287271, task exec_time on cluster 2: 0.140418
[DEBUG] Using <2> cores in cluster 1 and <4> cores in cluster 2 achieves the lowest predicted EDP.
[DEBUG] For CP tasks, 70.964% of tasks should be scheduled to cluster 0
[DEBUG] For CP tasks, 29.036% of tasks should be scheduled to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] The best resource width for CP tasks on cluster 1 and 2 are <1> and <1>
[DEBUG] Task exec_time on cluster 1: 0.027599, task exec_time on cluster 2: 0.132323
[DEBUG] Using <2> cores in cluster 1 and <4> cores in cluster 2 achieves the lowest predicted EDP.
[DEBUG] For CP tasks, 70.5644% of tasks should be scheduled to cluster 0
[DEBUG] For CP tasks, 29.4356% of tasks should be scheduled to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] The best resource width for CP tasks on cluster 1 and 2 are <1> and <1>
[DEBUG] Task exec_time on cluster 1: 0.0280046, task exec_time on cluster 2: 0.127119
[DEBUG] Using <2> cores in cluster 1 and <4> cores in cluster 2 achieves the lowest predicted EDP.
[DEBUG] For CP tasks, 69.4153% of tasks should be scheduled to cluster 0
[DEBUG] For CP tasks, 30.5847% of tasks should be scheduled to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] The best resource width for CP tasks on cluster 1 and 2 are <1> and <1>
[DEBUG] Task exec_time on cluster 1: 0.026346, task exec_time on cluster 2: 0.12149
[DEBUG] Using <2> cores in cluster 1 and <4> cores in cluster 2 achieves the lowest predicted EDP.
[DEBUG] For CP tasks, 69.7489% of tasks should be scheduled to cluster 0
[DEBUG] For CP tasks, 30.2511% of tasks should be scheduled to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] The best resource width for CP tasks on cluster 1 and 2 are <1> and <1>
[DEBUG] Task exec_time on cluster 1: 0.0285618, task exec_time on cluster 2: 0.133597
[DEBUG] Using <2> cores in cluster 1 and <4> cores in cluster 2 achieves the lowest predicted EDP.
[DEBUG] For CP tasks, 70.0485% of tasks should be scheduled to cluster 0
[DEBUG] For CP tasks, 29.9515% of tasks should be scheduled to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] The best resource width for CP tasks on cluster 1 and 2 are <1> and <1>
[DEBUG] Task exec_time on cluster 1: 0.0267586, task exec_time on cluster 2: 0.123961
[DEBUG] Using <2> cores in cluster 1 and <4> cores in cluster 2 achieves the lowest predicted EDP.
[DEBUG] For CP tasks, 69.8458% of tasks should be scheduled to cluster 0
[DEBUG] For CP tasks, 30.1542% of tasks should be scheduled to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] The best resource width for CP tasks on cluster 1 and 2 are <1> and <1>
[DEBUG] Task exec_time on cluster 1: 0.0286008, task exec_time on cluster 2: 0.142944
[DEBUG] Using <2> cores in cluster 1 and <4> cores in cluster 2 achieves the lowest predicted EDP.
[DEBUG] For CP tasks, 71.42% of tasks should be scheduled to cluster 0
[DEBUG] For CP tasks, 28.58% of tasks should be scheduled to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] The best resource width for CP tasks on cluster 1 and 2 are <1> and <1>
[DEBUG] Task exec_time on cluster 1: 0.0280245, task exec_time on cluster 2: 0.120708
[DEBUG] Using <2> cores in cluster 1 and <4> cores in cluster 2 achieves the lowest predicted EDP.
[DEBUG] For CP tasks, 68.2903% of tasks should be scheduled to cluster 0
[DEBUG] For CP tasks, 31.7097% of tasks should be scheduled to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 1 to cluster 0
[DEBUG] Work stealing from cluster 1 to cluster 0
[DEBUG] Work stealing from cluster 1 to cluster 0
[DEBUG] Work stealing from cluster 1 to cluster 0
Thread 4 sleeps for 11976 ms. 
Task type: 0: Thread 4 with width 1 completes 1476 tasks.
Task type: 0: Thread 4 with width 2 completes 811 tasks.
Task type: 0: Thread 4 with width 4 completes 193 tasks.
Task type: 1: Thread 4 with width 1 completes 0 tasks.
Task type: 1: Thread 4 with width 2 completes 0 tasks.
Task type: 1: Thread 4 with width 4 completes 0 tasks.
Task type: 2: Thread 4 with width 1 completes 0 tasks.
Task type: 2: Thread 4 with width 2 completes 0 tasks.
Task type: 2: Thread 4 with width 4 completes 0 tasks.
Task type: 3: Thread 4 with width 1 completes 0 tasks.
Task type: 3: Thread 4 with width 2 completes 0 tasks.
Task type: 3: Thread 4 with width 4 completes 0 tasks.
Task type: 4: Thread 4 with width 1 completes 0 tasks.
Task type: 4: Thread 4 with width 2 completes 0 tasks.
Task type: 4: Thread 4 with width 4 completes 0 tasks.
Task type: 5: Thread 4 with width 1 completes 0 tasks.
Task type: 5: Thread 4 with width 2 completes 0 tasks.
Task type: 5: Thread 4 with width 4 completes 0 tasks.
The total execution time of thread 4 is 222.926 s.
Thread 0 sleeps for 56884 ms. 
Task type: 0: Thread 0 with width 1 completes 1991 tasks.
Task type: 0: Thread 0 with width 2 completes 8674 tasks.
Task type: 0: Thread 0 with width 4 completes 0 tasks.
Task type: 1: Thread 0 with width 1 completes 0 tasks.
Task type: 1: Thread 0 with width 2 completes 0 tasks.
Task type: 1: Thread 0 with width 4 completes 0 tasks.
Task type: 2: Thread 0 with width 1 completes 0 tasks.
Task type: 2: Thread 0 with width 2 completes 0 tasks.
Task type: 2: Thread 0 with width 4 completes 0 tasks.
Task type: 3: Thread 0 with width 1 completes 0 tasks.
Task type: 3: Thread 0 with width 2 completes 0 tasks.
Task type: 3: Thread 0 with width 4 completes 0 tasks.
Task type: 4: Thread 0 with width 1 completes 0 tasks.
Task type: 4: Thread 0 with width 2 completes 0 tasks.
Task type: 4: Thread 0 with width 4 completes 0 tasks.
Task type: 5: Thread 0 with width 1 completes 0 tasks.
Task type: 5: Thread 0 with width 2 completes 0 tasks.
Task type: 5: Thread 0 with width 4 completes 0 tasks.
The total execution time of thread 0 is 177.56 s.
Thread 5 sleeps for 10489 ms. 
Task type: 0: Thread 5 with width 1 completes 1498 tasks.
Task type: 0: Thread 5 with width 2 completes 811 tasks.
Task type: 0: Thread 5 with width 4 completes 193 tasks.
Task type: 1: Thread 5 with width 1 completes 0 tasks.
Task type: 1: Thread 5 with width 2 completes 0 tasks.
Task type: 1: Thread 5 with width 4 completes 0 tasks.
Task type: 2: Thread 5 with width 1 completes 0 tasks.
Task type: 2: Thread 5 with width 2 completes 0 tasks.
Task type: 2: Thread 5 with width 4 completes 0 tasks.
Task type: 3: Thread 5 with width 1 completes 0 tasks.
Task type: 3: Thread 5 with width 2 completes 0 tasks.
Task type: 3: Thread 5 with width 4 completes 0 tasks.
Task type: 4: Thread 5 with width 1 completes 0 tasks.
Task type: 4: Thread 5 with width 2 completes 0 tasks.
Task type: 4: Thread 5 with width 4 completes 0 tasks.
Task type: 5: Thread 5 with width 1 completes 0 tasks.
Task type: 5: Thread 5 with width 2 completes 0 tasks.
Task type: 5: Thread 5 with width 4 completes 0 tasks.
The total execution time of thread 5 is 224.384 s.
Thread 3 sleeps for 11207 ms. 
Task type: 0: Thread 3 with width 1 completes 1448 tasks.
Task type: 0: Thread 3 with width 2 completes 771 tasks.
Task type: 0: Thread 3 with width 4 completes 193 tasks.
Task type: 1: Thread 3 with width 1 completes 0 tasks.
Task type: 1: Thread 3 with width 2 completes 0 tasks.
Task type: 1: Thread 3 with width 4 completes 0 tasks.
Task type: 2: Thread 3 with width 1 completes 0 tasks.
Task type: 2: Thread 3 with width 2 completes 0 tasks.
Task type: 2: Thread 3 with width 4 completes 0 tasks.
Task type: 3: Thread 3 with width 1 completes 0 tasks.
Task type: 3: Thread 3 with width 2 completes 0 tasks.
Task type: 3: Thread 3 with width 4 completes 0 tasks.
Task type: 4: Thread 3 with width 1 completes 0 tasks.
Task type: 4: Thread 3 with width 2 completes 0 tasks.
Task type: 4: Thread 3 with width 4 completes 0 tasks.
Task type: 5: Thread 3 with width 1 completes 0 tasks.
Task type: 5: Thread 3 with width 2 completes 0 tasks.
Task type: 5: Thread 3 with width 4 completes 0 tasks.
The total execution time of thread 3 is 223.695 s.
Thread 1 sleeps for 56933 ms. 
Task type: 0: Thread 1 with width 1 completes 1944 tasks.
Task type: 0: Thread 1 with width 2 completes 8674 tasks.
Task type: 0: Thread 1 with width 4 completes 0 tasks.
Task type: 1: Thread 1 with width 1 completes 0 tasks.
Task type: 1: Thread 1 with width 2 completes 0 tasks.
Task type: 1: Thread 1 with width 4 completes 0 tasks.
Task type: 2: Thread 1 with width 1 completes 0 tasks.
Task type: 2: Thread 1 with width 2 completes 0 tasks.
Task type: 2: Thread 1 with width 4 completes 0 tasks.
Task type: 3: Thread 1 with width 1 completes 0 tasks.
Task type: 3: Thread 1 with width 2 completes 0 tasks.
Task type: 3: Thread 1 with width 4 completes 0 tasks.
Task type: 4: Thread 1 with width 1 completes 0 tasks.
Task type: 4: Thread 1 with width 2 completes 0 tasks.
Task type: 4: Thread 1 with width 4 completes 0 tasks.
Task type: 5: Thread 1 with width 1 completes 0 tasks.
Task type: 5: Thread 1 with width 2 completes 0 tasks.
Task type: 5: Thread 1 with width 4 completes 0 tasks.
The total execution time of thread 1 is 177.63 s.
Thread 2 sleeps for 21420 ms. 
Task type: 0: Thread 2 with width 1 completes 1194 tasks.
Task type: 0: Thread 2 with width 2 completes 771 tasks.
Task type: 0: Thread 2 with width 4 completes 193 tasks.
Task type: 1: Thread 2 with width 1 completes 0 tasks.
Task type: 1: Thread 2 with width 2 completes 0 tasks.
Task type: 1: Thread 2 with width 4 completes 0 tasks.
Task type: 2: Thread 2 with width 1 completes 0 tasks.
Task type: 2: Thread 2 with width 2 completes 0 tasks.
Task type: 2: Thread 2 with width 4 completes 0 tasks.
Task type: 3: Thread 2 with width 1 completes 0 tasks.
Task type: 3: Thread 2 with width 2 completes 0 tasks.
Task type: 3: Thread 2 with width 4 completes 0 tasks.
Task type: 4: Thread 2 with width 1 completes 0 tasks.
Task type: 4: Thread 2 with width 2 completes 0 tasks.
Task type: 4: Thread 2 with width 4 completes 0 tasks.
Task type: 5: Thread 2 with width 1 completes 0 tasks.
Task type: 5: Thread 2 with width 2 completes 0 tasks.
Task type: 5: Thread 2 with width 4 completes 0 tasks.
The total execution time of thread 2 is 213.221 s.
20000,16,1686226844501	1686227079900,235.399,84.9621
Total number of steals across clusters: 1691


---------------------- Test Application - Synthetic Benchmarks ---------------------
---------------------- You choose JOSS scheduler ---------------------
[Warning] Memory-boundness Calculation (ClusterB) is smaller than 0!
CP: Training Phase finished. Predicted execution time and power results for the kernel tasks: 

---------- Execution Time Predictions ---------- 
Memory Frequency: 1866000000: 
Cluster 0: 
CPU_Freq[2035200]: 0.0299005	0.0160626	
CPU_Freq[1881600]: 0.0313866	0.0164161	
CPU_Freq[1728000]: 0.0330709	0.0167788	
CPU_Freq[1574400]: 0.0351005	0.0172123	
CPU_Freq[1420800]: 0.0375932	0.0177395	
CPU_Freq[1267200]: 0.0407276	0.0183945	
CPU_Freq[1113600]: 0.0434098	0.0211492	
CPU_Freq[960000]: 0.0502474	0.0203333	
CPU_Freq[806400]: 0.0579813	0.0218566	
CPU_Freq[652800]: 0.0697607	0.0240968	
CPU_Freq[499200]: 0.0898101	0.0277156	
CPU_Freq[345600]: 0.131123	0.0345512	
Cluster 1: 
CPU_Freq[2035200]: 0.0854565	0.0372825	0.0217483	
CPU_Freq[1881600]: 0.0861602	0.0408505	0.0226975	
CPU_Freq[1728000]: 0.0888308	0.0442362	0.0239821	
CPU_Freq[1574400]: 0.0920567	0.0483006	0.025534	
CPU_Freq[1420800]: 0.0960305	0.0532701	0.0274458	
CPU_Freq[1267200]: 0.101044	0.0594846	0.0298584	
CPU_Freq[1113600]: 0.104155	0.0683164	0.0335069	
CPU_Freq[960000]: 0.116385	0.0781419	0.0372416	
CPU_Freq[806400]: 0.128962	0.093076	0.0432966	
CPU_Freq[652800]: 0.148296	0.115477	0.0526067	
CPU_Freq[499200]: 0.181632	0.152769	0.0686666	
CPU_Freq[345600]: 0.251697	0.226933	0.102441	
Memory Frequency: 1600000000: 
Cluster 0: 
CPU_Freq[2035200]: 0.0321428	0.0205768	
CPU_Freq[1881600]: 0.0335447	0.0208761	
CPU_Freq[1728000]: 0.0352076	0.0212286	
CPU_Freq[1574400]: 0.0372116	0.0216499	
CPU_Freq[1420800]: 0.0396732	0.0221623	
CPU_Freq[1267200]: 0.0427689	0.022799	
CPU_Freq[1113600]: 0.0467786	0.0236112	
CPU_Freq[960000]: 0.0521743	0.0246834	
CPU_Freq[806400]: 0.0598183	0.026164	
CPU_Freq[652800]: 0.0714655	0.0283413	
CPU_Freq[499200]: 0.0913013	0.0318586	
CPU_Freq[345600]: 0.13221	0.0385023	
Cluster 1: 
CPU_Freq[2035200]: 0.0892759	0.0380982	0.0224538	
CPU_Freq[1881600]: 0.0914941	0.0409413	0.023519	
CPU_Freq[1728000]: 0.0941307	0.0443024	0.0247853	
CPU_Freq[1574400]: 0.0973161	0.0483373	0.0263153	
CPU_Freq[1420800]: 0.101241	0.0532711	0.0282005	
CPU_Freq[1267200]: 0.106193	0.0594412	0.03058	
CPU_Freq[1113600]: 0.112636	0.0673784	0.0336758	
CPU_Freq[960000]: 0.121353	0.077967	0.0378652	
CPU_Freq[806400]: 0.133788	0.0927978	0.0438432	
CPU_Freq[652800]: 0.152911	0.115047	0.0530401	
CPU_Freq[499200]: 0.185909	0.152094	0.0689171	
CPU_Freq[345600]: 0.255335	0.225794	0.102346	
Memory Frequency: 1331200000: 
Cluster 0: 
CPU_Freq[2035200]: 0.0353861	0.0269066	
CPU_Freq[1881600]: 0.0367623	0.0271937	
CPU_Freq[1728000]: 0.0383948	0.0275318	
CPU_Freq[1574400]: 0.0403625	0.0279359	
CPU_Freq[1420800]: 0.0427801	0.0284273	
CPU_Freq[1267200]: 0.045821	0.0290379	
CPU_Freq[1113600]: 0.0497608	0.0298169	
CPU_Freq[960000]: 0.0550644	0.0308452	
CPU_Freq[806400]: 0.062581	0.0322653	
CPU_Freq[652800]: 0.0740409	0.0343536	
CPU_Freq[499200]: 0.0935741	0.037727	
CPU_Freq[345600]: 0.133912	0.044099	
Cluster 1: 
CPU_Freq[2035200]: 0.0969568	0.0383404	0.0236894	
CPU_Freq[1881600]: 0.0991342	0.0411539	0.0247325	
CPU_Freq[1728000]: 0.101723	0.0444801	0.0259729	
CPU_Freq[1574400]: 0.104851	0.0484734	0.0274719	
CPU_Freq[1420800]: 0.108705	0.0533565	0.0293193	
CPU_Freq[1267200]: 0.113571	0.0594638	0.0316519	
CPU_Freq[1113600]: 0.119903	0.0673207	0.0346879	
CPU_Freq[960000]: 0.128474	0.0778033	0.0387983	
CPU_Freq[806400]: 0.140707	0.0924878	0.0446673	
CPU_Freq[652800]: 0.159534	0.114522	0.0537038	
CPU_Freq[499200]: 0.192053	0.151221	0.0693218	
CPU_Freq[345600]: 0.260573	0.224265	0.102262	
Memory Frequency: 1062400000: 
Cluster 0: 
CPU_Freq[2035200]: 0.0406258	0.0364395	
CPU_Freq[1881600]: 0.0419632	0.0367081	
CPU_Freq[1728000]: 0.0435501	0.0370245	
CPU_Freq[1574400]: 0.0454632	0.0374027	
CPU_Freq[1420800]: 0.0478144	0.0378625	
CPU_Freq[1267200]: 0.0507729	0.0384339	
CPU_Freq[1113600]: 0.0546075	0.0391629	
CPU_Freq[960000]: 0.0597721	0.0401252	
CPU_Freq[806400]: 0.0670969	0.041454	
CPU_Freq[652800]: 0.0782748	0.0434082	
CPU_Freq[499200]: 0.0973524	0.046565	
CPU_Freq[345600]: 0.136829	0.0525279	
Cluster 1: 
CPU_Freq[2035200]: 0.108712	0.0388912	0.0256605	
CPU_Freq[1881600]: 0.110828	0.04166	0.0266704	
CPU_Freq[1728000]: 0.113344	0.0449338	0.0278717	
CPU_Freq[1574400]: 0.116385	0.0488644	0.0293239	
CPU_Freq[1420800]: 0.120135	0.0536713	0.0311145	
CPU_Freq[1267200]: 0.12487	0.0596838	0.0333765	
CPU_Freq[1113600]: 0.131035	0.0674198	0.0363224	
CPU_Freq[960000]: 0.139386	0.0777428	0.040314	
CPU_Freq[806400]: 0.151315	0.0922069	0.0460187	
CPU_Freq[652800]: 0.169695	0.113917	0.0548138	
CPU_Freq[499200]: 0.201492	0.150092	0.0700417	
CPU_Freq[345600]: 0.268649	0.222147	0.102245	
Memory Frequency: 800000000: 
Cluster 0: 
CPU_Freq[2035200]: 0.0500471	0.0519245	
CPU_Freq[1881600]: 0.0513216	0.0521632	
CPU_Freq[1728000]: 0.0528343	0.0524443	
CPU_Freq[1574400]: 0.0546588	0.0527803	
CPU_Freq[1420800]: 0.0569021	0.0531889	
CPU_Freq[1267200]: 0.0597266	0.0536966	
CPU_Freq[1113600]: 0.0633903	0.0543443	
CPU_Freq[960000]: 0.0683293	0.0551994	
CPU_Freq[806400]: 0.0753426	0.0563801	
CPU_Freq[652800]: 0.0860623	0.0581165	
CPU_Freq[499200]: 0.1044	0.0609214	
CPU_Freq[345600]: 0.142479	0.0662195	
Cluster 1: 
CPU_Freq[2035200]: 0.128286	0.0402622	0.0291448	
CPU_Freq[1881600]: 0.130302	0.0429587	0.0301009	
CPU_Freq[1728000]: 0.132701	0.0461473	0.0312386	
CPU_Freq[1574400]: 0.135602	0.049976	0.032615	
CPU_Freq[1420800]: 0.139181	0.054659	0.0343133	
CPU_Freq[1267200]: 0.143704	0.0605175	0.0364605	
CPU_Freq[1113600]: 0.149598	0.0680572	0.0392601	
CPU_Freq[960000]: 0.157591	0.078121	0.0430585	
CPU_Freq[806400]: 0.169027	0.0922271	0.0484965	
CPU_Freq[652800]: 0.186681	0.113411	0.0568993	
CPU_Freq[499200]: 0.217305	0.148736	0.0714935	
CPU_Freq[345600]: 0.282247	0.219184	0.1025	

---------- CPU Power Predictions ---------- 
Memory Frequency: 1866000000: 
Cluster 0: 
CPU_Freq[2035200]: 2.69128	3.81913	
CPU_Freq[1881600]: 2.38451	3.39334	
CPU_Freq[1728000]: 2.10174	3.00809	
CPU_Freq[1574400]: 1.84297	2.66337	
CPU_Freq[1420800]: 1.6082	2.35919	
CPU_Freq[1267200]: 1.39743	2.09554	
CPU_Freq[1113600]: 1.21067	1.87242	
CPU_Freq[960000]: 1.04791	1.68984	
CPU_Freq[806400]: 0.90915	1.54779	
CPU_Freq[652800]: 0.794394	1.44627	
CPU_Freq[499200]: 0.703641	1.38529	
CPU_Freq[345600]: 0.63689	1.36484	
Cluster 1: 
CPU_Freq[2035200]: 1.12346	1.88534	2.31309	
CPU_Freq[1881600]: 0.988415	1.66069	2.00924	
CPU_Freq[1728000]: 0.866549	1.45376	1.73327	
CPU_Freq[1574400]: 0.757865	1.26453	1.48517	
CPU_Freq[1420800]: 0.662363	1.09303	1.26495	
CPU_Freq[1267200]: 0.580043	0.939232	1.0726	
CPU_Freq[1113600]: 0.510905	0.803151	0.908122	
CPU_Freq[960000]: 0.45495	0.684784	0.771518	
CPU_Freq[806400]: 0.412176	0.584131	0.662788	
CPU_Freq[652800]: 0.382584	0.501191	0.581932	
CPU_Freq[499200]: 0.366175	0.435965	0.528949	
CPU_Freq[345600]: 0.362947	0.388452	0.50384	
Memory Frequency: 1600000000: 
Cluster 0: 
CPU_Freq[2035200]: 2.69128	3.81913	
CPU_Freq[1881600]: 2.38451	3.39334	
CPU_Freq[1728000]: 2.10174	3.00809	
CPU_Freq[1574400]: 1.84297	2.66337	
CPU_Freq[1420800]: 1.6082	2.35919	
CPU_Freq[1267200]: 1.39743	2.09554	
CPU_Freq[1113600]: 1.21067	1.87242	
CPU_Freq[960000]: 1.04791	1.68984	
CPU_Freq[806400]: 0.90915	1.54779	
CPU_Freq[652800]: 0.794394	1.44627	
CPU_Freq[499200]: 0.703641	1.38529	
CPU_Freq[345600]: 0.63689	1.36484	
Cluster 1: 
CPU_Freq[2035200]: 1.12346	1.88534	2.31309	
CPU_Freq[1881600]: 0.988415	1.66069	2.00924	
CPU_Freq[1728000]: 0.866549	1.45376	1.73327	
CPU_Freq[1574400]: 0.757865	1.26453	1.48517	
CPU_Freq[1420800]: 0.662363	1.09303	1.26495	
CPU_Freq[1267200]: 0.580043	0.939232	1.0726	
CPU_Freq[1113600]: 0.510905	0.803151	0.908122	
CPU_Freq[960000]: 0.45495	0.684784	0.771518	
CPU_Freq[806400]: 0.412176	0.584131	0.662788	
CPU_Freq[652800]: 0.382584	0.501191	0.581932	
CPU_Freq[499200]: 0.366175	0.435965	0.528949	
CPU_Freq[345600]: 0.362947	0.388452	0.50384	
Memory Frequency: 1331200000: 
Cluster 0: 
CPU_Freq[2035200]: 2.69128	3.81913	
CPU_Freq[1881600]: 2.38451	3.39334	
CPU_Freq[1728000]: 2.10174	3.00809	
CPU_Freq[1574400]: 1.84297	2.66337	
CPU_Freq[1420800]: 1.6082	2.35919	
CPU_Freq[1267200]: 1.39743	2.09554	
CPU_Freq[1113600]: 1.21067	1.87242	
CPU_Freq[960000]: 1.04791	1.68984	
CPU_Freq[806400]: 0.90915	1.54779	
CPU_Freq[652800]: 0.794394	1.44627	
CPU_Freq[499200]: 0.703641	1.38529	
CPU_Freq[345600]: 0.63689	1.36484	
Cluster 1: 
CPU_Freq[2035200]: 1.12346	1.88534	2.31309	
CPU_Freq[1881600]: 0.988415	1.66069	2.00924	
CPU_Freq[1728000]: 0.866549	1.45376	1.73327	
CPU_Freq[1574400]: 0.757865	1.26453	1.48517	
CPU_Freq[1420800]: 0.662363	1.09303	1.26495	
CPU_Freq[1267200]: 0.580043	0.939232	1.0726	
CPU_Freq[1113600]: 0.510905	0.803151	0.908122	
CPU_Freq[960000]: 0.45495	0.684784	0.771518	
CPU_Freq[806400]: 0.412176	0.584131	0.662788	
CPU_Freq[652800]: 0.382584	0.501191	0.581932	
CPU_Freq[499200]: 0.366175	0.435965	0.528949	
CPU_Freq[345600]: 0.362947	0.388452	0.50384	
Memory Frequency: 1062400000: 
Cluster 0: 
CPU_Freq[2035200]: 2.69128	3.81913	
CPU_Freq[1881600]: 2.38451	3.39334	
CPU_Freq[1728000]: 2.10174	3.00809	
CPU_Freq[1574400]: 1.84297	2.66337	
CPU_Freq[1420800]: 1.6082	2.35919	
CPU_Freq[1267200]: 1.39743	2.09554	
CPU_Freq[1113600]: 1.21067	1.87242	
CPU_Freq[960000]: 1.04791	1.68984	
CPU_Freq[806400]: 0.90915	1.54779	
CPU_Freq[652800]: 0.794394	1.44627	
CPU_Freq[499200]: 0.703641	1.38529	
CPU_Freq[345600]: 0.63689	1.36484	
Cluster 1: 
CPU_Freq[2035200]: 1.12346	1.88534	2.31309	
CPU_Freq[1881600]: 0.988415	1.66069	2.00924	
CPU_Freq[1728000]: 0.866549	1.45376	1.73327	
CPU_Freq[1574400]: 0.757865	1.26453	1.48517	
CPU_Freq[1420800]: 0.662363	1.09303	1.26495	
CPU_Freq[1267200]: 0.580043	0.939232	1.0726	
CPU_Freq[1113600]: 0.510905	0.803151	0.908122	
CPU_Freq[960000]: 0.45495	0.684784	0.771518	
CPU_Freq[806400]: 0.412176	0.584131	0.662788	
CPU_Freq[652800]: 0.382584	0.501191	0.581932	
CPU_Freq[499200]: 0.366175	0.435965	0.528949	
CPU_Freq[345600]: 0.362947	0.388452	0.50384	
Memory Frequency: 800000000: 
Cluster 0: 
CPU_Freq[2035200]: 2.69128	3.81913	
CPU_Freq[1881600]: 2.38451	3.39334	
CPU_Freq[1728000]: 2.10174	3.00809	
CPU_Freq[1574400]: 1.84297	2.66337	
CPU_Freq[1420800]: 1.6082	2.35919	
CPU_Freq[1267200]: 1.39743	2.09554	
CPU_Freq[1113600]: 1.21067	1.87242	
CPU_Freq[960000]: 1.04791	1.68984	
CPU_Freq[806400]: 0.90915	1.54779	
CPU_Freq[652800]: 0.794394	1.44627	
CPU_Freq[499200]: 0.703641	1.38529	
CPU_Freq[345600]: 0.63689	1.36484	
Cluster 1: 
CPU_Freq[2035200]: 1.12346	1.88534	2.31309	
CPU_Freq[1881600]: 0.988415	1.66069	2.00924	
CPU_Freq[1728000]: 0.866549	1.45376	1.73327	
CPU_Freq[1574400]: 0.757865	1.26453	1.48517	
CPU_Freq[1420800]: 0.662363	1.09303	1.26495	
CPU_Freq[1267200]: 0.580043	0.939232	1.0726	
CPU_Freq[1113600]: 0.510905	0.803151	0.908122	
CPU_Freq[960000]: 0.45495	0.684784	0.771518	
CPU_Freq[806400]: 0.412176	0.584131	0.662788	
CPU_Freq[652800]: 0.382584	0.501191	0.581932	
CPU_Freq[499200]: 0.366175	0.435965	0.528949	
CPU_Freq[345600]: 0.362947	0.388452	0.50384	

---------- Memory Power Predictions ---------- 
Memory Frequency: 1866000000: 
Cluster 0: 
CPU_Freq[2035200]: 3.45411	7.72961	
CPU_Freq[1881600]: 3.33043	6.91566	
CPU_Freq[1728000]: 3.20391	6.09763	
CPU_Freq[1574400]: 3.07454	5.27552	
CPU_Freq[1420800]: 2.94234	4.44933	
CPU_Freq[1267200]: 2.8073	3.61906	
CPU_Freq[1113600]: 2.66941	2.78472	
CPU_Freq[960000]: 2.52868	1.94629	
CPU_Freq[806400]: 2.38511	1.10378	
CPU_Freq[652800]: 2.2387	0.257197	
CPU_Freq[499200]: 2.08945	-0.593468	
CPU_Freq[345600]: 1.93736	-1.44821	
Cluster 1: 
CPU_Freq[2035200]: 1.91102	1.13748	1.58841	
CPU_Freq[1881600]: 1.88946	1.14278	1.574	
CPU_Freq[1728000]: 1.86606	1.14519	1.55771	
CPU_Freq[1574400]: 1.84083	1.14469	1.53953	
CPU_Freq[1420800]: 1.81375	1.14128	1.51946	
CPU_Freq[1267200]: 1.78484	1.13497	1.4975	
CPU_Freq[1113600]: 1.75409	1.12575	1.47365	
CPU_Freq[960000]: 1.7215	1.11364	1.44791	
CPU_Freq[806400]: 1.68707	1.09861	1.42029	
CPU_Freq[652800]: 1.6508	1.08068	1.39078	
CPU_Freq[499200]: 1.61269	1.05985	1.35938	
CPU_Freq[345600]: 1.57275	1.03611	1.32609	
Memory Frequency: 1600000000: 
Cluster 0: 
CPU_Freq[2035200]: 3.13712	7.66804	
CPU_Freq[1881600]: 3.01331	6.85496	
CPU_Freq[1728000]: 2.88667	6.03779	
CPU_Freq[1574400]: 2.75719	5.21654	
CPU_Freq[1420800]: 2.62486	4.39122	
CPU_Freq[1267200]: 2.4897	3.56182	
CPU_Freq[1113600]: 2.35169	2.72833	
CPU_Freq[960000]: 2.21084	1.89077	
CPU_Freq[806400]: 2.06715	1.04913	
CPU_Freq[652800]: 1.92062	0.203405	
CPU_Freq[499200]: 1.77124	-0.646396	
CPU_Freq[345600]: 1.61903	-1.50028	
Cluster 1: 
CPU_Freq[2035200]: 1.51954	0.731397	1.1892	
CPU_Freq[1881600]: 1.49798	0.736709	1.17479	
CPU_Freq[1728000]: 1.47459	0.739117	1.15849	
CPU_Freq[1574400]: 1.44935	0.73862	1.14031	
CPU_Freq[1420800]: 1.42228	0.735219	1.12023	
CPU_Freq[1267200]: 1.39336	0.728913	1.09827	
CPU_Freq[1113600]: 1.36261	0.719702	1.07442	
CPU_Freq[960000]: 1.33002	0.707587	1.04868	
CPU_Freq[806400]: 1.29559	0.692568	1.02105	
CPU_Freq[652800]: 1.25932	0.674644	0.991532	
CPU_Freq[499200]: 1.22122	0.653815	0.960126	
CPU_Freq[345600]: 1.18127	0.630082	0.926833	
Memory Frequency: 1331200000: 
Cluster 0: 
CPU_Freq[2035200]: 2.93189	7.7113	
CPU_Freq[1881600]: 2.80797	6.89909	
CPU_Freq[1728000]: 2.6812	6.0828	
CPU_Freq[1574400]: 2.55159	5.26242	
CPU_Freq[1420800]: 2.41914	4.43797	
CPU_Freq[1267200]: 2.28385	3.60944	
CPU_Freq[1113600]: 2.14572	2.77683	
CPU_Freq[960000]: 2.00475	1.94014	
CPU_Freq[806400]: 1.86094	1.09937	
CPU_Freq[652800]: 1.71428	0.254521	
CPU_Freq[499200]: 1.56478	-0.594408	
CPU_Freq[345600]: 1.41244	-1.44742	
Cluster 1: 
CPU_Freq[2035200]: 1.25852	0.445536	0.913035	
CPU_Freq[1881600]: 1.23696	0.450852	0.89862	
CPU_Freq[1728000]: 1.21356	0.453264	0.882317	
CPU_Freq[1574400]: 1.18833	0.452772	0.864126	
CPU_Freq[1420800]: 1.16125	0.449375	0.844046	
CPU_Freq[1267200]: 1.13234	0.443073	0.822078	
CPU_Freq[1113600]: 1.10159	0.433867	0.798221	
CPU_Freq[960000]: 1.069	0.421757	0.772476	
CPU_Freq[806400]: 1.03457	0.406742	0.744843	
CPU_Freq[652800]: 0.998299	0.388822	0.715322	
CPU_Freq[499200]: 0.960192	0.367998	0.683912	
CPU_Freq[345600]: 0.920247	0.344269	0.650613	
Memory Frequency: 1062400000: 
Cluster 0: 
CPU_Freq[2035200]: 2.84237	7.86059	
CPU_Freq[1881600]: 2.71832	7.04925	
CPU_Freq[1728000]: 2.59143	6.23383	
CPU_Freq[1574400]: 2.4617	5.41433	
CPU_Freq[1420800]: 2.32913	4.59075	
CPU_Freq[1267200]: 2.19372	3.76309	
CPU_Freq[1113600]: 2.05546	2.93135	
CPU_Freq[960000]: 1.91437	2.09553	
CPU_Freq[806400]: 1.77043	1.25564	
CPU_Freq[652800]: 1.62365	0.411661	
CPU_Freq[499200]: 1.47403	-0.436395	
CPU_Freq[345600]: 1.32157	-1.28853	
Cluster 1: 
CPU_Freq[2035200]: 1.13277	0.284818	0.764771	
CPU_Freq[1881600]: 1.11121	0.290139	0.750352	
CPU_Freq[1728000]: 1.08781	0.292556	0.734044	
CPU_Freq[1574400]: 1.06258	0.292068	0.715848	
CPU_Freq[1420800]: 1.0355	0.288675	0.695764	
CPU_Freq[1267200]: 1.00659	0.282378	0.673791	
CPU_Freq[1113600]: 0.975837	0.273176	0.64993	
CPU_Freq[960000]: 0.943247	0.26107	0.62418	
CPU_Freq[806400]: 0.908818	0.24606	0.596543	
CPU_Freq[652800]: 0.87255	0.228145	0.567016	
CPU_Freq[499200]: 0.834443	0.207325	0.535602	
CPU_Freq[345600]: 0.794498	0.183601	0.502299	
Memory Frequency: 800000000: 
Cluster 0: 
CPU_Freq[2035200]: 2.86659	8.10859	
CPU_Freq[1881600]: 2.74242	7.2981	
CPU_Freq[1728000]: 2.61541	6.48353	
CPU_Freq[1574400]: 2.48556	5.66488	
CPU_Freq[1420800]: 2.35287	4.84216	
CPU_Freq[1267200]: 2.21733	4.01535	
CPU_Freq[1113600]: 2.07896	3.18446	
CPU_Freq[960000]: 1.93774	2.3495	
CPU_Freq[806400]: 1.79368	1.51045	
CPU_Freq[652800]: 1.64678	0.667329	
CPU_Freq[499200]: 1.49704	-0.179875	
CPU_Freq[345600]: 1.34446	-1.03116	
Cluster 1: 
CPU_Freq[2035200]: 1.14049	0.248637	0.743411	
CPU_Freq[1881600]: 1.11894	0.253962	0.728987	
CPU_Freq[1728000]: 1.09554	0.256383	0.712675	
CPU_Freq[1574400]: 1.0703	0.2559	0.694474	
CPU_Freq[1420800]: 1.04323	0.252512	0.674386	
CPU_Freq[1267200]: 1.01432	0.246219	0.652408	
CPU_Freq[1113600]: 0.983566	0.237022	0.628543	
CPU_Freq[960000]: 0.950975	0.22492	0.602789	
CPU_Freq[806400]: 0.916546	0.209914	0.575146	
CPU_Freq[652800]: 0.880278	0.192003	0.545616	
CPU_Freq[499200]: 0.842171	0.171187	0.514197	
CPU_Freq[345600]: 0.802226	0.147468	0.480889	

[Congratulations!] All the training Phase finished. Training finished time: 1686227111719. Set the CPU frequency of all clusters back to the highest frequency
[DEBUG] Work stealing from cluster 1 to cluster 0
[DEBUG] Work stealing from cluster 1 to cluster 0
[DEBUG] The best resource width for CP tasks on cluster 1 and 2 are <1> and <4>
[DEBUG] Task exec_time on cluster 1: 0.0287859, task exec_time on cluster 2: 0.0206029
[DEBUG] Using <2> cores in cluster 1 and <4> cores in cluster 2 achieves the lowest predicted EDP.
[DEBUG] For CP tasks, 58.8723% of tasks should be scheduled to cluster 0
[DEBUG] For CP tasks, 41.1277% of tasks should be scheduled to cluster 1
[DEBUG] The best resource width for CP tasks on cluster 1 and 2 are <1> and <2>
[DEBUG] Task exec_time on cluster 1: 0.0286356, task exec_time on cluster 2: 0.0362915
[DEBUG] Using <2> cores in cluster 1 and <4> cores in cluster 2 achieves the lowest predicted EDP.
[DEBUG] For CP tasks, 55.8957% of tasks should be scheduled to cluster 0
[DEBUG] For CP tasks, 44.1043% of tasks should be scheduled to cluster 1
[DEBUG] Work stealing from cluster 1 to cluster 0
[DEBUG] Work stealing from cluster 1 to cluster 0
[DEBUG] The best resource width for CP tasks on cluster 1 and 2 are <1> and <1>
[DEBUG] Task exec_time on cluster 1: 0.0286247, task exec_time on cluster 2: 0.0854565
[DEBUG] Using <2> cores in cluster 1 and <4> cores in cluster 2 achieves the lowest predicted EDP.
[DEBUG] For CP tasks, 59.8829% of tasks should be scheduled to cluster 0
[DEBUG] For CP tasks, 40.1171% of tasks should be scheduled to cluster 1
[DEBUG] Work stealing from cluster 1 to cluster 0
[DEBUG] Work stealing from cluster 1 to cluster 0
[DEBUG] Work stealing from cluster 1 to cluster 0
[DEBUG] Work stealing from cluster 1 to cluster 0
[DEBUG] Work stealing from cluster 1 to cluster 0
[DEBUG] The best resource width for CP tasks on cluster 1 and 2 are <2> and <1>
[DEBUG] Task exec_time on cluster 1: 0.0144924, task exec_time on cluster 2: 0.109712
[DEBUG] Using <2> cores in cluster 1 and <4> cores in cluster 2 achieves the lowest predicted EDP.
[DEBUG] For CP tasks, 65.4288% of tasks should be scheduled to cluster 0
[DEBUG] For CP tasks, 34.5712% of tasks should be scheduled to cluster 1
[DEBUG] Work stealing from cluster 1 to cluster 0
[DEBUG] Work stealing from cluster 1 to cluster 0
[DEBUG] Work stealing from cluster 1 to cluster 0
[DEBUG] Work stealing from cluster 1 to cluster 0
[DEBUG] Work stealing from cluster 1 to cluster 0
[DEBUG] Work stealing from cluster 1 to cluster 0
[DEBUG] Work stealing from cluster 1 to cluster 0
[DEBUG] Work stealing from cluster 1 to cluster 0
[DEBUG] Work stealing from cluster 1 to cluster 0
[DEBUG] Work stealing from cluster 1 to cluster 0
[DEBUG] Work stealing from cluster 1 to cluster 0
[DEBUG] Work stealing from cluster 1 to cluster 0
[DEBUG] Work stealing from cluster 1 to cluster 0
[DEBUG] Work stealing from cluster 1 to cluster 0
[DEBUG] Work stealing from cluster 1 to cluster 0
[DEBUG] Work stealing from cluster 1 to cluster 0
[DEBUG] Work stealing from cluster 1 to cluster 0
[DEBUG] Work stealing from cluster 1 to cluster 0
[DEBUG] Work stealing from cluster 1 to cluster 0
[DEBUG] Work stealing from cluster 1 to cluster 0
[DEBUG] Work stealing from cluster 1 to cluster 0
[DEBUG] Work stealing from cluster 1 to cluster 0
[DEBUG] Work stealing from cluster 1 to cluster 0
[DEBUG] Work stealing from cluster 1 to cluster 0
[DEBUG] Work stealing from cluster 1 to cluster 0
[DEBUG] Work stealing from cluster 1 to cluster 0
[DEBUG] Work stealing from cluster 1 to cluster 0
[DEBUG] Work stealing from cluster 1 to cluster 0
[DEBUG] Work stealing from cluster 1 to cluster 0
[DEBUG] Work stealing from cluster 1 to cluster 0
[DEBUG] Work stealing from cluster 1 to cluster 0
[DEBUG] Work stealing from cluster 1 to cluster 0
[DEBUG] Work stealing from cluster 1 to cluster 0
[DEBUG] Work stealing from cluster 1 to cluster 0
[DEBUG] Work stealing from cluster 1 to cluster 0
[DEBUG] Work stealing from cluster 1 to cluster 0
[DEBUG] Work stealing from cluster 1 to cluster 0
[DEBUG] Work stealing from cluster 1 to cluster 0
[DEBUG] Work stealing from cluster 1 to cluster 0
[DEBUG] Work stealing from cluster 1 to cluster 0
[DEBUG] Work stealing from cluster 1 to cluster 0
[DEBUG] Work stealing from cluster 1 to cluster 0
[DEBUG] Work stealing from cluster 1 to cluster 0
[DEBUG] Work stealing from cluster 1 to cluster 0
[DEBUG] Work stealing from cluster 1 to cluster 0
[DEBUG] Work stealing from cluster 1 to cluster 0
[DEBUG] Work stealing from cluster 1 to cluster 0
[DEBUG] Work stealing from cluster 1 to cluster 0
[DEBUG] Work stealing from cluster 1 to cluster 0
[DEBUG] Work stealing from cluster 1 to cluster 0
[DEBUG] Work stealing from cluster 1 to cluster 0
[DEBUG] Work stealing from cluster 1 to cluster 0
[DEBUG] Work stealing from cluster 1 to cluster 0
[DEBUG] Work stealing from cluster 1 to cluster 0
[DEBUG] Work stealing from cluster 1 to cluster 0
[DEBUG] Work stealing from cluster 1 to cluster 0
[DEBUG] Work stealing from cluster 1 to cluster 0
[DEBUG] Work stealing from cluster 1 to cluster 0
[DEBUG] Work stealing from cluster 1 to cluster 0
[DEBUG] Work stealing from cluster 1 to cluster 0
[DEBUG] Work stealing from cluster 1 to cluster 0
[DEBUG] Work stealing from cluster 1 to cluster 0
[DEBUG] Work stealing from cluster 1 to cluster 0
[DEBUG] Work stealing from cluster 1 to cluster 0
[DEBUG] Work stealing from cluster 1 to cluster 0
[DEBUG] Work stealing from cluster 1 to cluster 0
[DEBUG] Work stealing from cluster 1 to cluster 0
[DEBUG] Work stealing from cluster 1 to cluster 0
[DEBUG] Work stealing from cluster 1 to cluster 0
[DEBUG] Work stealing from cluster 1 to cluster 0
[DEBUG] Work stealing from cluster 1 to cluster 0
[DEBUG] Work stealing from cluster 1 to cluster 0
[DEBUG] Work stealing from cluster 1 to cluster 0
[DEBUG] Work stealing from cluster 1 to cluster 0
[DEBUG] Work stealing from cluster 1 to cluster 0
[DEBUG] Work stealing from cluster 1 to cluster 0
[DEBUG] Work stealing from cluster 1 to cluster 0
[DEBUG] Work stealing from cluster 1 to cluster 0
[DEBUG] Work stealing from cluster 1 to cluster 0
[DEBUG] Work stealing from cluster 1 to cluster 0
[DEBUG] The best resource width for CP tasks on cluster 1 and 2 are <1> and <4>
[DEBUG] Task exec_time on cluster 1: 0.0202568, task exec_time on cluster 2: 0.0336492
[DEBUG] Using <2> cores in cluster 1 and <4> cores in cluster 2 achieves the lowest predicted EDP.
[DEBUG] For CP tasks, 76.864% of tasks should be scheduled to cluster 0
[DEBUG] For CP tasks, 23.136% of tasks should be scheduled to cluster 1
[DEBUG] The best resource width for CP tasks on cluster 1 and 2 are <1> and <1>
[DEBUG] Task exec_time on cluster 1: 0.0288112, task exec_time on cluster 2: 0.0466324
[DEBUG] Using <2> cores in cluster 1 and <4> cores in cluster 2 achieves the lowest predicted EDP.
[DEBUG] For CP tasks, 44.7292% of tasks should be scheduled to cluster 0
[DEBUG] For CP tasks, 55.2708% of tasks should be scheduled to cluster 1
[DEBUG] Work stealing from cluster 1 to cluster 0
[DEBUG] Work stealing from cluster 1 to cluster 0
[DEBUG] Work stealing from cluster 1 to cluster 0
[DEBUG] Work stealing from cluster 1 to cluster 0
[DEBUG] Work stealing from cluster 1 to cluster 0
[DEBUG] Work stealing from cluster 1 to cluster 0
[DEBUG] Work stealing from cluster 1 to cluster 0
[DEBUG] Work stealing from cluster 1 to cluster 0
[DEBUG] Work stealing from cluster 1 to cluster 0
[DEBUG] Work stealing from cluster 1 to cluster 0
[DEBUG] Work stealing from cluster 1 to cluster 0
[DEBUG] Work stealing from cluster 1 to cluster 0
[DEBUG] Work stealing from cluster 1 to cluster 0
[DEBUG] Work stealing from cluster 1 to cluster 0
[DEBUG] Work stealing from cluster 1 to cluster 0
[DEBUG] Work stealing from cluster 1 to cluster 0
[DEBUG] Work stealing from cluster 1 to cluster 0
[DEBUG] Work stealing from cluster 1 to cluster 0
[DEBUG] Work stealing from cluster 1 to cluster 0
[DEBUG] Work stealing from cluster 1 to cluster 0
[DEBUG] Work stealing from cluster 1 to cluster 0
[DEBUG] Work stealing from cluster 1 to cluster 0
[DEBUG] Work stealing from cluster 1 to cluster 0
[DEBUG] Work stealing from cluster 1 to cluster 0
[DEBUG] Work stealing from cluster 1 to cluster 0
[DEBUG] Work stealing from cluster 1 to cluster 0
[DEBUG] Work stealing from cluster 1 to cluster 0
[DEBUG] Work stealing from cluster 1 to cluster 0
[DEBUG] Work stealing from cluster 1 to cluster 0
[DEBUG] Work stealing from cluster 1 to cluster 0
[DEBUG] Work stealing from cluster 1 to cluster 0
[DEBUG] Work stealing from cluster 1 to cluster 0
[DEBUG] Work stealing from cluster 1 to cluster 0
[DEBUG] Work stealing from cluster 1 to cluster 0
[DEBUG] Work stealing from cluster 1 to cluster 0
[DEBUG] Work stealing from cluster 1 to cluster 0
[DEBUG] Work stealing from cluster 1 to cluster 0
[DEBUG] Work stealing from cluster 1 to cluster 0
[DEBUG] Work stealing from cluster 1 to cluster 0
[DEBUG] Work stealing from cluster 1 to cluster 0
[DEBUG] Work stealing from cluster 1 to cluster 0
[DEBUG] Work stealing from cluster 1 to cluster 0
[DEBUG] Work stealing from cluster 1 to cluster 0
[DEBUG] Work stealing from cluster 1 to cluster 0
[DEBUG] Work stealing from cluster 1 to cluster 0
[DEBUG] Work stealing from cluster 1 to cluster 0
[DEBUG] Work stealing from cluster 1 to cluster 0
[DEBUG] Work stealing from cluster 1 to cluster 0
[DEBUG] Work stealing from cluster 1 to cluster 0
[DEBUG] Work stealing from cluster 1 to cluster 0
[DEBUG] Work stealing from cluster 1 to cluster 0
[DEBUG] Work stealing from cluster 1 to cluster 0
[DEBUG] Work stealing from cluster 1 to cluster 0
[DEBUG] Work stealing from cluster 1 to cluster 0
[DEBUG] Work stealing from cluster 1 to cluster 0
[DEBUG] Work stealing from cluster 1 to cluster 0
[DEBUG] Work stealing from cluster 1 to cluster 0
[DEBUG] Work stealing from cluster 1 to cluster 0
[DEBUG] Work stealing from cluster 1 to cluster 0
[DEBUG] Work stealing from cluster 1 to cluster 0
[DEBUG] Work stealing from cluster 1 to cluster 0
[DEBUG] Work stealing from cluster 1 to cluster 0
[DEBUG] Work stealing from cluster 1 to cluster 0
[DEBUG] Work stealing from cluster 1 to cluster 0
[DEBUG] Work stealing from cluster 1 to cluster 0
[DEBUG] Work stealing from cluster 1 to cluster 0
[DEBUG] Work stealing from cluster 1 to cluster 0
[DEBUG] Work stealing from cluster 1 to cluster 0
[DEBUG] Work stealing from cluster 1 to cluster 0
[DEBUG] Work stealing from cluster 1 to cluster 0
[DEBUG] Work stealing from cluster 1 to cluster 0
[DEBUG] Work stealing from cluster 1 to cluster 0
[DEBUG] Work stealing from cluster 1 to cluster 0
[DEBUG] Work stealing from cluster 1 to cluster 0
[DEBUG] Work stealing from cluster 1 to cluster 0
[DEBUG] Work stealing from cluster 1 to cluster 0
[DEBUG] Work stealing from cluster 1 to cluster 0
[DEBUG] Work stealing from cluster 1 to cluster 0
[DEBUG] Work stealing from cluster 1 to cluster 0
[DEBUG] Work stealing from cluster 1 to cluster 0
[DEBUG] Work stealing from cluster 1 to cluster 0
[DEBUG] Work stealing from cluster 1 to cluster 0
[DEBUG] Work stealing from cluster 1 to cluster 0
[DEBUG] Work stealing from cluster 1 to cluster 0
[DEBUG] Work stealing from cluster 1 to cluster 0
[DEBUG] Work stealing from cluster 1 to cluster 0
[DEBUG] Work stealing from cluster 1 to cluster 0
[DEBUG] Work stealing from cluster 1 to cluster 0
[DEBUG] Work stealing from cluster 1 to cluster 0
[DEBUG] Work stealing from cluster 1 to cluster 0
[DEBUG] Work stealing from cluster 1 to cluster 0
[DEBUG] Work stealing from cluster 1 to cluster 0
[DEBUG] Work stealing from cluster 1 to cluster 0
[DEBUG] Work stealing from cluster 1 to cluster 0
[DEBUG] The best resource width for CP tasks on cluster 1 and 2 are <1> and <1>
[DEBUG] Task exec_time on cluster 1: 0.0286036, task exec_time on cluster 2: 0.132036
[DEBUG] Using <2> cores in cluster 1 and <4> cores in cluster 2 achieves the lowest predicted EDP.
[DEBUG] For CP tasks, 69.7705% of tasks should be scheduled to cluster 0
[DEBUG] For CP tasks, 30.2295% of tasks should be scheduled to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] The best resource width for CP tasks on cluster 1 and 2 are <1> and <1>
[DEBUG] Task exec_time on cluster 1: 0.0286517, task exec_time on cluster 2: 0.128988
[DEBUG] Using <2> cores in cluster 1 and <4> cores in cluster 2 achieves the lowest predicted EDP.
[DEBUG] For CP tasks, 69.2399% of tasks should be scheduled to cluster 0
[DEBUG] For CP tasks, 30.7601% of tasks should be scheduled to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] The best resource width for CP tasks on cluster 1 and 2 are <1> and <1>
[DEBUG] Task exec_time on cluster 1: 0.0270154, task exec_time on cluster 2: 0.121308
[DEBUG] Using <2> cores in cluster 1 and <4> cores in cluster 2 achieves the lowest predicted EDP.
[DEBUG] For CP tasks, 69.185% of tasks should be scheduled to cluster 0
[DEBUG] For CP tasks, 30.815% of tasks should be scheduled to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] The best resource width for CP tasks on cluster 1 and 2 are <1> and <1>
[DEBUG] Task exec_time on cluster 1: 0.0262809, task exec_time on cluster 2: 0.109681
[DEBUG] Using <2> cores in cluster 1 and <4> cores in cluster 2 achieves the lowest predicted EDP.
[DEBUG] For CP tasks, 67.6031% of tasks should be scheduled to cluster 0
[DEBUG] For CP tasks, 32.3969% of tasks should be scheduled to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] The best resource width for CP tasks on cluster 1 and 2 are <1> and <1>
[DEBUG] Task exec_time on cluster 1: 0.0286506, task exec_time on cluster 2: 0.140108
[DEBUG] Using <2> cores in cluster 1 and <4> cores in cluster 2 achieves the lowest predicted EDP.
[DEBUG] For CP tasks, 70.9734% of tasks should be scheduled to cluster 0
[DEBUG] For CP tasks, 29.0266% of tasks should be scheduled to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] The best resource width for CP tasks on cluster 1 and 2 are <1> and <1>
[DEBUG] Task exec_time on cluster 1: 0.0272773, task exec_time on cluster 2: 0.136218
[DEBUG] Using <2> cores in cluster 1 and <4> cores in cluster 2 achieves the lowest predicted EDP.
[DEBUG] For CP tasks, 71.4033% of tasks should be scheduled to cluster 0
[DEBUG] For CP tasks, 28.5967% of tasks should be scheduled to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] The best resource width for CP tasks on cluster 1 and 2 are <1> and <1>
[DEBUG] Task exec_time on cluster 1: 0.0266847, task exec_time on cluster 2: 0.114549
[DEBUG] Using <2> cores in cluster 1 and <4> cores in cluster 2 achieves the lowest predicted EDP.
[DEBUG] For CP tasks, 68.2171% of tasks should be scheduled to cluster 0
[DEBUG] For CP tasks, 31.7829% of tasks should be scheduled to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 1 to cluster 0
[DEBUG] Work stealing from cluster 1 to cluster 0
[DEBUG] Work stealing from cluster 1 to cluster 0
[DEBUG] Work stealing from cluster 1 to cluster 0
[DEBUG] The best resource width for CP tasks on cluster 1 and 2 are <1> and <1>
[DEBUG] Task exec_time on cluster 1: 0.0285299, task exec_time on cluster 2: 0.136893
[DEBUG] Using <2> cores in cluster 1 and <4> cores in cluster 2 achieves the lowest predicted EDP.
[DEBUG] For CP tasks, 70.5806% of tasks should be scheduled to cluster 0
[DEBUG] For CP tasks, 29.4194% of tasks should be scheduled to cluster 1
[DEBUG] Work stealing from cluster 1 to cluster 0
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] The best resource width for CP tasks on cluster 1 and 2 are <1> and <1>
[DEBUG] Task exec_time on cluster 1: 0.0258348, task exec_time on cluster 2: 0.116813
[DEBUG] Using <2> cores in cluster 1 and <4> cores in cluster 2 achieves the lowest predicted EDP.
[DEBUG] For CP tasks, 69.3325% of tasks should be scheduled to cluster 0
[DEBUG] For CP tasks, 30.6675% of tasks should be scheduled to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] The best resource width for CP tasks on cluster 1 and 2 are <1> and <1>
[DEBUG] Task exec_time on cluster 1: 0.0268812, task exec_time on cluster 2: 0.138441
[DEBUG] Using <2> cores in cluster 1 and <4> cores in cluster 2 achieves the lowest predicted EDP.
[DEBUG] For CP tasks, 72.0284% of tasks should be scheduled to cluster 0
[DEBUG] For CP tasks, 27.9716% of tasks should be scheduled to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] The best resource width for CP tasks on cluster 1 and 2 are <1> and <1>
[DEBUG] Task exec_time on cluster 1: 0.0285197, task exec_time on cluster 2: 0.131722
[DEBUG] Using <2> cores in cluster 1 and <4> cores in cluster 2 achieves the lowest predicted EDP.
[DEBUG] For CP tasks, 69.7822% of tasks should be scheduled to cluster 0
[DEBUG] For CP tasks, 30.2178% of tasks should be scheduled to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] The best resource width for CP tasks on cluster 1 and 2 are <1> and <1>
[DEBUG] Task exec_time on cluster 1: 0.0284429, task exec_time on cluster 2: 0.136195
[DEBUG] Using <2> cores in cluster 1 and <4> cores in cluster 2 achieves the lowest predicted EDP.
[DEBUG] For CP tasks, 70.5379% of tasks should be scheduled to cluster 0
[DEBUG] For CP tasks, 29.4621% of tasks should be scheduled to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] The best resource width for CP tasks on cluster 1 and 2 are <1> and <1>
[DEBUG] Task exec_time on cluster 1: 0.0281369, task exec_time on cluster 2: 0.115654
[DEBUG] Using <2> cores in cluster 1 and <4> cores in cluster 2 achieves the lowest predicted EDP.
[DEBUG] For CP tasks, 67.2689% of tasks should be scheduled to cluster 0
[DEBUG] For CP tasks, 32.7311% of tasks should be scheduled to cluster 1
[DEBUG] Work stealing from cluster 1 to cluster 0
[DEBUG] Work stealing from cluster 1 to cluster 0
[DEBUG] Work stealing from cluster 1 to cluster 0
[DEBUG] Work stealing from cluster 1 to cluster 0
[DEBUG] The best resource width for CP tasks on cluster 1 and 2 are <1> and <1>
[DEBUG] Task exec_time on cluster 1: 0.0286413, task exec_time on cluster 2: 0.132302
[DEBUG] Using <2> cores in cluster 1 and <4> cores in cluster 2 achieves the lowest predicted EDP.
[DEBUG] For CP tasks, 69.7852% of tasks should be scheduled to cluster 0
[DEBUG] For CP tasks, 30.2148% of tasks should be scheduled to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] The best resource width for CP tasks on cluster 1 and 2 are <1> and <1>
[DEBUG] Task exec_time on cluster 1: 0.02844, task exec_time on cluster 2: 0.125739
[DEBUG] Using <2> cores in cluster 1 and <4> cores in cluster 2 achieves the lowest predicted EDP.
[DEBUG] For CP tasks, 68.8531% of tasks should be scheduled to cluster 0
[DEBUG] For CP tasks, 31.1468% of tasks should be scheduled to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] The best resource width for CP tasks on cluster 1 and 2 are <1> and <1>
[DEBUG] Task exec_time on cluster 1: 0.0263238, task exec_time on cluster 2: 0.117227
[DEBUG] Using <2> cores in cluster 1 and <4> cores in cluster 2 achieves the lowest predicted EDP.
[DEBUG] For CP tasks, 69.0079% of tasks should be scheduled to cluster 0
[DEBUG] For CP tasks, 30.9921% of tasks should be scheduled to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] The best resource width for CP tasks on cluster 1 and 2 are <1> and <1>
[DEBUG] Task exec_time on cluster 1: 0.0286155, task exec_time on cluster 2: 0.125275
[DEBUG] Using <2> cores in cluster 1 and <4> cores in cluster 2 achieves the lowest predicted EDP.
[DEBUG] For CP tasks, 68.6416% of tasks should be scheduled to cluster 0
[DEBUG] For CP tasks, 31.3584% of tasks should be scheduled to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 1 to cluster 0
[DEBUG] Work stealing from cluster 1 to cluster 0
[DEBUG] Work stealing from cluster 1 to cluster 0
[DEBUG] The best resource width for CP tasks on cluster 1 and 2 are <1> and <1>
[DEBUG] Task exec_time on cluster 1: 0.0284903, task exec_time on cluster 2: 0.145495
[DEBUG] Using <2> cores in cluster 1 and <4> cores in cluster 2 achieves the lowest predicted EDP.
[DEBUG] For CP tasks, 71.858% of tasks should be scheduled to cluster 0
[DEBUG] For CP tasks, 28.142% of tasks should be scheduled to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] The best resource width for CP tasks on cluster 1 and 2 are <1> and <1>
[DEBUG] Task exec_time on cluster 1: 0.0278524, task exec_time on cluster 2: 0.108551
[DEBUG] Using <2> cores in cluster 1 and <4> cores in cluster 2 achieves the lowest predicted EDP.
[DEBUG] For CP tasks, 66.0864% of tasks should be scheduled to cluster 0
[DEBUG] For CP tasks, 33.9136% of tasks should be scheduled to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 1 to cluster 0
[DEBUG] Work stealing from cluster 1 to cluster 0
[DEBUG] The best resource width for CP tasks on cluster 1 and 2 are <1> and <1>
[DEBUG] Task exec_time on cluster 1: 0.0286033, task exec_time on cluster 2: 0.137641
[DEBUG] Using <2> cores in cluster 1 and <4> cores in cluster 2 achieves the lowest predicted EDP.
[DEBUG] For CP tasks, 70.6403% of tasks should be scheduled to cluster 0
[DEBUG] For CP tasks, 29.3597% of tasks should be scheduled to cluster 1
[DEBUG] Work stealing from cluster 1 to cluster 0
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] The best resource width for CP tasks on cluster 1 and 2 are <1> and <1>
[DEBUG] Task exec_time on cluster 1: 0.0286103, task exec_time on cluster 2: 0.131744
[DEBUG] Using <2> cores in cluster 1 and <4> cores in cluster 2 achieves the lowest predicted EDP.
[DEBUG] For CP tasks, 69.719% of tasks should be scheduled to cluster 0
[DEBUG] For CP tasks, 30.281% of tasks should be scheduled to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] The best resource width for CP tasks on cluster 1 and 2 are <1> and <1>
[DEBUG] Task exec_time on cluster 1: 0.0286423, task exec_time on cluster 2: 0.137861
[DEBUG] Using <2> cores in cluster 1 and <4> cores in cluster 2 achieves the lowest predicted EDP.
[DEBUG] For CP tasks, 70.6451% of tasks should be scheduled to cluster 0
[DEBUG] For CP tasks, 29.3549% of tasks should be scheduled to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] The best resource width for CP tasks on cluster 1 and 2 are <1> and <1>
[DEBUG] Task exec_time on cluster 1: 0.0280503, task exec_time on cluster 2: 0.117035
[DEBUG] Using <2> cores in cluster 1 and <4> cores in cluster 2 achieves the lowest predicted EDP.
[DEBUG] For CP tasks, 67.5973% of tasks should be scheduled to cluster 0
[DEBUG] For CP tasks, 32.4027% of tasks should be scheduled to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] The best resource width for CP tasks on cluster 1 and 2 are <1> and <1>
[DEBUG] Task exec_time on cluster 1: 0.0286053, task exec_time on cluster 2: 0.138997
[DEBUG] Using <2> cores in cluster 1 and <4> cores in cluster 2 achieves the lowest predicted EDP.
[DEBUG] For CP tasks, 70.8418% of tasks should be scheduled to cluster 0
[DEBUG] For CP tasks, 29.1582% of tasks should be scheduled to cluster 1
[DEBUG] Work stealing from cluster 1 to cluster 0
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] The best resource width for CP tasks on cluster 1 and 2 are <1> and <1>
[DEBUG] Task exec_time on cluster 1: 0.0269112, task exec_time on cluster 2: 0.11776
[DEBUG] Using <2> cores in cluster 1 and <4> cores in cluster 2 achieves the lowest predicted EDP.
[DEBUG] For CP tasks, 68.6318% of tasks should be scheduled to cluster 0
[DEBUG] For CP tasks, 31.3682% of tasks should be scheduled to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 1 to cluster 0
[DEBUG] Work stealing from cluster 1 to cluster 0
[DEBUG] The best resource width for CP tasks on cluster 1 and 2 are <1> and <1>
[DEBUG] Task exec_time on cluster 1: 0.0286071, task exec_time on cluster 2: 0.13724
[DEBUG] Using <2> cores in cluster 1 and <4> cores in cluster 2 achieves the lowest predicted EDP.
[DEBUG] For CP tasks, 70.577% of tasks should be scheduled to cluster 0
[DEBUG] For CP tasks, 29.423% of tasks should be scheduled to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] The best resource width for CP tasks on cluster 1 and 2 are <1> and <1>
[DEBUG] Task exec_time on cluster 1: 0.0285051, task exec_time on cluster 2: 0.128106
[DEBUG] Using <2> cores in cluster 1 and <4> cores in cluster 2 achieves the lowest predicted EDP.
[DEBUG] For CP tasks, 69.203% of tasks should be scheduled to cluster 0
[DEBUG] For CP tasks, 30.797% of tasks should be scheduled to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] The best resource width for CP tasks on cluster 1 and 2 are <1> and <1>
[DEBUG] Task exec_time on cluster 1: 0.0263653, task exec_time on cluster 2: 0.110723
[DEBUG] Using <2> cores in cluster 1 and <4> cores in cluster 2 achieves the lowest predicted EDP.
[DEBUG] For CP tasks, 67.7396% of tasks should be scheduled to cluster 0
[DEBUG] For CP tasks, 32.2604% of tasks should be scheduled to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 1 to cluster 0
[DEBUG] Work stealing from cluster 1 to cluster 0
[DEBUG] The best resource width for CP tasks on cluster 1 and 2 are <1> and <1>
[DEBUG] Task exec_time on cluster 1: 0.0284388, task exec_time on cluster 2: 0.127339
[DEBUG] Using <2> cores in cluster 1 and <4> cores in cluster 2 achieves the lowest predicted EDP.
[DEBUG] For CP tasks, 69.1246% of tasks should be scheduled to cluster 0
[DEBUG] For CP tasks, 30.8754% of tasks should be scheduled to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] The best resource width for CP tasks on cluster 1 and 2 are <1> and <1>
[DEBUG] Task exec_time on cluster 1: 0.0276673, task exec_time on cluster 2: 0.108014
[DEBUG] Using <2> cores in cluster 1 and <4> cores in cluster 2 achieves the lowest predicted EDP.
[DEBUG] For CP tasks, 66.125% of tasks should be scheduled to cluster 0
[DEBUG] For CP tasks, 33.875% of tasks should be scheduled to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 1 to cluster 0
[DEBUG] Work stealing from cluster 1 to cluster 0
[DEBUG] Work stealing from cluster 1 to cluster 0
[DEBUG] Work stealing from cluster 1 to cluster 0
[DEBUG] The best resource width for CP tasks on cluster 1 and 2 are <1> and <1>
[DEBUG] Task exec_time on cluster 1: 0.028573, task exec_time on cluster 2: 0.140963
[DEBUG] Using <2> cores in cluster 1 and <4> cores in cluster 2 achieves the lowest predicted EDP.
[DEBUG] For CP tasks, 71.1542% of tasks should be scheduled to cluster 0
[DEBUG] For CP tasks, 28.8458% of tasks should be scheduled to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] The best resource width for CP tasks on cluster 1 and 2 are <1> and <1>
[DEBUG] Task exec_time on cluster 1: 0.0264733, task exec_time on cluster 2: 0.116239
[DEBUG] Using <2> cores in cluster 1 and <4> cores in cluster 2 achieves the lowest predicted EDP.
[DEBUG] For CP tasks, 68.705% of tasks should be scheduled to cluster 0
[DEBUG] For CP tasks, 31.295% of tasks should be scheduled to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 1 to cluster 0
[DEBUG] Work stealing from cluster 1 to cluster 0
[DEBUG] Work stealing from cluster 1 to cluster 0
[DEBUG] Work stealing from cluster 1 to cluster 0
[DEBUG] Work stealing from cluster 1 to cluster 0
[DEBUG] Work stealing from cluster 1 to cluster 0
[DEBUG] The best resource width for CP tasks on cluster 1 and 2 are <1> and <1>
[DEBUG] Task exec_time on cluster 1: 0.0286276, task exec_time on cluster 2: 0.138776
[DEBUG] Using <2> cores in cluster 1 and <4> cores in cluster 2 achieves the lowest predicted EDP.
[DEBUG] For CP tasks, 70.7928% of tasks should be scheduled to cluster 0
[DEBUG] For CP tasks, 29.2072% of tasks should be scheduled to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] The best resource width for CP tasks on cluster 1 and 2 are <1> and <1>
[DEBUG] Task exec_time on cluster 1: 0.0287045, task exec_time on cluster 2: 0.135738
[DEBUG] Using <2> cores in cluster 1 and <4> cores in cluster 2 achieves the lowest predicted EDP.
[DEBUG] For CP tasks, 70.2771% of tasks should be scheduled to cluster 0
[DEBUG] For CP tasks, 29.7229% of tasks should be scheduled to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] The best resource width for CP tasks on cluster 1 and 2 are <1> and <1>
[DEBUG] Task exec_time on cluster 1: 0.0286751, task exec_time on cluster 2: 0.136527
[DEBUG] Using <2> cores in cluster 1 and <4> cores in cluster 2 achieves the lowest predicted EDP.
[DEBUG] For CP tasks, 70.4193% of tasks should be scheduled to cluster 0
[DEBUG] For CP tasks, 29.5807% of tasks should be scheduled to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] The best resource width for CP tasks on cluster 1 and 2 are <1> and <1>
[DEBUG] Task exec_time on cluster 1: 0.0278786, task exec_time on cluster 2: 0.11402
[DEBUG] Using <2> cores in cluster 1 and <4> cores in cluster 2 achieves the lowest predicted EDP.
[DEBUG] For CP tasks, 67.1587% of tasks should be scheduled to cluster 0
[DEBUG] For CP tasks, 32.8413% of tasks should be scheduled to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 1 to cluster 0
[DEBUG] Work stealing from cluster 1 to cluster 0
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 1 to cluster 0
[DEBUG] Work stealing from cluster 1 to cluster 0
[DEBUG] Work stealing from cluster 1 to cluster 0
[DEBUG] Work stealing from cluster 1 to cluster 0
[DEBUG] The best resource width for CP tasks on cluster 1 and 2 are <1> and <1>
[DEBUG] Task exec_time on cluster 1: 0.0286016, task exec_time on cluster 2: 0.141418
[DEBUG] Using <2> cores in cluster 1 and <4> cores in cluster 2 achieves the lowest predicted EDP.
[DEBUG] For CP tasks, 71.1999% of tasks should be scheduled to cluster 0
[DEBUG] For CP tasks, 28.8001% of tasks should be scheduled to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] The best resource width for CP tasks on cluster 1 and 2 are <1> and <1>
[DEBUG] Task exec_time on cluster 1: 0.0264933, task exec_time on cluster 2: 0.111991
[DEBUG] Using <2> cores in cluster 1 and <4> cores in cluster 2 achieves the lowest predicted EDP.
[DEBUG] For CP tasks, 67.8827% of tasks should be scheduled to cluster 0
[DEBUG] For CP tasks, 32.1173% of tasks should be scheduled to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 1 to cluster 0
[DEBUG] Work stealing from cluster 1 to cluster 0
[DEBUG] The best resource width for CP tasks on cluster 1 and 2 are <1> and <1>
[DEBUG] Task exec_time on cluster 1: 0.0286642, task exec_time on cluster 2: 0.135338
[DEBUG] Using <2> cores in cluster 1 and <4> cores in cluster 2 achieves the lowest predicted EDP.
[DEBUG] For CP tasks, 70.2447% of tasks should be scheduled to cluster 0
[DEBUG] For CP tasks, 29.7553% of tasks should be scheduled to cluster 1
[DEBUG] Work stealing from cluster 1 to cluster 0
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] The best resource width for CP tasks on cluster 1 and 2 are <1> and <1>
[DEBUG] Task exec_time on cluster 1: 0.028614, task exec_time on cluster 2: 0.136163
[DEBUG] Using <2> cores in cluster 1 and <4> cores in cluster 2 achieves the lowest predicted EDP.
[DEBUG] For CP tasks, 70.4082% of tasks should be scheduled to cluster 0
[DEBUG] For CP tasks, 29.5918% of tasks should be scheduled to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] The best resource width for CP tasks on cluster 1 and 2 are <1> and <1>
[DEBUG] Task exec_time on cluster 1: 0.0281086, task exec_time on cluster 2: 0.129246
[DEBUG] Using <2> cores in cluster 1 and <4> cores in cluster 2 achieves the lowest predicted EDP.
[DEBUG] For CP tasks, 69.6882% of tasks should be scheduled to cluster 0
[DEBUG] For CP tasks, 30.3118% of tasks should be scheduled to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] The best resource width for CP tasks on cluster 1 and 2 are <1> and <1>
[DEBUG] Task exec_time on cluster 1: 0.0281533, task exec_time on cluster 2: 0.129858
[DEBUG] Using <2> cores in cluster 1 and <4> cores in cluster 2 achieves the lowest predicted EDP.
[DEBUG] For CP tasks, 69.7543% of tasks should be scheduled to cluster 0
[DEBUG] For CP tasks, 30.2457% of tasks should be scheduled to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] The best resource width for CP tasks on cluster 1 and 2 are <1> and <1>
[DEBUG] Task exec_time on cluster 1: 0.0265864, task exec_time on cluster 2: 0.109444
[DEBUG] Using <2> cores in cluster 1 and <4> cores in cluster 2 achieves the lowest predicted EDP.
[DEBUG] For CP tasks, 67.3017% of tasks should be scheduled to cluster 0
[DEBUG] For CP tasks, 32.6983% of tasks should be scheduled to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 1 to cluster 0
[DEBUG] The best resource width for CP tasks on cluster 1 and 2 are <1> and <1>
[DEBUG] Task exec_time on cluster 1: 0.0286569, task exec_time on cluster 2: 0.139074
[DEBUG] Using <2> cores in cluster 1 and <4> cores in cluster 2 achieves the lowest predicted EDP.
[DEBUG] For CP tasks, 70.8159% of tasks should be scheduled to cluster 0
[DEBUG] For CP tasks, 29.184% of tasks should be scheduled to cluster 1
[DEBUG] Work stealing from cluster 1 to cluster 0
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] The best resource width for CP tasks on cluster 1 and 2 are <1> and <1>
[DEBUG] Task exec_time on cluster 1: 0.0286539, task exec_time on cluster 2: 0.13788
[DEBUG] Using <2> cores in cluster 1 and <4> cores in cluster 2 achieves the lowest predicted EDP.
[DEBUG] For CP tasks, 70.6397% of tasks should be scheduled to cluster 0
[DEBUG] For CP tasks, 29.3603% of tasks should be scheduled to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] The best resource width for CP tasks on cluster 1 and 2 are <1> and <1>
[DEBUG] Task exec_time on cluster 1: 0.0286029, task exec_time on cluster 2: 0.118724
[DEBUG] Using <2> cores in cluster 1 and <4> cores in cluster 2 achieves the lowest predicted EDP.
[DEBUG] For CP tasks, 67.4838% of tasks should be scheduled to cluster 0
[DEBUG] For CP tasks, 32.5162% of tasks should be scheduled to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 1 to cluster 0
[DEBUG] Work stealing from cluster 1 to cluster 0
[DEBUG] Work stealing from cluster 1 to cluster 0
[DEBUG] Work stealing from cluster 1 to cluster 0
[DEBUG] Work stealing from cluster 1 to cluster 0
[DEBUG] Work stealing from cluster 1 to cluster 0
[DEBUG] The best resource width for CP tasks on cluster 1 and 2 are <1> and <1>
[DEBUG] Task exec_time on cluster 1: 0.0286393, task exec_time on cluster 2: 0.131529
[DEBUG] Using <2> cores in cluster 1 and <4> cores in cluster 2 achieves the lowest predicted EDP.
[DEBUG] For CP tasks, 69.663% of tasks should be scheduled to cluster 0
[DEBUG] For CP tasks, 30.337% of tasks should be scheduled to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
Thread 4 sleeps for 7856 ms. 
Task type: 0: Thread 4 with width 1 completes 1523 tasks.
Task type: 0: Thread 4 with width 2 completes 119 tasks.
Task type: 0: Thread 4 with width 4 completes 279 tasks.
Task type: 1: Thread 4 with width 1 completes 0 tasks.
Task type: 1: Thread 4 with width 2 completes 0 tasks.
Task type: 1: Thread 4 with width 4 completes 0 tasks.
Task type: 2: Thread 4 with width 1 completes 0 tasks.
Task type: 2: Thread 4 with width 2 completes 0 tasks.
Task type: 2: Thread 4 with width 4 completes 0 tasks.
Task type: 3: Thread 4 with width 1 completes 0 tasks.
Task type: 3: Thread 4 with width 2 completes 0 tasks.
Task type: 3: Thread 4 with width 4 completes 0 tasks.
Task type: 4: Thread 4 with width 1 completes 0 tasks.
Task type: 4: Thread 4 with width 2 completes 0 tasks.
Task type: 4: Thread 4 with width 4 completes 0 tasks.
Task type: 5: Thread 4 with width 1 completes 0 tasks.
Task type: 5: Thread 4 with width 2 completes 0 tasks.
Task type: 5: Thread 4 with width 4 completes 0 tasks.
The total execution time of thread 4 is 206.923 s.
Thread 0 sleeps for 22013 ms. 
Task type: 0: Thread 0 with width 1 completes 6672 tasks.
Task type: 0: Thread 0 with width 2 completes 299 tasks.
Task type: 0: Thread 0 with width 4 completes 0 tasks.
Task type: 1: Thread 0 with width 1 completes 0 tasks.
Task type: 1: Thread 0 with width 2 completes 0 tasks.
Task type: 1: Thread 0 with width 4 completes 0 tasks.
Task type: 2: Thread 0 with width 1 completes 0 tasks.
Task type: 2: Thread 0 with width 2 completes 0 tasks.
Task type: 2: Thread 0 with width 4 completes 0 tasks.
Task type: 3: Thread 0 with width 1 completes 0 tasks.
Task type: 3: Thread 0 with width 2 completes 0 tasks.
Task type: 3: Thread 0 with width 4 completes 0 tasks.
Task type: 4: Thread 0 with width 1 completes 0 tasks.
Task type: 4: Thread 0 with width 2 completes 0 tasks.
Task type: 4: Thread 0 with width 4 completes 0 tasks.
Task type: 5: Thread 0 with width 1 completes 0 tasks.
Task type: 5: Thread 0 with width 2 completes 0 tasks.
Task type: 5: Thread 0 with width 4 completes 0 tasks.
The total execution time of thread 0 is 192.599 s.
Thread 1 sleeps for 22837 ms. 
Task type: 0: Thread 1 with width 1 completes 6561 tasks.
Task type: 0: Thread 1 with width 2 completes 299 tasks.
Task type: 0: Thread 1 with width 4 completes 0 tasks.
Task type: 1: Thread 1 with width 1 completes 0 tasks.
Task type: 1: Thread 1 with width 2 completes 0 tasks.
Task type: 1: Thread 1 with width 4 completes 0 tasks.
Task type: 2: Thread 1 with width 1 completes 0 tasks.
Task type: 2: Thread 1 with width 2 completes 0 tasks.
Task type: 2: Thread 1 with width 4 completes 0 tasks.
Task type: 3: Thread 1 with width 1 completes 0 tasks.
Task type: 3: Thread 1 with width 2 completes 0 tasks.
Task type: 3: Thread 1 with width 4 completes 0 tasks.
Task type: 4: Thread 1 with width 1 completes 0 tasks.
Task type: 4: Thread 1 with width 2 completes 0 tasks.
Task type: 4: Thread 1 with width 4 completes 0 tasks.
Task type: 5: Thread 1 with width 1 completes 0 tasks.
Task type: 5: Thread 1 with width 2 completes 0 tasks.
Task type: 5: Thread 1 with width 4 completes 0 tasks.
The total execution time of thread 1 is 191.78 s.
Thread 2 sleeps for 9060 ms. 
Task type: 0: Thread 2 with width 1 completes 1385 tasks.
Task type: 0: Thread 2 with width 2 completes 114 tasks.
Task type: 0: Thread 2 with width 4 completes 279 tasks.
Task type: 1: Thread 2 with width 1 completes 0 tasks.
Task type: 1: Thread 2 with width 2 completes 0 tasks.
Task type: 1: Thread 2 with width 4 completes 0 tasks.
Task type: 2: Thread 2 with width 1 completes 0 tasks.
Task type: 2: Thread 2 with width 2 completes 0 tasks.
Task type: 2: Thread 2 with width 4 completes 0 tasks.
Task type: 3: Thread 2 with width 1 completes 0 tasks.
Task type: 3: Thread 2 with width 2 completes 0 tasks.
Task type: 3: Thread 2 with width 4 completes 0 tasks.
Task type: 4: Thread 2 with width 1 completes 0 tasks.
Task type: 4: Thread 2 with width 2 completes 0 tasks.
Task type: 4: Thread 2 with width 4 completes 0 tasks.
Task type: 5: Thread 2 with width 1 completes 0 tasks.
Task type: 5: Thread 2 with width 2 completes 0 tasks.
Task type: 5: Thread 2 with width 4 completes 0 tasks.
The total execution time of thread 2 is 205.616 s.
Thread 3 sleeps for 6527 ms. 
Task type: 0: Thread 3 with width 1 completes 1519 tasks.
Task type: 0: Thread 3 with width 2 completes 114 tasks.
Task type: 0: Thread 3 with width 4 completes 279 tasks.
Task type: 1: Thread 3 with width 1 completes 0 tasks.
Task type: 1: Thread 3 with width 2 completes 0 tasks.
Task type: 1: Thread 3 with width 4 completes 0 tasks.
Task type: 2: Thread 3 with width 1 completes 0 tasks.
Task type: 2: Thread 3 with width 2 completes 0 tasks.
Task type: 2: Thread 3 with width 4 completes 0 tasks.
Task type: 3: Thread 3 with width 1 completes 0 tasks.
Task type: 3: Thread 3 with width 2 completes 0 tasks.
Task type: 3: Thread 3 with width 4 completes 0 tasks.
Task type: 4: Thread 3 with width 1 completes 0 tasks.
Task type: 4: Thread 3 with width 2 completes 0 tasks.
Task type: 4: Thread 3 with width 4 completes 0 tasks.
Task type: 5: Thread 3 with width 1 completes 0 tasks.
Task type: 5: Thread 3 with width 2 completes 0 tasks.
Task type: 5: Thread 3 with width 4 completes 0 tasks.
The total execution time of thread 3 is 208.312 s.
Thread 5 sleeps for 8695 ms. 
Task type: 0: Thread 5 with width 1 completes 1529 tasks.
Task type: 0: Thread 5 with width 2 completes 119 tasks.
Task type: 0: Thread 5 with width 4 completes 279 tasks.
Task type: 1: Thread 5 with width 1 completes 0 tasks.
Task type: 1: Thread 5 with width 2 completes 0 tasks.
Task type: 1: Thread 5 with width 4 completes 0 tasks.
Task type: 2: Thread 5 with width 1 completes 0 tasks.
Task type: 2: Thread 5 with width 2 completes 0 tasks.
Task type: 2: Thread 5 with width 4 completes 0 tasks.
Task type: 3: Thread 5 with width 1 completes 0 tasks.
Task type: 3: Thread 5 with width 2 completes 0 tasks.
Task type: 3: Thread 5 with width 4 completes 0 tasks.
Task type: 4: Thread 5 with width 1 completes 0 tasks.
Task type: 4: Thread 5 with width 2 completes 0 tasks.
Task type: 4: Thread 5 with width 4 completes 0 tasks.
Task type: 5: Thread 5 with width 1 completes 0 tasks.
Task type: 5: Thread 5 with width 2 completes 0 tasks.
Task type: 5: Thread 5 with width 4 completes 0 tasks.
The total execution time of thread 5 is 206.124 s.
20000,16,1686227110718	1686227325793,215.075,92.9909
Total number of steals across clusters: 1248


---------------------- Test Application - Synthetic Benchmarks ---------------------
---------------------- You choose JOSS scheduler ---------------------
CP: Training Phase finished. Predicted execution time and power results for the kernel tasks: 

---------- Execution Time Predictions ---------- 
Memory Frequency: 1866000000: 
Cluster 0: 
CPU_Freq[2035200]: 0.0294224	0.0176216	
CPU_Freq[1881600]: 0.0313436	0.0180539	
CPU_Freq[1728000]: 0.0334435	0.0185638	
CPU_Freq[1574400]: 0.0359696	0.0191732	
CPU_Freq[1420800]: 0.0390658	0.0199143	
CPU_Freq[1267200]: 0.0429494	0.020835	
CPU_Freq[1113600]: 0.04767	0.0239274	
CPU_Freq[960000]: 0.0546829	0.0235605	
CPU_Freq[806400]: 0.0641521	0.025702	
CPU_Freq[652800]: 0.0784769	0.0288512	
CPU_Freq[499200]: 0.102622	0.0339384	
CPU_Freq[345600]: 0.151615	0.0435474	
Cluster 1: 
CPU_Freq[2035200]: 0.09197	0.0518909	0.0295687	
CPU_Freq[1881600]: 0.0947882	0.0523036	0.0298836	
CPU_Freq[1728000]: 0.0994414	0.0540502	0.0304541	
CPU_Freq[1574400]: 0.105039	0.0561626	0.0311585	
CPU_Freq[1420800]: 0.111902	0.0587685	0.0320483	
CPU_Freq[1267200]: 0.120511	0.0620623	0.0332045	
CPU_Freq[1113600]: 0.133661	0.0643437	0.0353639	
CPU_Freq[960000]: 0.146531	0.0721768	0.0369559	
CPU_Freq[806400]: 0.167539	0.0805064	0.0402485	
CPU_Freq[652800]: 0.199334	0.0933674	0.0456424	
CPU_Freq[499200]: 0.252962	0.115681	0.0557429	
CPU_Freq[345600]: 0.361896	0.163012	0.079498	
Memory Frequency: 1600000000: 
Cluster 0: 
CPU_Freq[2035200]: 0.0307213	0.0221286	
CPU_Freq[1881600]: 0.0324766	0.022552	
CPU_Freq[1728000]: 0.0345555	0.0230507	
CPU_Freq[1574400]: 0.0370564	0.0236467	
CPU_Freq[1420800]: 0.040122	0.0243716	
CPU_Freq[1267200]: 0.0439675	0.0252722	
CPU_Freq[1113600]: 0.0489328	0.0264213	
CPU_Freq[960000]: 0.0555884	0.027938	
CPU_Freq[806400]: 0.0649691	0.0300326	
CPU_Freq[652800]: 0.0791638	0.0331128	
CPU_Freq[499200]: 0.103098	0.0380886	
CPU_Freq[345600]: 0.151695	0.0474872	
Cluster 1: 
CPU_Freq[2035200]: 0.0949202	0.0540928	0.0315894	
CPU_Freq[1881600]: 0.0988179	0.0555317	0.0320391	
CPU_Freq[1728000]: 0.103435	0.0572441	0.0325847	
CPU_Freq[1574400]: 0.108989	0.0593156	0.0332593	
CPU_Freq[1420800]: 0.115799	0.0618717	0.0341129	
CPU_Freq[1267200]: 0.124342	0.0651037	0.0352241	
CPU_Freq[1113600]: 0.135374	0.0693176	0.0367233	
CPU_Freq[960000]: 0.150166	0.0750351	0.0388423	
CPU_Freq[806400]: 0.171021	0.0832209	0.0420303	
CPU_Freq[652800]: 0.202591	0.0958705	0.0472702	
CPU_Freq[499200]: 0.255854	0.117842	0.0571222	
CPU_Freq[345600]: 0.364101	0.164528	0.0804076	
Memory Frequency: 1331200000: 
Cluster 0: 
CPU_Freq[2035200]: 0.0325095	0.0285135	
CPU_Freq[1881600]: 0.0342394	0.0289235	
CPU_Freq[1728000]: 0.0362885	0.0294064	
CPU_Freq[1574400]: 0.0387537	0.0299835	
CPU_Freq[1420800]: 0.041776	0.0306854	
CPU_Freq[1267200]: 0.0455676	0.0315574	
CPU_Freq[1113600]: 0.0504642	0.03267	
CPU_Freq[960000]: 0.0570291	0.0341387	
CPU_Freq[806400]: 0.0662844	0.0361668	
CPU_Freq[652800]: 0.0802948	0.0391494	
CPU_Freq[499200]: 0.103932	0.0439673	
CPU_Freq[345600]: 0.151966	0.0530679	
Cluster 1: 
CPU_Freq[2035200]: 0.100763	0.0588236	0.0347405	
CPU_Freq[1881600]: 0.104617	0.0602213	0.0351602	
CPU_Freq[1728000]: 0.109182	0.0618852	0.0356704	
CPU_Freq[1574400]: 0.114675	0.0638987	0.0363029	
CPU_Freq[1420800]: 0.121409	0.0663844	0.0371051	
CPU_Freq[1267200]: 0.129859	0.0695288	0.0381526	
CPU_Freq[1113600]: 0.140773	0.073631	0.0395705	
CPU_Freq[960000]: 0.155407	0.079201	0.0415821	
CPU_Freq[806400]: 0.176045	0.0871831	0.0446219	
CPU_Freq[652800]: 0.207295	0.0995332	0.0496438	
CPU_Freq[499200]: 0.260043	0.121021	0.0591436	
CPU_Freq[345600]: 0.367315	0.166793	0.0817638	
Memory Frequency: 1062400000: 
Cluster 0: 
CPU_Freq[2035200]: 0.0355521	0.0381293	
CPU_Freq[1881600]: 0.0372439	0.0385191	
CPU_Freq[1728000]: 0.0392481	0.0389782	
CPU_Freq[1574400]: 0.0416596	0.0395268	
CPU_Freq[1420800]: 0.0446165	0.0401941	
CPU_Freq[1267200]: 0.048327	0.0410231	
CPU_Freq[1113600]: 0.0531201	0.0420808	
CPU_Freq[960000]: 0.0595482	0.0434771	
CPU_Freq[806400]: 0.0686149	0.0454051	
CPU_Freq[652800]: 0.0823477	0.0482406	
CPU_Freq[499200]: 0.105536	0.0528209	
CPU_Freq[345600]: 0.152723	0.0614726	
Cluster 1: 
CPU_Freq[2035200]: 0.109765	0.0662071	0.0396359	
CPU_Freq[1881600]: 0.113553	0.0675428	0.0400105	
CPU_Freq[1728000]: 0.11804	0.0691336	0.0404676	
CPU_Freq[1574400]: 0.123439	0.0710599	0.0410365	
CPU_Freq[1420800]: 0.13006	0.0734394	0.0417615	
CPU_Freq[1267200]: 0.138369	0.0764519	0.042713	
CPU_Freq[1113600]: 0.149104	0.0803859	0.0440084	
CPU_Freq[960000]: 0.163502	0.0857338	0.0458584	
CPU_Freq[806400]: 0.183812	0.0934092	0.0486748	
CPU_Freq[652800]: 0.214582	0.105308	0.0533684	
CPU_Freq[499200]: 0.266552	0.126067	0.0623378	
CPU_Freq[345600]: 0.372357	0.170463	0.0839562	
Memory Frequency: 800000000: 
Cluster 0: 
CPU_Freq[2035200]: 0.0413901	0.0537491	
CPU_Freq[1881600]: 0.04302	0.054106	
CPU_Freq[1728000]: 0.0449511	0.0545264	
CPU_Freq[1574400]: 0.0472754	0.0550288	
CPU_Freq[1420800]: 0.0501262	0.0556399	
CPU_Freq[1267200]: 0.0537049	0.056399	
CPU_Freq[1113600]: 0.0583297	0.0573676	
CPU_Freq[960000]: 0.0645359	0.0586461	
CPU_Freq[806400]: 0.073296	0.0604117	
CPU_Freq[652800]: 0.086578	0.0630082	
CPU_Freq[499200]: 0.109038	0.0672024	
CPU_Freq[345600]: 0.15485	0.0751249	
Cluster 1: 
CPU_Freq[2035200]: 0.124903	0.0788639	0.0479722	
CPU_Freq[1881600]: 0.128584	0.0800989	0.0482735	
CPU_Freq[1728000]: 0.132944	0.0815711	0.0486442	
CPU_Freq[1574400]: 0.138193	0.0833556	0.0491099	
CPU_Freq[1420800]: 0.14463	0.0855627	0.0497094	
CPU_Freq[1267200]: 0.15271	0.0883609	0.0505049	
CPU_Freq[1113600]: 0.163153	0.0920215	0.0516014	
CPU_Freq[960000]: 0.177167	0.0970086	0.0531887	
CPU_Freq[806400]: 0.196946	0.104186	0.0556426	
CPU_Freq[652800]: 0.226934	0.115352	0.0598028	
CPU_Freq[499200]: 0.277643	0.134928	0.0679107	
CPU_Freq[345600]: 0.381063	0.177088	0.0879017	

---------- CPU Power Predictions ---------- 
Memory Frequency: 1866000000: 
Cluster 0: 
CPU_Freq[2035200]: 2.31727	3.76403	
CPU_Freq[1881600]: 2.03666	3.33769	
CPU_Freq[1728000]: 1.78005	2.95188	
CPU_Freq[1574400]: 1.54744	2.6066	
CPU_Freq[1420800]: 1.33884	2.30186	
CPU_Freq[1267200]: 1.15424	2.03766	
CPU_Freq[1113600]: 0.993638	1.81398	
CPU_Freq[960000]: 0.857042	1.63084	
CPU_Freq[806400]: 0.744447	1.48824	
CPU_Freq[652800]: 0.655855	1.38616	
CPU_Freq[499200]: 0.591266	1.32463	
CPU_Freq[345600]: 0.550679	1.30362	
Cluster 1: 
CPU_Freq[2035200]: 1.16144	1.45798	1.93611	
CPU_Freq[1881600]: 1.02113	1.27692	1.66974	
CPU_Freq[1728000]: 0.893998	1.11356	1.43124	
CPU_Freq[1574400]: 0.780052	0.967922	1.22062	
CPU_Freq[1420800]: 0.679289	0.839995	1.03788	
CPU_Freq[1267200]: 0.591707	0.729781	0.883005	
CPU_Freq[1113600]: 0.517307	0.637282	0.756005	
CPU_Freq[960000]: 0.45609	0.562495	0.65688	
CPU_Freq[806400]: 0.408054	0.505423	0.585628	
CPU_Freq[652800]: 0.373201	0.466064	0.54225	
CPU_Freq[499200]: 0.35153	0.444419	0.526745	
CPU_Freq[345600]: 0.34304	0.440487	0.539114	
Memory Frequency: 1600000000: 
Cluster 0: 
CPU_Freq[2035200]: 2.31727	3.76403	
CPU_Freq[1881600]: 2.03666	3.33769	
CPU_Freq[1728000]: 1.78005	2.95188	
CPU_Freq[1574400]: 1.54744	2.6066	
CPU_Freq[1420800]: 1.33884	2.30186	
CPU_Freq[1267200]: 1.15424	2.03766	
CPU_Freq[1113600]: 0.993638	1.81398	
CPU_Freq[960000]: 0.857042	1.63084	
CPU_Freq[806400]: 0.744447	1.48824	
CPU_Freq[652800]: 0.655855	1.38616	
CPU_Freq[499200]: 0.591266	1.32463	
CPU_Freq[345600]: 0.550679	1.30362	
Cluster 1: 
CPU_Freq[2035200]: 1.16144	1.45798	1.93611	
CPU_Freq[1881600]: 1.02113	1.27692	1.66974	
CPU_Freq[1728000]: 0.893998	1.11356	1.43124	
CPU_Freq[1574400]: 0.780052	0.967922	1.22062	
CPU_Freq[1420800]: 0.679289	0.839995	1.03788	
CPU_Freq[1267200]: 0.591707	0.729781	0.883005	
CPU_Freq[1113600]: 0.517307	0.637282	0.756005	
CPU_Freq[960000]: 0.45609	0.562495	0.65688	
CPU_Freq[806400]: 0.408054	0.505423	0.585628	
CPU_Freq[652800]: 0.373201	0.466064	0.54225	
CPU_Freq[499200]: 0.35153	0.444419	0.526745	
CPU_Freq[345600]: 0.34304	0.440487	0.539114	
Memory Frequency: 1331200000: 
Cluster 0: 
CPU_Freq[2035200]: 2.31727	3.76403	
CPU_Freq[1881600]: 2.03666	3.33769	
CPU_Freq[1728000]: 1.78005	2.95188	
CPU_Freq[1574400]: 1.54744	2.6066	
CPU_Freq[1420800]: 1.33884	2.30186	
CPU_Freq[1267200]: 1.15424	2.03766	
CPU_Freq[1113600]: 0.993638	1.81398	
CPU_Freq[960000]: 0.857042	1.63084	
CPU_Freq[806400]: 0.744447	1.48824	
CPU_Freq[652800]: 0.655855	1.38616	
CPU_Freq[499200]: 0.591266	1.32463	
CPU_Freq[345600]: 0.550679	1.30362	
Cluster 1: 
CPU_Freq[2035200]: 1.16144	1.45798	1.93611	
CPU_Freq[1881600]: 1.02113	1.27692	1.66974	
CPU_Freq[1728000]: 0.893998	1.11356	1.43124	
CPU_Freq[1574400]: 0.780052	0.967922	1.22062	
CPU_Freq[1420800]: 0.679289	0.839995	1.03788	
CPU_Freq[1267200]: 0.591707	0.729781	0.883005	
CPU_Freq[1113600]: 0.517307	0.637282	0.756005	
CPU_Freq[960000]: 0.45609	0.562495	0.65688	
CPU_Freq[806400]: 0.408054	0.505423	0.585628	
CPU_Freq[652800]: 0.373201	0.466064	0.54225	
CPU_Freq[499200]: 0.35153	0.444419	0.526745	
CPU_Freq[345600]: 0.34304	0.440487	0.539114	
Memory Frequency: 1062400000: 
Cluster 0: 
CPU_Freq[2035200]: 2.31727	3.76403	
CPU_Freq[1881600]: 2.03666	3.33769	
CPU_Freq[1728000]: 1.78005	2.95188	
CPU_Freq[1574400]: 1.54744	2.6066	
CPU_Freq[1420800]: 1.33884	2.30186	
CPU_Freq[1267200]: 1.15424	2.03766	
CPU_Freq[1113600]: 0.993638	1.81398	
CPU_Freq[960000]: 0.857042	1.63084	
CPU_Freq[806400]: 0.744447	1.48824	
CPU_Freq[652800]: 0.655855	1.38616	
CPU_Freq[499200]: 0.591266	1.32463	
CPU_Freq[345600]: 0.550679	1.30362	
Cluster 1: 
CPU_Freq[2035200]: 1.16144	1.45798	1.93611	
CPU_Freq[1881600]: 1.02113	1.27692	1.66974	
CPU_Freq[1728000]: 0.893998	1.11356	1.43124	
CPU_Freq[1574400]: 0.780052	0.967922	1.22062	
CPU_Freq[1420800]: 0.679289	0.839995	1.03788	
CPU_Freq[1267200]: 0.591707	0.729781	0.883005	
CPU_Freq[1113600]: 0.517307	0.637282	0.756005	
CPU_Freq[960000]: 0.45609	0.562495	0.65688	
CPU_Freq[806400]: 0.408054	0.505423	0.585628	
CPU_Freq[652800]: 0.373201	0.466064	0.54225	
CPU_Freq[499200]: 0.35153	0.444419	0.526745	
CPU_Freq[345600]: 0.34304	0.440487	0.539114	
Memory Frequency: 800000000: 
Cluster 0: 
CPU_Freq[2035200]: 2.31727	3.76403	
CPU_Freq[1881600]: 2.03666	3.33769	
CPU_Freq[1728000]: 1.78005	2.95188	
CPU_Freq[1574400]: 1.54744	2.6066	
CPU_Freq[1420800]: 1.33884	2.30186	
CPU_Freq[1267200]: 1.15424	2.03766	
CPU_Freq[1113600]: 0.993638	1.81398	
CPU_Freq[960000]: 0.857042	1.63084	
CPU_Freq[806400]: 0.744447	1.48824	
CPU_Freq[652800]: 0.655855	1.38616	
CPU_Freq[499200]: 0.591266	1.32463	
CPU_Freq[345600]: 0.550679	1.30362	
Cluster 1: 
CPU_Freq[2035200]: 1.16144	1.45798	1.93611	
CPU_Freq[1881600]: 1.02113	1.27692	1.66974	
CPU_Freq[1728000]: 0.893998	1.11356	1.43124	
CPU_Freq[1574400]: 0.780052	0.967922	1.22062	
CPU_Freq[1420800]: 0.679289	0.839995	1.03788	
CPU_Freq[1267200]: 0.591707	0.729781	0.883005	
CPU_Freq[1113600]: 0.517307	0.637282	0.756005	
CPU_Freq[960000]: 0.45609	0.562495	0.65688	
CPU_Freq[806400]: 0.408054	0.505423	0.585628	
CPU_Freq[652800]: 0.373201	0.466064	0.54225	
CPU_Freq[499200]: 0.35153	0.444419	0.526745	
CPU_Freq[345600]: 0.34304	0.440487	0.539114	

---------- Memory Power Predictions ---------- 
Memory Frequency: 1866000000: 
Cluster 0: 
CPU_Freq[2035200]: 2.43339	7.89638	
CPU_Freq[1881600]: 2.36832	7.14895	
CPU_Freq[1728000]: 2.30041	6.39744	
CPU_Freq[1574400]: 2.22966	5.64185	
CPU_Freq[1420800]: 2.15607	4.88218	
CPU_Freq[1267200]: 2.07963	4.11843	
CPU_Freq[1113600]: 2.00036	3.3506	
CPU_Freq[960000]: 1.91824	2.57869	
CPU_Freq[806400]: 1.83328	1.80271	
CPU_Freq[652800]: 1.74548	1.02264	
CPU_Freq[499200]: 1.65484	0.238492	
CPU_Freq[345600]: 1.56136	-0.549734	
Cluster 1: 
CPU_Freq[2035200]: 1.6543	2.05868	2.35983	
CPU_Freq[1881600]: 1.64005	2.03764	2.32384	
CPU_Freq[1728000]: 1.62397	2.0137	2.28597	
CPU_Freq[1574400]: 1.60605	1.98685	2.2462	
CPU_Freq[1420800]: 1.58628	1.95709	2.20455	
CPU_Freq[1267200]: 1.56468	1.92444	2.16101	
CPU_Freq[1113600]: 1.54125	1.88887	2.11559	
CPU_Freq[960000]: 1.51597	1.85041	2.06827	
CPU_Freq[806400]: 1.48885	1.80904	2.01906	
CPU_Freq[652800]: 1.4599	1.76476	1.96797	
CPU_Freq[499200]: 1.4291	1.71758	1.91499	
CPU_Freq[345600]: 1.39647	1.6675	1.86012	
Memory Frequency: 1600000000: 
Cluster 0: 
CPU_Freq[2035200]: 2.08395	7.80905	
CPU_Freq[1881600]: 2.01876	7.06248	
CPU_Freq[1728000]: 1.95073	6.31184	
CPU_Freq[1574400]: 1.87986	5.55711	
CPU_Freq[1420800]: 1.80614	4.7983	
CPU_Freq[1267200]: 1.72958	4.03542	
CPU_Freq[1113600]: 1.65019	3.26845	
CPU_Freq[960000]: 1.56795	2.49741	
CPU_Freq[806400]: 1.48286	1.72229	
CPU_Freq[652800]: 1.39494	0.943082	
CPU_Freq[499200]: 1.30418	0.159799	
CPU_Freq[345600]: 1.21057	-0.627563	
Cluster 1: 
CPU_Freq[2035200]: 1.25233	1.67428	1.97483	
CPU_Freq[1881600]: 1.23809	1.65325	1.93884	
CPU_Freq[1728000]: 1.222	1.62931	1.90096	
CPU_Freq[1574400]: 1.20408	1.60246	1.86119	
CPU_Freq[1420800]: 1.18432	1.57271	1.81954	
CPU_Freq[1267200]: 1.16272	1.54006	1.77599	
CPU_Freq[1113600]: 1.13928	1.5045	1.73056	
CPU_Freq[960000]: 1.114	1.46604	1.68324	
CPU_Freq[806400]: 1.08689	1.42467	1.63403	
CPU_Freq[652800]: 1.05793	1.3804	1.58293	
CPU_Freq[499200]: 1.02714	1.33323	1.52994	
CPU_Freq[345600]: 0.994508	1.28315	1.47507	
Memory Frequency: 1331200000: 
Cluster 0: 
CPU_Freq[2035200]: 1.84594	7.82628	
CPU_Freq[1881600]: 1.78063	7.08058	
CPU_Freq[1728000]: 1.71247	6.33081	
CPU_Freq[1574400]: 1.64147	5.57695	
CPU_Freq[1420800]: 1.56763	4.81902	
CPU_Freq[1267200]: 1.49095	4.05701	
CPU_Freq[1113600]: 1.41143	3.29091	
CPU_Freq[960000]: 1.32907	2.52074	
CPU_Freq[806400]: 1.24386	1.74649	
CPU_Freq[652800]: 1.15582	0.968162	
CPU_Freq[499200]: 1.06493	0.185751	
CPU_Freq[345600]: 0.971202	-0.600738	
Cluster 1: 
CPU_Freq[2035200]: 0.980707	1.41033	1.71302	
CPU_Freq[1881600]: 0.966462	1.3893	1.67702	
CPU_Freq[1728000]: 0.950379	1.36536	1.63914	
CPU_Freq[1574400]: 0.932456	1.33853	1.59936	
CPU_Freq[1420800]: 0.912695	1.30878	1.5577	
CPU_Freq[1267200]: 0.891096	1.27613	1.51415	
CPU_Freq[1113600]: 0.867657	1.24058	1.46872	
CPU_Freq[960000]: 0.84238	1.20212	1.42139	
CPU_Freq[806400]: 0.815264	1.16076	1.37218	
CPU_Freq[652800]: 0.786309	1.11649	1.32107	
CPU_Freq[499200]: 0.755516	1.06932	1.26808	
CPU_Freq[345600]: 0.722883	1.01924	1.2132	
Memory Frequency: 1062400000: 
Cluster 0: 
CPU_Freq[2035200]: 1.72363	7.94952	
CPU_Freq[1881600]: 1.65819	7.2047	
CPU_Freq[1728000]: 1.58991	6.4558	
CPU_Freq[1574400]: 1.51879	5.70282	
CPU_Freq[1420800]: 1.44483	4.94576	
CPU_Freq[1267200]: 1.36803	4.18462	
CPU_Freq[1113600]: 1.28838	3.4194	
CPU_Freq[960000]: 1.2059	2.6501	
CPU_Freq[806400]: 1.12057	1.87672	
CPU_Freq[652800]: 1.0324	1.09927	
CPU_Freq[499200]: 0.941388	0.317729	
CPU_Freq[345600]: 0.847536	-0.467888	
Cluster 1: 
CPU_Freq[2035200]: 0.844359	1.27152	1.57911	
CPU_Freq[1881600]: 0.830114	1.2505	1.54311	
CPU_Freq[1728000]: 0.814031	1.22657	1.50522	
CPU_Freq[1574400]: 0.796109	1.19973	1.46544	
CPU_Freq[1420800]: 0.776348	1.16999	1.42378	
CPU_Freq[1267200]: 0.754748	1.13735	1.38022	
CPU_Freq[1113600]: 0.731309	1.1018	1.33478	
CPU_Freq[960000]: 0.706032	1.06334	1.28745	
CPU_Freq[806400]: 0.678916	1.02199	1.23823	
CPU_Freq[652800]: 0.649961	0.977724	1.18713	
CPU_Freq[499200]: 0.619168	0.930557	1.13413	
CPU_Freq[345600]: 0.586536	0.880485	1.07925	
Memory Frequency: 800000000: 
Cluster 0: 
CPU_Freq[2035200]: 1.71584	8.17211	
CPU_Freq[1881600]: 1.65028	7.42814	
CPU_Freq[1728000]: 1.58188	6.68009	
CPU_Freq[1574400]: 1.51064	5.92796	
CPU_Freq[1420800]: 1.43656	5.17175	
CPU_Freq[1267200]: 1.35963	4.41146	
CPU_Freq[1113600]: 1.27987	3.6471	
CPU_Freq[960000]: 1.19726	2.87865	
CPU_Freq[806400]: 1.11181	2.10612	
CPU_Freq[652800]: 1.02352	1.32952	
CPU_Freq[499200]: 0.932392	0.548833	
CPU_Freq[345600]: 0.838419	-0.235932	
Cluster 1: 
CPU_Freq[2035200]: 0.841741	1.25673	1.57176	
CPU_Freq[1881600]: 0.827496	1.23571	1.53576	
CPU_Freq[1728000]: 0.811413	1.21178	1.49786	
CPU_Freq[1574400]: 0.79349	1.18495	1.45808	
CPU_Freq[1420800]: 0.773729	1.15522	1.41641	
CPU_Freq[1267200]: 0.75213	1.12258	1.37285	
CPU_Freq[1113600]: 0.728691	1.08703	1.32741	
CPU_Freq[960000]: 0.703414	1.04858	1.28007	
CPU_Freq[806400]: 0.676298	1.00723	1.23085	
CPU_Freq[652800]: 0.647343	0.96297	1.17974	
CPU_Freq[499200]: 0.61655	0.915808	1.12674	
CPU_Freq[345600]: 0.583917	0.86574	1.07185	

[Congratulations!] All the training Phase finished. Training finished time: 1686227357792. Set the CPU frequency of all clusters back to the highest frequency
[DEBUG] Work stealing from cluster 1 to cluster 0
[DEBUG] The best resource width for CP tasks on cluster 1 and 2 are <1> and <1>
[DEBUG] Task exec_time on cluster 1: 0.0292535, task exec_time on cluster 2: 0.09197
[DEBUG] Using <2> cores in cluster 1 and <4> cores in cluster 2 achieves the lowest predicted EDP.
[DEBUG] For CP tasks, 61.119% of tasks should be scheduled to cluster 0
[DEBUG] For CP tasks, 38.881% of tasks should be scheduled to cluster 1
[DEBUG] Work stealing from cluster 1 to cluster 0
[DEBUG] Work stealing from cluster 1 to cluster 0
[DEBUG] The best resource width for CP tasks on cluster 1 and 2 are <1> and <1>
[DEBUG] Task exec_time on cluster 1: 0.0284425, task exec_time on cluster 2: 0.13537
[DEBUG] Using <2> cores in cluster 1 and <4> cores in cluster 2 achieves the lowest predicted EDP.
[DEBUG] For CP tasks, 70.4117% of tasks should be scheduled to cluster 0
[DEBUG] For CP tasks, 29.5883% of tasks should be scheduled to cluster 1
[DEBUG] Work stealing from cluster 1 to cluster 0
[DEBUG] Work stealing from cluster 1 to cluster 0
[DEBUG] Work stealing from cluster 1 to cluster 0
[DEBUG] Work stealing from cluster 1 to cluster 0
[DEBUG] Work stealing from cluster 1 to cluster 0
[DEBUG] Work stealing from cluster 1 to cluster 0
[DEBUG] Work stealing from cluster 1 to cluster 0
[DEBUG] The best resource width for CP tasks on cluster 1 and 2 are <1> and <2>
[DEBUG] Task exec_time on cluster 1: 0.0286141, task exec_time on cluster 2: 0.0677236
[DEBUG] Using <2> cores in cluster 1 and <4> cores in cluster 2 achieves the lowest predicted EDP.
[DEBUG] For CP tasks, 70.2981% of tasks should be scheduled to cluster 0
[DEBUG] For CP tasks, 29.7019% of tasks should be scheduled to cluster 1
[DEBUG] Work stealing from cluster 1 to cluster 0
[DEBUG] Work stealing from cluster 1 to cluster 0
[DEBUG] Work stealing from cluster 1 to cluster 0
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] The best resource width for CP tasks on cluster 1 and 2 are <1> and <1>
[DEBUG] Task exec_time on cluster 1: 0.0282386, task exec_time on cluster 2: 0.123644
[DEBUG] Using <2> cores in cluster 1 and <4> cores in cluster 2 achieves the lowest predicted EDP.
[DEBUG] For CP tasks, 68.6449% of tasks should be scheduled to cluster 0
[DEBUG] For CP tasks, 31.3551% of tasks should be scheduled to cluster 1
[DEBUG] Work stealing from cluster 1 to cluster 0
[DEBUG] Work stealing from cluster 1 to cluster 0
[DEBUG] Work stealing from cluster 1 to cluster 0
[DEBUG] The best resource width for CP tasks on cluster 1 and 2 are <1> and <1>
[DEBUG] Task exec_time on cluster 1: 0.0286051, task exec_time on cluster 2: 0.134045
[DEBUG] Using <2> cores in cluster 1 and <4> cores in cluster 2 achieves the lowest predicted EDP.
[DEBUG] For CP tasks, 70.0869% of tasks should be scheduled to cluster 0
[DEBUG] For CP tasks, 29.9131% of tasks should be scheduled to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] The best resource width for CP tasks on cluster 1 and 2 are <1> and <1>
[DEBUG] Task exec_time on cluster 1: 0.0267944, task exec_time on cluster 2: 0.111258
[DEBUG] Using <2> cores in cluster 1 and <4> cores in cluster 2 achieves the lowest predicted EDP.
[DEBUG] For CP tasks, 67.4918% of tasks should be scheduled to cluster 0
[DEBUG] For CP tasks, 32.5082% of tasks should be scheduled to cluster 1
[DEBUG] Work stealing from cluster 1 to cluster 0
[DEBUG] Work stealing from cluster 1 to cluster 0
[DEBUG] Work stealing from cluster 1 to cluster 0
[DEBUG] The best resource width for CP tasks on cluster 1 and 2 are <1> and <1>
[DEBUG] Task exec_time on cluster 1: 0.0285291, task exec_time on cluster 2: 0.129468
[DEBUG] Using <2> cores in cluster 1 and <4> cores in cluster 2 achieves the lowest predicted EDP.
[DEBUG] For CP tasks, 69.41% of tasks should be scheduled to cluster 0
[DEBUG] For CP tasks, 30.59% of tasks should be scheduled to cluster 1
[DEBUG] Work stealing from cluster 1 to cluster 0
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] The best resource width for CP tasks on cluster 1 and 2 are <1> and <1>
[DEBUG] Task exec_time on cluster 1: 0.0285824, task exec_time on cluster 2: 0.127816
[DEBUG] Using <2> cores in cluster 1 and <4> cores in cluster 2 achieves the lowest predicted EDP.
[DEBUG] For CP tasks, 69.0969% of tasks should be scheduled to cluster 0
[DEBUG] For CP tasks, 30.9031% of tasks should be scheduled to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] The best resource width for CP tasks on cluster 1 and 2 are <1> and <1>
[DEBUG] Task exec_time on cluster 1: 0.0285332, task exec_time on cluster 2: 0.137444
[DEBUG] Using <2> cores in cluster 1 and <4> cores in cluster 2 achieves the lowest predicted EDP.
[DEBUG] For CP tasks, 70.6614% of tasks should be scheduled to cluster 0
[DEBUG] For CP tasks, 29.3386% of tasks should be scheduled to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] The best resource width for CP tasks on cluster 1 and 2 are <1> and <1>
[DEBUG] Task exec_time on cluster 1: 0.0272326, task exec_time on cluster 2: 0.112366
[DEBUG] Using <2> cores in cluster 1 and <4> cores in cluster 2 achieves the lowest predicted EDP.
[DEBUG] For CP tasks, 67.3532% of tasks should be scheduled to cluster 0
[DEBUG] For CP tasks, 32.6468% of tasks should be scheduled to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 1 to cluster 0
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] The best resource width for CP tasks on cluster 1 and 2 are <1> and <1>
[DEBUG] Task exec_time on cluster 1: 0.0287494, task exec_time on cluster 2: 0.135326
[DEBUG] Using <2> cores in cluster 1 and <4> cores in cluster 2 achieves the lowest predicted EDP.
[DEBUG] For CP tasks, 70.1809% of tasks should be scheduled to cluster 0
[DEBUG] For CP tasks, 29.8191% of tasks should be scheduled to cluster 1
[DEBUG] Work stealing from cluster 1 to cluster 0
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] The best resource width for CP tasks on cluster 1 and 2 are <1> and <1>
[DEBUG] Task exec_time on cluster 1: 0.0266976, task exec_time on cluster 2: 0.116694
[DEBUG] Using <2> cores in cluster 1 and <4> cores in cluster 2 achieves the lowest predicted EDP.
[DEBUG] For CP tasks, 68.6075% of tasks should be scheduled to cluster 0
[DEBUG] For CP tasks, 31.3925% of tasks should be scheduled to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 1 to cluster 0
[DEBUG] Work stealing from cluster 1 to cluster 0
[DEBUG] Work stealing from cluster 1 to cluster 0
[DEBUG] The best resource width for CP tasks on cluster 1 and 2 are <1> and <1>
[DEBUG] Task exec_time on cluster 1: 0.0286585, task exec_time on cluster 2: 0.135834
[DEBUG] Using <2> cores in cluster 1 and <4> cores in cluster 2 achieves the lowest predicted EDP.
[DEBUG] For CP tasks, 70.3253% of tasks should be scheduled to cluster 0
[DEBUG] For CP tasks, 29.6747% of tasks should be scheduled to cluster 1
[DEBUG] Work stealing from cluster 1 to cluster 0
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] The best resource width for CP tasks on cluster 1 and 2 are <1> and <1>
[DEBUG] Task exec_time on cluster 1: 0.026269, task exec_time on cluster 2: 0.116266
[DEBUG] Using <2> cores in cluster 1 and <4> cores in cluster 2 achieves the lowest predicted EDP.
[DEBUG] For CP tasks, 68.8764% of tasks should be scheduled to cluster 0
[DEBUG] For CP tasks, 31.1236% of tasks should be scheduled to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] The best resource width for CP tasks on cluster 1 and 2 are <1> and <1>
[DEBUG] Task exec_time on cluster 1: 0.0286956, task exec_time on cluster 2: 0.139243
[DEBUG] Using <2> cores in cluster 1 and <4> cores in cluster 2 achieves the lowest predicted EDP.
[DEBUG] For CP tasks, 70.8132% of tasks should be scheduled to cluster 0
[DEBUG] For CP tasks, 29.1868% of tasks should be scheduled to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] The best resource width for CP tasks on cluster 1 and 2 are <1> and <1>
[DEBUG] Task exec_time on cluster 1: 0.0286777, task exec_time on cluster 2: 0.130369
[DEBUG] Using <2> cores in cluster 1 and <4> cores in cluster 2 achieves the lowest predicted EDP.
[DEBUG] For CP tasks, 69.447% of tasks should be scheduled to cluster 0
[DEBUG] For CP tasks, 30.553% of tasks should be scheduled to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] The best resource width for CP tasks on cluster 1 and 2 are <1> and <1>
[DEBUG] Task exec_time on cluster 1: 0.0289733, task exec_time on cluster 2: 0.138028
[DEBUG] Using <2> cores in cluster 1 and <4> cores in cluster 2 achieves the lowest predicted EDP.
[DEBUG] For CP tasks, 70.4315% of tasks should be scheduled to cluster 0
[DEBUG] For CP tasks, 29.5685% of tasks should be scheduled to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] The best resource width for CP tasks on cluster 1 and 2 are <1> and <1>
[DEBUG] Task exec_time on cluster 1: 0.0284054, task exec_time on cluster 2: 0.114415
[DEBUG] Using <2> cores in cluster 1 and <4> cores in cluster 2 achieves the lowest predicted EDP.
[DEBUG] For CP tasks, 66.8211% of tasks should be scheduled to cluster 0
[DEBUG] For CP tasks, 33.1789% of tasks should be scheduled to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 1 to cluster 0
[DEBUG] Work stealing from cluster 1 to cluster 0
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 1 to cluster 0
[DEBUG] Work stealing from cluster 1 to cluster 0
[DEBUG] Work stealing from cluster 1 to cluster 0
[DEBUG] Work stealing from cluster 1 to cluster 0
[DEBUG] Work stealing from cluster 1 to cluster 0
[DEBUG] The best resource width for CP tasks on cluster 1 and 2 are <1> and <4>
[DEBUG] Task exec_time on cluster 1: 0.0286078, task exec_time on cluster 2: 0.0349657
[DEBUG] Using <2> cores in cluster 1 and <4> cores in cluster 2 achieves the lowest predicted EDP.
[DEBUG] For CP tasks, 70.9681% of tasks should be scheduled to cluster 0
[DEBUG] For CP tasks, 29.0319% of tasks should be scheduled to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] The best resource width for CP tasks on cluster 1 and 2 are <1> and <4>
[DEBUG] Task exec_time on cluster 1: 0.0259923, task exec_time on cluster 2: 0.0309027
[DEBUG] Using <2> cores in cluster 1 and <4> cores in cluster 2 achieves the lowest predicted EDP.
[DEBUG] For CP tasks, 70.3952% of tasks should be scheduled to cluster 0
[DEBUG] For CP tasks, 29.6048% of tasks should be scheduled to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] The best resource width for CP tasks on cluster 1 and 2 are <1> and <1>
[DEBUG] Task exec_time on cluster 1: 0.0287665, task exec_time on cluster 2: 0.130552
[DEBUG] Using <2> cores in cluster 1 and <4> cores in cluster 2 achieves the lowest predicted EDP.
[DEBUG] For CP tasks, 69.4112% of tasks should be scheduled to cluster 0
[DEBUG] For CP tasks, 30.5888% of tasks should be scheduled to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] The best resource width for CP tasks on cluster 1 and 2 are <1> and <1>
[DEBUG] Task exec_time on cluster 1: 0.0282179, task exec_time on cluster 2: 0.111689
[DEBUG] Using <2> cores in cluster 1 and <4> cores in cluster 2 achieves the lowest predicted EDP.
[DEBUG] For CP tasks, 66.4322% of tasks should be scheduled to cluster 0
[DEBUG] For CP tasks, 33.5678% of tasks should be scheduled to cluster 1
[DEBUG] Work stealing from cluster 1 to cluster 0
[DEBUG] Work stealing from cluster 1 to cluster 0
[DEBUG] Work stealing from cluster 1 to cluster 0
[DEBUG] Work stealing from cluster 1 to cluster 0
[DEBUG] The best resource width for CP tasks on cluster 1 and 2 are <1> and <2>
[DEBUG] Task exec_time on cluster 1: 0.0286403, task exec_time on cluster 2: 0.070257
[DEBUG] Using <2> cores in cluster 1 and <4> cores in cluster 2 achieves the lowest predicted EDP.
[DEBUG] For CP tasks, 71.0403% of tasks should be scheduled to cluster 0
[DEBUG] For CP tasks, 28.9597% of tasks should be scheduled to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] The best resource width for CP tasks on cluster 1 and 2 are <1> and <1>
[DEBUG] Task exec_time on cluster 1: 0.0281239, task exec_time on cluster 2: 0.124032
[DEBUG] Using <2> cores in cluster 1 and <4> cores in cluster 2 achieves the lowest predicted EDP.
[DEBUG] For CP tasks, 68.7998% of tasks should be scheduled to cluster 0
[DEBUG] For CP tasks, 31.2002% of tasks should be scheduled to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] The best resource width for CP tasks on cluster 1 and 2 are <1> and <1>
[DEBUG] Task exec_time on cluster 1: 0.026967, task exec_time on cluster 2: 0.114195
[DEBUG] Using <2> cores in cluster 1 and <4> cores in cluster 2 achieves the lowest predicted EDP.
[DEBUG] For CP tasks, 67.9211% of tasks should be scheduled to cluster 0
[DEBUG] For CP tasks, 32.0789% of tasks should be scheduled to cluster 1
[DEBUG] Work stealing from cluster 1 to cluster 0
[DEBUG] The best resource width for CP tasks on cluster 1 and 2 are <1> and <2>
[DEBUG] Task exec_time on cluster 1: 0.0285541, task exec_time on cluster 2: 0.0688322
[DEBUG] Using <2> cores in cluster 1 and <4> cores in cluster 2 achieves the lowest predicted EDP.
[DEBUG] For CP tasks, 70.6796% of tasks should be scheduled to cluster 0
[DEBUG] For CP tasks, 29.3204% of tasks should be scheduled to cluster 1
[DEBUG] Work stealing from cluster 1 to cluster 0
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] The best resource width for CP tasks on cluster 1 and 2 are <1> and <1>
[DEBUG] Task exec_time on cluster 1: 0.026345, task exec_time on cluster 2: 0.134409
[DEBUG] Using <2> cores in cluster 1 and <4> cores in cluster 2 achieves the lowest predicted EDP.
[DEBUG] For CP tasks, 71.8384% of tasks should be scheduled to cluster 0
[DEBUG] For CP tasks, 28.1616% of tasks should be scheduled to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] The best resource width for CP tasks on cluster 1 and 2 are <1> and <1>
[DEBUG] Task exec_time on cluster 1: 0.0266386, task exec_time on cluster 2: 0.115318
[DEBUG] Using <2> cores in cluster 1 and <4> cores in cluster 2 achieves the lowest predicted EDP.
[DEBUG] For CP tasks, 68.3993% of tasks should be scheduled to cluster 0
[DEBUG] For CP tasks, 31.6007% of tasks should be scheduled to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] The best resource width for CP tasks on cluster 1 and 2 are <1> and <4>
[DEBUG] Task exec_time on cluster 1: 0.0287069, task exec_time on cluster 2: 0.0373918
[DEBUG] Using <2> cores in cluster 1 and <4> cores in cluster 2 achieves the lowest predicted EDP.
[DEBUG] For CP tasks, 72.2614% of tasks should be scheduled to cluster 0
[DEBUG] For CP tasks, 27.7387% of tasks should be scheduled to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] The best resource width for CP tasks on cluster 1 and 2 are <1> and <1>
[DEBUG] Task exec_time on cluster 1: 0.0283154, task exec_time on cluster 2: 0.103015
[DEBUG] Using <2> cores in cluster 1 and <4> cores in cluster 2 achieves the lowest predicted EDP.
[DEBUG] For CP tasks, 64.5273% of tasks should be scheduled to cluster 0
[DEBUG] For CP tasks, 35.4727% of tasks should be scheduled to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 1 to cluster 0
[DEBUG] Work stealing from cluster 1 to cluster 0
[DEBUG] The best resource width for CP tasks on cluster 1 and 2 are <1> and <4>
[DEBUG] Task exec_time on cluster 1: 0.0284385, task exec_time on cluster 2: 0.0287315
[DEBUG] Using <2> cores in cluster 1 and <4> cores in cluster 2 achieves the lowest predicted EDP.
[DEBUG] For CP tasks, 66.894% of tasks should be scheduled to cluster 0
[DEBUG] For CP tasks, 33.106% of tasks should be scheduled to cluster 1
[DEBUG] The best resource width for CP tasks on cluster 1 and 2 are <1> and <2>
[DEBUG] Task exec_time on cluster 1: 0.0285612, task exec_time on cluster 2: 0.0652795
[DEBUG] Using <2> cores in cluster 1 and <4> cores in cluster 2 achieves the lowest predicted EDP.
[DEBUG] For CP tasks, 69.5641% of tasks should be scheduled to cluster 0
[DEBUG] For CP tasks, 30.4359% of tasks should be scheduled to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] The best resource width for CP tasks on cluster 1 and 2 are <1> and <4>
[DEBUG] Task exec_time on cluster 1: 0.027314, task exec_time on cluster 2: 0.0320252
[DEBUG] Using <2> cores in cluster 1 and <4> cores in cluster 2 achieves the lowest predicted EDP.
[DEBUG] For CP tasks, 70.1044% of tasks should be scheduled to cluster 0
[DEBUG] For CP tasks, 29.8956% of tasks should be scheduled to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] The best resource width for CP tasks on cluster 1 and 2 are <1> and <4>
[DEBUG] Task exec_time on cluster 1: 0.0264547, task exec_time on cluster 2: 0.0209116
[DEBUG] Using <2> cores in cluster 1 and <4> cores in cluster 2 achieves the lowest predicted EDP.
[DEBUG] For CP tasks, 61.2543% of tasks should be scheduled to cluster 0
[DEBUG] For CP tasks, 38.7457% of tasks should be scheduled to cluster 1
[DEBUG] The best resource width for CP tasks on cluster 1 and 2 are <1> and <2>
[DEBUG] Task exec_time on cluster 1: 0.0286605, task exec_time on cluster 2: 0.059321
[DEBUG] Using <2> cores in cluster 1 and <4> cores in cluster 2 achieves the lowest predicted EDP.
[DEBUG] For CP tasks, 67.4244% of tasks should be scheduled to cluster 0
[DEBUG] For CP tasks, 32.5756% of tasks should be scheduled to cluster 1
[DEBUG] Work stealing from cluster 1 to cluster 0
[DEBUG] Work stealing from cluster 1 to cluster 0
[DEBUG] The best resource width for CP tasks on cluster 1 and 2 are <1> and <1>
[DEBUG] Task exec_time on cluster 1: 0.0287328, task exec_time on cluster 2: 0.132725
[DEBUG] Using <2> cores in cluster 1 and <4> cores in cluster 2 achieves the lowest predicted EDP.
[DEBUG] For CP tasks, 69.7852% of tasks should be scheduled to cluster 0
[DEBUG] For CP tasks, 30.2148% of tasks should be scheduled to cluster 1
[DEBUG] Work stealing from cluster 1 to cluster 0
[DEBUG] The best resource width for CP tasks on cluster 1 and 2 are <1> and <1>
[DEBUG] Task exec_time on cluster 1: 0.0285557, task exec_time on cluster 2: 0.13811
[DEBUG] Using <2> cores in cluster 1 and <4> cores in cluster 2 achieves the lowest predicted EDP.
[DEBUG] For CP tasks, 70.7454% of tasks should be scheduled to cluster 0
[DEBUG] For CP tasks, 29.2546% of tasks should be scheduled to cluster 1
[DEBUG] Work stealing from cluster 1 to cluster 0
[DEBUG] Work stealing from cluster 1 to cluster 0
[DEBUG] Work stealing from cluster 1 to cluster 0
[DEBUG] The best resource width for CP tasks on cluster 1 and 2 are <1> and <1>
[DEBUG] Task exec_time on cluster 1: 0.0286965, task exec_time on cluster 2: 0.134758
[DEBUG] Using <2> cores in cluster 1 and <4> cores in cluster 2 achieves the lowest predicted EDP.
[DEBUG] For CP tasks, 70.1313% of tasks should be scheduled to cluster 0
[DEBUG] For CP tasks, 29.8687% of tasks should be scheduled to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] The best resource width for CP tasks on cluster 1 and 2 are <1> and <1>
[DEBUG] Task exec_time on cluster 1: 0.0263294, task exec_time on cluster 2: 0.116266
[DEBUG] Using <2> cores in cluster 1 and <4> cores in cluster 2 achieves the lowest predicted EDP.
[DEBUG] For CP tasks, 68.827% of tasks should be scheduled to cluster 0
[DEBUG] For CP tasks, 31.173% of tasks should be scheduled to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] The best resource width for CP tasks on cluster 1 and 2 are <1> and <1>
[DEBUG] Task exec_time on cluster 1: 0.0276003, task exec_time on cluster 2: 0.114139
[DEBUG] Using <2> cores in cluster 1 and <4> cores in cluster 2 achieves the lowest predicted EDP.
[DEBUG] For CP tasks, 67.4025% of tasks should be scheduled to cluster 0
[DEBUG] For CP tasks, 32.5975% of tasks should be scheduled to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] The best resource width for CP tasks on cluster 1 and 2 are <1> and <1>
[DEBUG] Task exec_time on cluster 1: 0.0286588, task exec_time on cluster 2: 0.132991
[DEBUG] Using <2> cores in cluster 1 and <4> cores in cluster 2 achieves the lowest predicted EDP.
[DEBUG] For CP tasks, 69.8818% of tasks should be scheduled to cluster 0
[DEBUG] For CP tasks, 30.1182% of tasks should be scheduled to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] The best resource width for CP tasks on cluster 1 and 2 are <1> and <1>
[DEBUG] Task exec_time on cluster 1: 0.0283447, task exec_time on cluster 2: 0.113254
[DEBUG] Using <2> cores in cluster 1 and <4> cores in cluster 2 achieves the lowest predicted EDP.
[DEBUG] For CP tasks, 66.6422% of tasks should be scheduled to cluster 0
[DEBUG] For CP tasks, 33.3578% of tasks should be scheduled to cluster 1
[DEBUG] Work stealing from cluster 1 to cluster 0
[DEBUG] Work stealing from cluster 1 to cluster 0
[DEBUG] The best resource width for CP tasks on cluster 1 and 2 are <1> and <1>
[DEBUG] Task exec_time on cluster 1: 0.0284797, task exec_time on cluster 2: 0.137399
[DEBUG] Using <2> cores in cluster 1 and <4> cores in cluster 2 achieves the lowest predicted EDP.
[DEBUG] For CP tasks, 70.6936% of tasks should be scheduled to cluster 0
[DEBUG] For CP tasks, 29.3064% of tasks should be scheduled to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] The best resource width for CP tasks on cluster 1 and 2 are <1> and <1>
[DEBUG] Task exec_time on cluster 1: 0.0262081, task exec_time on cluster 2: 0.10697
[DEBUG] Using <2> cores in cluster 1 and <4> cores in cluster 2 achieves the lowest predicted EDP.
[DEBUG] For CP tasks, 67.1137% of tasks should be scheduled to cluster 0
[DEBUG] For CP tasks, 32.8863% of tasks should be scheduled to cluster 1
[DEBUG] Work stealing from cluster 1 to cluster 0
[DEBUG] Work stealing from cluster 1 to cluster 0
[DEBUG] Work stealing from cluster 1 to cluster 0
[DEBUG] Work stealing from cluster 1 to cluster 0
[DEBUG] The best resource width for CP tasks on cluster 1 and 2 are <1> and <1>
[DEBUG] Task exec_time on cluster 1: 0.0285514, task exec_time on cluster 2: 0.132057
[DEBUG] Using <2> cores in cluster 1 and <4> cores in cluster 2 achieves the lowest predicted EDP.
[DEBUG] For CP tasks, 69.8123% of tasks should be scheduled to cluster 0
[DEBUG] For CP tasks, 30.1877% of tasks should be scheduled to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] The best resource width for CP tasks on cluster 1 and 2 are <1> and <1>
[DEBUG] Task exec_time on cluster 1: 0.0300519, task exec_time on cluster 2: 0.113816
[DEBUG] Using <2> cores in cluster 1 and <4> cores in cluster 2 achieves the lowest predicted EDP.
[DEBUG] For CP tasks, 65.4415% of tasks should be scheduled to cluster 0
[DEBUG] For CP tasks, 34.5585% of tasks should be scheduled to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 1 to cluster 0
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 1 to cluster 0
[DEBUG] Work stealing from cluster 1 to cluster 0
[DEBUG] Work stealing from cluster 1 to cluster 0
[DEBUG] Work stealing from cluster 1 to cluster 0
[DEBUG] The best resource width for CP tasks on cluster 1 and 2 are <1> and <1>
[DEBUG] Task exec_time on cluster 1: 0.028669, task exec_time on cluster 2: 0.134728
[DEBUG] Using <2> cores in cluster 1 and <4> cores in cluster 2 achieves the lowest predicted EDP.
[DEBUG] For CP tasks, 70.1467% of tasks should be scheduled to cluster 0
[DEBUG] For CP tasks, 29.8533% of tasks should be scheduled to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] The best resource width for CP tasks on cluster 1 and 2 are <1> and <1>
[DEBUG] Task exec_time on cluster 1: 0.0266691, task exec_time on cluster 2: 0.110447
[DEBUG] Using <2> cores in cluster 1 and <4> cores in cluster 2 achieves the lowest predicted EDP.
[DEBUG] For CP tasks, 67.434% of tasks should be scheduled to cluster 0
[DEBUG] For CP tasks, 32.566% of tasks should be scheduled to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 1 to cluster 0
[DEBUG] Work stealing from cluster 1 to cluster 0
[DEBUG] Work stealing from cluster 1 to cluster 0
[DEBUG] Work stealing from cluster 1 to cluster 0
[DEBUG] Work stealing from cluster 1 to cluster 0
[DEBUG] Work stealing from cluster 1 to cluster 0
[DEBUG] Work stealing from cluster 1 to cluster 0
[DEBUG] The best resource width for CP tasks on cluster 1 and 2 are <1> and <1>
[DEBUG] Task exec_time on cluster 1: 0.0265239, task exec_time on cluster 2: 0.132549
[DEBUG] Using <2> cores in cluster 1 and <4> cores in cluster 2 achieves the lowest predicted EDP.
[DEBUG] For CP tasks, 71.4178% of tasks should be scheduled to cluster 0
[DEBUG] For CP tasks, 28.5822% of tasks should be scheduled to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] The best resource width for CP tasks on cluster 1 and 2 are <1> and <1>
[DEBUG] Task exec_time on cluster 1: 0.0284074, task exec_time on cluster 2: 0.126205
[DEBUG] Using <2> cores in cluster 1 and <4> cores in cluster 2 achieves the lowest predicted EDP.
[DEBUG] For CP tasks, 68.957% of tasks should be scheduled to cluster 0
[DEBUG] For CP tasks, 31.043% of tasks should be scheduled to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] The best resource width for CP tasks on cluster 1 and 2 are <1> and <1>
[DEBUG] Task exec_time on cluster 1: 0.0274791, task exec_time on cluster 2: 0.111402
[DEBUG] Using <2> cores in cluster 1 and <4> cores in cluster 2 achieves the lowest predicted EDP.
[DEBUG] For CP tasks, 66.9644% of tasks should be scheduled to cluster 0
[DEBUG] For CP tasks, 33.0356% of tasks should be scheduled to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 1 to cluster 0
[DEBUG] Work stealing from cluster 1 to cluster 0
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 1 to cluster 0
[DEBUG] Work stealing from cluster 1 to cluster 0
[DEBUG] The best resource width for CP tasks on cluster 1 and 2 are <1> and <1>
[DEBUG] Task exec_time on cluster 1: 0.0286005, task exec_time on cluster 2: 0.135341
[DEBUG] Using <2> cores in cluster 1 and <4> cores in cluster 2 achieves the lowest predicted EDP.
[DEBUG] For CP tasks, 70.2916% of tasks should be scheduled to cluster 0
[DEBUG] For CP tasks, 29.7084% of tasks should be scheduled to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
[DEBUG] Work stealing from cluster 0 to cluster 1
Thread 4 sleeps for 6360 ms. 
Task type: 0: Thread 4 with width 1 completes 1293 tasks.
Task type: 0: Thread 4 with width 2 completes 280 tasks.
Task type: 0: Thread 4 with width 4 completes 806 tasks.
Task type: 1: Thread 4 with width 1 completes 0 tasks.
Task type: 1: Thread 4 with width 2 completes 0 tasks.
Task type: 1: Thread 4 with width 4 completes 0 tasks.
Task type: 2: Thread 4 with width 1 completes 0 tasks.
Task type: 2: Thread 4 with width 2 completes 0 tasks.
Task type: 2: Thread 4 with width 4 completes 0 tasks.
Task type: 3: Thread 4 with width 1 completes 0 tasks.
Task type: 3: Thread 4 with width 2 completes 0 tasks.
Task type: 3: Thread 4 with width 4 completes 0 tasks.
Task type: 4: Thread 4 with width 1 completes 0 tasks.
Task type: 4: Thread 4 with width 2 completes 0 tasks.
Task type: 4: Thread 4 with width 4 completes 0 tasks.
Task type: 5: Thread 4 with width 1 completes 0 tasks.
Task type: 5: Thread 4 with width 2 completes 0 tasks.
Task type: 5: Thread 4 with width 4 completes 0 tasks.
The total execution time of thread 4 is 205.304 s.
Thread 2 sleeps for 6132 ms. 
Task type: 0: Thread 2 with width 1 completes 1172 tasks.
Task type: 0: Thread 2 with width 2 completes 294 tasks.
Task type: 0: Thread 2 with width 4 completes 806 tasks.
Task type: 1: Thread 2 with width 1 completes 0 tasks.
Task type: 1: Thread 2 with width 2 completes 0 tasks.
Task type: 1: Thread 2 with width 4 completes 0 tasks.
Task type: 2: Thread 2 with width 1 completes 0 tasks.
Task type: 2: Thread 2 with width 2 completes 0 tasks.
Task type: 2: Thread 2 with width 4 completes 0 tasks.
Task type: 3: Thread 2 with width 1 completes 0 tasks.
Task type: 3: Thread 2 with width 2 completes 0 tasks.
Task type: 3: Thread 2 with width 4 completes 0 tasks.
Task type: 4: Thread 2 with width 1 completes 0 tasks.
Task type: 4: Thread 2 with width 2 completes 0 tasks.
Task type: 4: Thread 2 with width 4 completes 0 tasks.
Task type: 5: Thread 2 with width 1 completes 0 tasks.
Task type: 5: Thread 2 with width 2 completes 0 tasks.
Task type: 5: Thread 2 with width 4 completes 0 tasks.
The total execution time of thread 2 is 205.532 s.
Thread 1 sleeps for 17324 ms. 
Task type: 0: Thread 1 with width 1 completes 6793 tasks.
Task type: 0: Thread 1 with width 2 completes 23 tasks.
Task type: 0: Thread 1 with width 4 completes 0 tasks.
Task type: 1: Thread 1 with width 1 completes 0 tasks.
Task type: 1: Thread 1 with width 2 completes 0 tasks.
Task type: 1: Thread 1 with width 4 completes 0 tasks.
Task type: 2: Thread 1 with width 1 completes 0 tasks.
Task type: 2: Thread 1 with width 2 completes 0 tasks.
Task type: 2: Thread 1 with width 4 completes 0 tasks.
Task type: 3: Thread 1 with width 1 completes 0 tasks.
Task type: 3: Thread 1 with width 2 completes 0 tasks.
Task type: 3: Thread 1 with width 4 completes 0 tasks.
Task type: 4: Thread 1 with width 1 completes 0 tasks.
Task type: 4: Thread 1 with width 2 completes 0 tasks.
Task type: 4: Thread 1 with width 4 completes 0 tasks.
Task type: 5: Thread 1 with width 1 completes 0 tasks.
Task type: 5: Thread 1 with width 2 completes 0 tasks.
Task type: 5: Thread 1 with width 4 completes 0 tasks.
The total execution time of thread 1 is 194.253 s.
Thread 3 sleeps for 6727 ms. 
Task type: 0: Thread 3 with width 1 completes 1215 tasks.
Task type: 0: Thread 3 with width 2 completes 294 tasks.
Task type: 0: Thread 3 with width 4 completes 806 tasks.
Task type: 1: Thread 3 with width 1 completes 0 tasks.
Task type: 1: Thread 3 with width 2 completes 0 tasks.
Task type: 1: Thread 3 with width 4 completes 0 tasks.
Task type: 2: Thread 3 with width 1 completes 0 tasks.
Task type: 2: Thread 3 with width 2 completes 0 tasks.
Task type: 2: Thread 3 with width 4 completes 0 tasks.
Task type: 3: Thread 3 with width 1 completes 0 tasks.
Task type: 3: Thread 3 with width 2 completes 0 tasks.
Task type: 3: Thread 3 with width 4 completes 0 tasks.
Task type: 4: Thread 3 with width 1 completes 0 tasks.
Task type: 4: Thread 3 with width 2 completes 0 tasks.
Task type: 4: Thread 3 with width 4 completes 0 tasks.
Task type: 5: Thread 3 with width 1 completes 0 tasks.
Task type: 5: Thread 3 with width 2 completes 0 tasks.
Task type: 5: Thread 3 with width 4 completes 0 tasks.
The total execution time of thread 3 is 204.896 s.
Thread 5 sleeps for 6742 ms. 
Task type: 0: Thread 5 with width 1 completes 1281 tasks.
Task type: 0: Thread 5 with width 2 completes 280 tasks.
Task type: 0: Thread 5 with width 4 completes 806 tasks.
Task type: 1: Thread 5 with width 1 completes 0 tasks.
Task type: 1: Thread 5 with width 2 completes 0 tasks.
Task type: 1: Thread 5 with width 4 completes 0 tasks.
Task type: 2: Thread 5 with width 1 completes 0 tasks.
Task type: 2: Thread 5 with width 2 completes 0 tasks.
Task type: 2: Thread 5 with width 4 completes 0 tasks.
Task type: 3: Thread 5 with width 1 completes 0 tasks.
Task type: 3: Thread 5 with width 2 completes 0 tasks.
Task type: 3: Thread 5 with width 4 completes 0 tasks.
Task type: 4: Thread 5 with width 1 completes 0 tasks.
Task type: 4: Thread 5 with width 2 completes 0 tasks.
Task type: 4: Thread 5 with width 4 completes 0 tasks.
Task type: 5: Thread 5 with width 1 completes 0 tasks.
Task type: 5: Thread 5 with width 2 completes 0 tasks.
Task type: 5: Thread 5 with width 4 completes 0 tasks.
The total execution time of thread 5 is 204.912 s.
Thread 0 sleeps for 17540 ms. 
Task type: 0: Thread 0 with width 1 completes 6843 tasks.
Task type: 0: Thread 0 with width 2 completes 23 tasks.
Task type: 0: Thread 0 with width 4 completes 0 tasks.
Task type: 1: Thread 0 with width 1 completes 0 tasks.
Task type: 1: Thread 0 with width 2 completes 0 tasks.
Task type: 1: Thread 0 with width 4 completes 0 tasks.
Task type: 2: Thread 0 with width 1 completes 0 tasks.
Task type: 2: Thread 0 with width 2 completes 0 tasks.
Task type: 2: Thread 0 with width 4 completes 0 tasks.
Task type: 3: Thread 0 with width 1 completes 0 tasks.
Task type: 3: Thread 0 with width 2 completes 0 tasks.
Task type: 3: Thread 0 with width 4 completes 0 tasks.
Task type: 4: Thread 0 with width 1 completes 0 tasks.
Task type: 4: Thread 0 with width 2 completes 0 tasks.
Task type: 4: Thread 0 with width 4 completes 0 tasks.
Task type: 5: Thread 0 with width 1 completes 0 tasks.
Task type: 5: Thread 0 with width 2 completes 0 tasks.
Task type: 5: Thread 0 with width 4 completes 0 tasks.
The total execution time of thread 0 is 194.058 s.
20000,16,1686227356596	1686227568558,211.962,94.3565
Total number of steals across clusters: 902


