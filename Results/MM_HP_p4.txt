---------------------- Test Application - Synthetic Benchmarks ---------------------
---------------------- You choose Paper4 scheduler ---------------------
[Warning] Memory-boundness Calculation (ClusterB) is smaller than 0!
[Warning] Memory-boundness Calculation (ClusterB) is smaller than 0!
MM: Training Phase finished. Predicted execution time and power results for the kernel tasks: 

---------- Execution Time Predictions ---------- 
Memory Frequency: 1866000000: 
Cluster 0: 
CPU_Freq[2035200]: 0.0666765	0.0326078	
CPU_Freq[1881600]: 0.0729162	0.034329	
CPU_Freq[1728000]: 0.0785999	0.0375877	
CPU_Freq[1574400]: 0.0854296	0.0414823	
CPU_Freq[1420800]: 0.0937905	0.0462189	
CPU_Freq[1267200]: 0.104261	0.0521038	
CPU_Freq[1113600]: 0.117923	0.0592796	
CPU_Freq[960000]: 0.135795	0.0695231	
CPU_Freq[806400]: 0.161138	0.0832098	
CPU_Freq[652800]: 0.199313	0.103337	
CPU_Freq[499200]: 0.263256	0.135851	
CPU_Freq[345600]: 0.391713	0.197265	
Cluster 1: 
CPU_Freq[2035200]: 0.178135	0.0894326	0.0451224	
CPU_Freq[1881600]: 0.195927	0.0978713	0.0490174	
CPU_Freq[1728000]: 0.212381	0.10591	0.0531767	
CPU_Freq[1574400]: 0.232117	0.11556	0.0581819	
CPU_Freq[1420800]: 0.256225	0.12736	0.06432	
CPU_Freq[1267200]: 0.286338	0.142118	0.0720234	
CPU_Freq[1113600]: 0.32616	0.162628	0.0835944	
CPU_Freq[960000]: 0.376512	0.186428	0.0953276	
CPU_Freq[806400]: 0.448455	0.221903	0.114165	
CPU_Freq[652800]: 0.555998	0.275127	0.142708	
CPU_Freq[499200]: 0.734112	0.363753	0.190934	
CPU_Freq[345600]: 1.08534	0.540092	0.289164	
Memory Frequency: 1600000000: 
Cluster 0: 
CPU_Freq[2035200]: 0.0686508	0.0317393	
CPU_Freq[1881600]: 0.0734139	0.0344886	
CPU_Freq[1728000]: 0.0790498	0.0377266	
CPU_Freq[1574400]: 0.0858225	0.0415965	
CPU_Freq[1420800]: 0.094114	0.0463031	
CPU_Freq[1267200]: 0.104499	0.0521507	
CPU_Freq[1113600]: 0.117882	0.0596114	
CPU_Freq[960000]: 0.135777	0.0694596	
CPU_Freq[806400]: 0.16092	0.0830594	
CPU_Freq[652800]: 0.1988	0.103059	
CPU_Freq[499200]: 0.262267	0.135366	
CPU_Freq[345600]: 0.389824	0.196391	
Cluster 1: 
CPU_Freq[2035200]: 0.18271	0.0914265	0.0459241	
CPU_Freq[1881600]: 0.196577	0.0981758	0.0494026	
CPU_Freq[1728000]: 0.212961	0.106155	0.0535238	
CPU_Freq[1574400]: 0.232612	0.115735	0.0584836	
CPU_Freq[1420800]: 0.256617	0.127449	0.0645664	
CPU_Freq[1267200]: 0.286602	0.1421	0.0722011	
CPU_Freq[1113600]: 0.325116	0.160949	0.0820664	
CPU_Freq[960000]: 0.376398	0.186096	0.0953021	
CPU_Freq[806400]: 0.448044	0.221323	0.113979	
CPU_Freq[652800]: 0.555151	0.274182	0.142288	
CPU_Freq[499200]: 0.732559	0.362219	0.190135	
CPU_Freq[345600]: 1.08246	0.537446	0.287648	
Memory Frequency: 1331200000: 
Cluster 0: 
CPU_Freq[2035200]: 0.0697713	0.0319901	
CPU_Freq[1881600]: 0.0744769	0.0347145	
CPU_Freq[1728000]: 0.0800453	0.0379233	
CPU_Freq[1574400]: 0.0867372	0.0417582	
CPU_Freq[1420800]: 0.0949304	0.0464223	
CPU_Freq[1267200]: 0.105193	0.052217	
CPU_Freq[1113600]: 0.11842	0.0596103	
CPU_Freq[960000]: 0.13611	0.0693695	
CPU_Freq[806400]: 0.160969	0.0828464	
CPU_Freq[652800]: 0.198431	0.102665	
CPU_Freq[499200]: 0.261223	0.134681	
CPU_Freq[345600]: 0.387506	0.195154	
Cluster 1: 
CPU_Freq[2035200]: 0.183892	0.0921305	0.0466188	
CPU_Freq[1881600]: 0.197675	0.0988088	0.0500516	
CPU_Freq[1728000]: 0.213958	0.106705	0.0541189	
CPU_Freq[1574400]: 0.233489	0.116185	0.0590144	
CPU_Freq[1420800]: 0.257349	0.127777	0.0650189	
CPU_Freq[1267200]: 0.287153	0.142277	0.0725563	
CPU_Freq[1113600]: 0.325437	0.160933	0.0822975	
CPU_Freq[960000]: 0.376414	0.185826	0.0953694	
CPU_Freq[806400]: 0.447639	0.220702	0.113821	
CPU_Freq[652800]: 0.554128	0.273045	0.141797	
CPU_Freq[499200]: 0.730537	0.360249	0.189106	
CPU_Freq[345600]: 1.07855	0.533901	0.285604	
Memory Frequency: 1062400000: 
Cluster 0: 
CPU_Freq[2035200]: 0.072251	0.0323679	
CPU_Freq[1881600]: 0.0768701	0.0350549	
CPU_Freq[1728000]: 0.0823366	0.0382196	
CPU_Freq[1574400]: 0.0889068	0.0420018	
CPU_Freq[1420800]: 0.096952	0.0466018	
CPU_Freq[1267200]: 0.107031	0.052317	
CPU_Freq[1113600]: 0.120023	0.0596087	
CPU_Freq[960000]: 0.137404	0.0692338	
CPU_Freq[806400]: 0.161834	0.0825256	
CPU_Freq[652800]: 0.198667	0.102072	
CPU_Freq[499200]: 0.260444	0.133648	
CPU_Freq[345600]: 0.384807	0.19329	
Cluster 1: 
CPU_Freq[2035200]: 0.186063	0.0936368	0.0478939	
CPU_Freq[1881600]: 0.199718	0.100208	0.0512579	
CPU_Freq[1728000]: 0.21585	0.107978	0.0552441	
CPU_Freq[1574400]: 0.235201	0.117308	0.0600426	
CPU_Freq[1420800]: 0.258842	0.128718	0.0659292	
CPU_Freq[1267200]: 0.288373	0.14299	0.0733201	
CPU_Freq[1113600]: 0.326309	0.161356	0.0828744	
CPU_Freq[960000]: 0.376828	0.185866	0.0956995	
CPU_Freq[806400]: 0.44742	0.220214	0.11381	
CPU_Freq[652800]: 0.552977	0.271779	0.141285	
CPU_Freq[499200]: 0.727881	0.357727	0.187785	
CPU_Freq[345600]: 1.07305	0.529007	0.282754	
Memory Frequency: 800000000: 
Cluster 0: 
CPU_Freq[2035200]: 0.0783084	0.0329815	
CPU_Freq[1881600]: 0.0827871	0.0356077	
CPU_Freq[1728000]: 0.0880882	0.0387009	
CPU_Freq[1574400]: 0.0944607	0.0423975	
CPU_Freq[1420800]: 0.102265	0.0468934	
CPU_Freq[1267200]: 0.112045	0.0524793	
CPU_Freq[1113600]: 0.124657	0.059606	
CPU_Freq[960000]: 0.141534	0.0690134	
CPU_Freq[806400]: 0.16527	0.0820045	
CPU_Freq[652800]: 0.201081	0.101109	
CPU_Freq[499200]: 0.261208	0.13197	
CPU_Freq[345600]: 0.382454	0.190264	
Cluster 1: 
CPU_Freq[2035200]: 0.19059	0.0972266	0.0505515	
CPU_Freq[1881600]: 0.204036	0.103624	0.0538035	
CPU_Freq[1728000]: 0.219924	0.11119	0.057658	
CPU_Freq[1574400]: 0.238982	0.120275	0.062299	
CPU_Freq[1420800]: 0.262267	0.131388	0.067994	
CPU_Freq[1267200]: 0.291356	0.145291	0.075147	
CPU_Freq[1113600]: 0.328727	0.163186	0.0843977	
CPU_Freq[960000]: 0.378501	0.187074	0.0968221	
CPU_Freq[806400]: 0.448064	0.220563	0.114379	
CPU_Freq[652800]: 0.552107	0.270865	0.14104	
CPU_Freq[499200]: 0.724567	0.354773	0.186225	
CPU_Freq[345600]: 1.06512	0.5222	0.278711	

---------- CPU Power Predictions ---------- 
Memory Frequency: 1866000000: 
Cluster 0: 
CPU_Freq[2035200]: 1.97242	3.14832	
CPU_Freq[1881600]: 1.71594	2.71576	
CPU_Freq[1728000]: 1.48345	2.32373	
CPU_Freq[1574400]: 1.27497	1.97224	
CPU_Freq[1420800]: 1.09049	1.66128	
CPU_Freq[1267200]: 0.930008	1.39086	
CPU_Freq[1113600]: 0.793533	1.16096	
CPU_Freq[960000]: 0.681059	0.971607	
CPU_Freq[806400]: 0.592589	0.822784	
CPU_Freq[652800]: 0.52812	0.714495	
CPU_Freq[499200]: 0.487654	0.64674	
CPU_Freq[345600]: 0.471191	0.619518	
Cluster 1: 
CPU_Freq[2035200]: 1.24344	1.8784	2.6269	
CPU_Freq[1881600]: 1.09176	1.65446	2.29185	
CPU_Freq[1728000]: 0.953273	1.44823	1.98468	
CPU_Freq[1574400]: 0.827964	1.25972	1.70539	
CPU_Freq[1420800]: 0.715838	1.08892	1.45397	
CPU_Freq[1267200]: 0.616894	0.93583	1.23042	
CPU_Freq[1113600]: 0.531132	0.800457	1.03475	
CPU_Freq[960000]: 0.458552	0.682798	0.866944	
CPU_Freq[806400]: 0.399154	0.582852	0.727017	
CPU_Freq[652800]: 0.352938	0.500621	0.614964	
CPU_Freq[499200]: 0.319904	0.436102	0.530784	
CPU_Freq[345600]: 0.300052	0.389298	0.474478	
Memory Frequency: 1600000000: 
Cluster 0: 
CPU_Freq[2035200]: 1.97242	3.14832	
CPU_Freq[1881600]: 1.71594	2.71576	
CPU_Freq[1728000]: 1.48345	2.32373	
CPU_Freq[1574400]: 1.27497	1.97224	
CPU_Freq[1420800]: 1.09049	1.66128	
CPU_Freq[1267200]: 0.930008	1.39086	
CPU_Freq[1113600]: 0.793533	1.16096	
CPU_Freq[960000]: 0.681059	0.971607	
CPU_Freq[806400]: 0.592589	0.822784	
CPU_Freq[652800]: 0.52812	0.714495	
CPU_Freq[499200]: 0.487654	0.64674	
CPU_Freq[345600]: 0.471191	0.619518	
Cluster 1: 
CPU_Freq[2035200]: 1.24344	1.8784	2.6269	
CPU_Freq[1881600]: 1.09176	1.65446	2.29185	
CPU_Freq[1728000]: 0.953273	1.44823	1.98468	
CPU_Freq[1574400]: 0.827964	1.25972	1.70539	
CPU_Freq[1420800]: 0.715838	1.08892	1.45397	
CPU_Freq[1267200]: 0.616894	0.93583	1.23042	
CPU_Freq[1113600]: 0.531132	0.800457	1.03475	
CPU_Freq[960000]: 0.458552	0.682798	0.866944	
CPU_Freq[806400]: 0.399154	0.582852	0.727017	
CPU_Freq[652800]: 0.352938	0.500621	0.614964	
CPU_Freq[499200]: 0.319904	0.436102	0.530784	
CPU_Freq[345600]: 0.300052	0.389298	0.474478	
Memory Frequency: 1331200000: 
Cluster 0: 
CPU_Freq[2035200]: 1.97242	3.14832	
CPU_Freq[1881600]: 1.71594	2.71576	
CPU_Freq[1728000]: 1.48345	2.32373	
CPU_Freq[1574400]: 1.27497	1.97224	
CPU_Freq[1420800]: 1.09049	1.66128	
CPU_Freq[1267200]: 0.930008	1.39086	
CPU_Freq[1113600]: 0.793533	1.16096	
CPU_Freq[960000]: 0.681059	0.971607	
CPU_Freq[806400]: 0.592589	0.822784	
CPU_Freq[652800]: 0.52812	0.714495	
CPU_Freq[499200]: 0.487654	0.64674	
CPU_Freq[345600]: 0.471191	0.619518	
Cluster 1: 
CPU_Freq[2035200]: 1.24344	1.8784	2.6269	
CPU_Freq[1881600]: 1.09176	1.65446	2.29185	
CPU_Freq[1728000]: 0.953273	1.44823	1.98468	
CPU_Freq[1574400]: 0.827964	1.25972	1.70539	
CPU_Freq[1420800]: 0.715838	1.08892	1.45397	
CPU_Freq[1267200]: 0.616894	0.93583	1.23042	
CPU_Freq[1113600]: 0.531132	0.800457	1.03475	
CPU_Freq[960000]: 0.458552	0.682798	0.866944	
CPU_Freq[806400]: 0.399154	0.582852	0.727017	
CPU_Freq[652800]: 0.352938	0.500621	0.614964	
CPU_Freq[499200]: 0.319904	0.436102	0.530784	
CPU_Freq[345600]: 0.300052	0.389298	0.474478	
Memory Frequency: 1062400000: 
Cluster 0: 
CPU_Freq[2035200]: 1.97242	3.14832	
CPU_Freq[1881600]: 1.71594	2.71576	
CPU_Freq[1728000]: 1.48345	2.32373	
CPU_Freq[1574400]: 1.27497	1.97224	
CPU_Freq[1420800]: 1.09049	1.66128	
CPU_Freq[1267200]: 0.930008	1.39086	
CPU_Freq[1113600]: 0.793533	1.16096	
CPU_Freq[960000]: 0.681059	0.971607	
CPU_Freq[806400]: 0.592589	0.822784	
CPU_Freq[652800]: 0.52812	0.714495	
CPU_Freq[499200]: 0.487654	0.64674	
CPU_Freq[345600]: 0.471191	0.619518	
Cluster 1: 
CPU_Freq[2035200]: 1.24344	1.8784	2.6269	
CPU_Freq[1881600]: 1.09176	1.65446	2.29185	
CPU_Freq[1728000]: 0.953273	1.44823	1.98468	
CPU_Freq[1574400]: 0.827964	1.25972	1.70539	
CPU_Freq[1420800]: 0.715838	1.08892	1.45397	
CPU_Freq[1267200]: 0.616894	0.93583	1.23042	
CPU_Freq[1113600]: 0.531132	0.800457	1.03475	
CPU_Freq[960000]: 0.458552	0.682798	0.866944	
CPU_Freq[806400]: 0.399154	0.582852	0.727017	
CPU_Freq[652800]: 0.352938	0.500621	0.614964	
CPU_Freq[499200]: 0.319904	0.436102	0.530784	
CPU_Freq[345600]: 0.300052	0.389298	0.474478	
Memory Frequency: 800000000: 
Cluster 0: 
CPU_Freq[2035200]: 1.97242	3.14832	
CPU_Freq[1881600]: 1.71594	2.71576	
CPU_Freq[1728000]: 1.48345	2.32373	
CPU_Freq[1574400]: 1.27497	1.97224	
CPU_Freq[1420800]: 1.09049	1.66128	
CPU_Freq[1267200]: 0.930008	1.39086	
CPU_Freq[1113600]: 0.793533	1.16096	
CPU_Freq[960000]: 0.681059	0.971607	
CPU_Freq[806400]: 0.592589	0.822784	
CPU_Freq[652800]: 0.52812	0.714495	
CPU_Freq[499200]: 0.487654	0.64674	
CPU_Freq[345600]: 0.471191	0.619518	
Cluster 1: 
CPU_Freq[2035200]: 1.24344	1.8784	2.6269	
CPU_Freq[1881600]: 1.09176	1.65446	2.29185	
CPU_Freq[1728000]: 0.953273	1.44823	1.98468	
CPU_Freq[1574400]: 0.827964	1.25972	1.70539	
CPU_Freq[1420800]: 0.715838	1.08892	1.45397	
CPU_Freq[1267200]: 0.616894	0.93583	1.23042	
CPU_Freq[1113600]: 0.531132	0.800457	1.03475	
CPU_Freq[960000]: 0.458552	0.682798	0.866944	
CPU_Freq[806400]: 0.399154	0.582852	0.727017	
CPU_Freq[652800]: 0.352938	0.500621	0.614964	
CPU_Freq[499200]: 0.319904	0.436102	0.530784	
CPU_Freq[345600]: 0.300052	0.389298	0.474478	

---------- Memory Power Predictions ---------- 
Memory Frequency: 1866000000: 
Cluster 0: 
CPU_Freq[2035200]: 1.44938	1.41224	
CPU_Freq[1881600]: 1.43835	1.40812	
CPU_Freq[1728000]: 1.42447	1.39992	
CPU_Freq[1574400]: 1.40776	1.38764	
CPU_Freq[1420800]: 1.38821	1.37128	
CPU_Freq[1267200]: 1.36581	1.35084	
CPU_Freq[1113600]: 1.34058	1.32633	
CPU_Freq[960000]: 1.3125	1.29773	
CPU_Freq[806400]: 1.28158	1.26506	
CPU_Freq[652800]: 1.24782	1.2283	
CPU_Freq[499200]: 1.21121	1.18747	
CPU_Freq[345600]: 1.17177	1.14255	
Cluster 1: 
CPU_Freq[2035200]: 1.16165	1.1504	1.1712	
CPU_Freq[1881600]: 1.1632	1.15528	1.17476	
CPU_Freq[1728000]: 1.16291	1.15726	1.17643	
CPU_Freq[1574400]: 1.16078	1.15633	1.17621	
CPU_Freq[1420800]: 1.15681	1.15249	1.17411	
CPU_Freq[1267200]: 1.151	1.14576	1.17011	
CPU_Freq[1113600]: 1.14336	1.13611	1.16423	
CPU_Freq[960000]: 1.13387	1.12356	1.15646	
CPU_Freq[806400]: 1.12255	1.10811	1.1468	
CPU_Freq[652800]: 1.10939	1.08976	1.13525	
CPU_Freq[499200]: 1.09439	1.0685	1.12181	
CPU_Freq[345600]: 1.07755	1.04433	1.10649	
Memory Frequency: 1600000000: 
Cluster 0: 
CPU_Freq[2035200]: 1.07002	1.037	
CPU_Freq[1881600]: 1.05887	1.03374	
CPU_Freq[1728000]: 1.04487	1.02641	
CPU_Freq[1574400]: 1.02804	1.01499	
CPU_Freq[1420800]: 1.00836	0.9995	
CPU_Freq[1267200]: 0.985846	0.979927	
CPU_Freq[1113600]: 0.960487	0.956274	
CPU_Freq[960000]: 0.932287	0.928542	
CPU_Freq[806400]: 0.901245	0.89673	
CPU_Freq[652800]: 0.867362	0.860839	
CPU_Freq[499200]: 0.830637	0.820869	
CPU_Freq[345600]: 0.791071	0.776818	
Cluster 1: 
CPU_Freq[2035200]: 0.737039	0.744675	0.760172	
CPU_Freq[1881600]: 0.738587	0.749559	0.763727	
CPU_Freq[1728000]: 0.738295	0.751538	0.765392	
CPU_Freq[1574400]: 0.736166	0.750614	0.76517	
CPU_Freq[1420800]: 0.732197	0.746784	0.763059	
CPU_Freq[1267200]: 0.72639	0.74005	0.759059	
CPU_Freq[1113600]: 0.718744	0.730412	0.753172	
CPU_Freq[960000]: 0.709259	0.717869	0.745395	
CPU_Freq[806400]: 0.697936	0.702421	0.735731	
CPU_Freq[652800]: 0.684773	0.684069	0.724178	
CPU_Freq[499200]: 0.669772	0.662813	0.710737	
CPU_Freq[345600]: 0.652933	0.638651	0.695407	
Memory Frequency: 1331200000: 
Cluster 0: 
CPU_Freq[2035200]: 0.801774	0.763285	
CPU_Freq[1881600]: 0.790498	0.760903	
CPU_Freq[1728000]: 0.776382	0.754441	
CPU_Freq[1574400]: 0.759423	0.743899	
CPU_Freq[1420800]: 0.739624	0.729278	
CPU_Freq[1267200]: 0.716983	0.710578	
CPU_Freq[1113600]: 0.6915	0.687798	
CPU_Freq[960000]: 0.663177	0.660938	
CPU_Freq[806400]: 0.632011	0.629999	
CPU_Freq[652800]: 0.598005	0.594981	
CPU_Freq[499200]: 0.561157	0.555883	
CPU_Freq[345600]: 0.521467	0.512706	
Cluster 1: 
CPU_Freq[2035200]: 0.442528	0.459169	0.472054	
CPU_Freq[1881600]: 0.444075	0.464058	0.475604	
CPU_Freq[1728000]: 0.443784	0.466042	0.477265	
CPU_Freq[1574400]: 0.441655	0.465121	0.477038	
CPU_Freq[1420800]: 0.437686	0.461296	0.474922	
CPU_Freq[1267200]: 0.431879	0.454567	0.470918	
CPU_Freq[1113600]: 0.424233	0.444933	0.465026	
CPU_Freq[960000]: 0.414748	0.432394	0.457245	
CPU_Freq[806400]: 0.403425	0.416951	0.447576	
CPU_Freq[652800]: 0.390262	0.398604	0.436018	
CPU_Freq[499200]: 0.375261	0.377352	0.422573	
CPU_Freq[345600]: 0.358421	0.353195	0.407238	
Memory Frequency: 1062400000: 
Cluster 0: 
CPU_Freq[2035200]: 0.649233	0.595597	
CPU_Freq[1881600]: 0.637834	0.594088	
CPU_Freq[1728000]: 0.623593	0.588498	
CPU_Freq[1574400]: 0.606512	0.57883	
CPU_Freq[1420800]: 0.586589	0.565081	
CPU_Freq[1267200]: 0.563824	0.547254	
CPU_Freq[1113600]: 0.538218	0.525346	
CPU_Freq[960000]: 0.509771	0.49936	
CPU_Freq[806400]: 0.478483	0.469294	
CPU_Freq[652800]: 0.444353	0.435148	
CPU_Freq[499200]: 0.407381	0.396923	
CPU_Freq[345600]: 0.367568	0.354619	
Cluster 1: 
CPU_Freq[2035200]: 0.283293	0.298807	0.311841	
CPU_Freq[1881600]: 0.28484	0.303701	0.315386	
CPU_Freq[1728000]: 0.284549	0.305689	0.317042	
CPU_Freq[1574400]: 0.28242	0.304773	0.316811	
CPU_Freq[1420800]: 0.278451	0.300952	0.31469	
CPU_Freq[1267200]: 0.272644	0.294227	0.310682	
CPU_Freq[1113600]: 0.264998	0.284598	0.304785	
CPU_Freq[960000]: 0.255513	0.272064	0.297	
CPU_Freq[806400]: 0.24419	0.256625	0.287326	
CPU_Freq[652800]: 0.231027	0.238282	0.275764	
CPU_Freq[499200]: 0.216026	0.217034	0.262313	
CPU_Freq[345600]: 0.199186	0.192882	0.246975	
Memory Frequency: 800000000: 
Cluster 0: 
CPU_Freq[2035200]: 0.611929	0.534171	
CPU_Freq[1881600]: 0.600409	0.533513	
CPU_Freq[1728000]: 0.586049	0.528776	
CPU_Freq[1574400]: 0.568846	0.519959	
CPU_Freq[1420800]: 0.548803	0.507063	
CPU_Freq[1267200]: 0.525918	0.490087	
CPU_Freq[1113600]: 0.500192	0.469032	
CPU_Freq[960000]: 0.471624	0.443897	
CPU_Freq[806400]: 0.440215	0.414683	
CPU_Freq[652800]: 0.405964	0.38139	
CPU_Freq[499200]: 0.368872	0.344017	
CPU_Freq[345600]: 0.328939	0.302564	
Cluster 1: 
CPU_Freq[2035200]: 0.258332	0.262974	0.278816	
CPU_Freq[1881600]: 0.25988	0.267871	0.282356	
CPU_Freq[1728000]: 0.259589	0.269864	0.284008	
CPU_Freq[1574400]: 0.257459	0.268953	0.283772	
CPU_Freq[1420800]: 0.253491	0.265136	0.281647	
CPU_Freq[1267200]: 0.247684	0.258416	0.277634	
CPU_Freq[1113600]: 0.240038	0.24879	0.271733	
CPU_Freq[960000]: 0.230553	0.236261	0.263943	
CPU_Freq[806400]: 0.219229	0.220827	0.254265	
CPU_Freq[652800]: 0.206067	0.202488	0.242698	
CPU_Freq[499200]: 0.191066	0.181244	0.229243	
CPU_Freq[345600]: 0.174226	0.157096	0.2139	

[Congratulations!] All the training Phase finished. Training finished time: 1687718960662. Set the CPU frequency of all clusters back to the highest frequency
[DEBUG] The best resource width for MM tasks on cluster 1 and 2 are <2> and <1>
[DEBUG] Using <2> cores in cluster 1 and <4> cores in cluster 2 achieves the lowest predicted EDP.
[DEBUG] For MM tasks, 57.73% of tasks should be scheduled to cluster 0
[DEBUG] For MM tasks, 42.2701% of tasks should be scheduled to cluster 1
[DEBUG] The best resource width for MM tasks on cluster 1 and 2 are <2> and <2>
[DEBUG] Using <2> cores in cluster 1 and <4> cores in cluster 2 achieves the lowest predicted EDP.
[DEBUG] For MM tasks, 58.4936% of tasks should be scheduled to cluster 0
[DEBUG] For MM tasks, 41.5064% of tasks should be scheduled to cluster 1
[DEBUG] The best resource width for MM tasks on cluster 1 and 2 are <2> and <2>
[DEBUG] Using <2> cores in cluster 1 and <4> cores in cluster 2 achieves the lowest predicted EDP.
[DEBUG] For MM tasks, 58.3383% of tasks should be scheduled to cluster 0
[DEBUG] For MM tasks, 41.6617% of tasks should be scheduled to cluster 1
[DEBUG] The best resource width for MM tasks on cluster 1 and 2 are <2> and <1>
[DEBUG] Using <2> cores in cluster 1 and <4> cores in cluster 2 achieves the lowest predicted EDP.
[DEBUG] For MM tasks, 58.4654% of tasks should be scheduled to cluster 0
[DEBUG] For MM tasks, 41.5346% of tasks should be scheduled to cluster 1
[DEBUG] The best resource width for MM tasks on cluster 1 and 2 are <2> and <1>
[DEBUG] Using <2> cores in cluster 1 and <4> cores in cluster 2 achieves the lowest predicted EDP.
[DEBUG] For MM tasks, 58.1078% of tasks should be scheduled to cluster 0
[DEBUG] For MM tasks, 41.8922% of tasks should be scheduled to cluster 1
[DEBUG] The best resource width for MM tasks on cluster 1 and 2 are <2> and <1>
[DEBUG] Using <2> cores in cluster 1 and <4> cores in cluster 2 achieves the lowest predicted EDP.
[DEBUG] For MM tasks, 58.3542% of tasks should be scheduled to cluster 0
[DEBUG] For MM tasks, 41.6458% of tasks should be scheduled to cluster 1
[DEBUG] The best resource width for MM tasks on cluster 1 and 2 are <2> and <4>
[DEBUG] Using <2> cores in cluster 1 and <4> cores in cluster 2 achieves the lowest predicted EDP.
[DEBUG] For MM tasks, 58.7058% of tasks should be scheduled to cluster 0
[DEBUG] For MM tasks, 41.2942% of tasks should be scheduled to cluster 1
[DEBUG] The best resource width for MM tasks on cluster 1 and 2 are <2> and <2>
[DEBUG] Using <2> cores in cluster 1 and <4> cores in cluster 2 achieves the lowest predicted EDP.
[DEBUG] For MM tasks, 58.4433% of tasks should be scheduled to cluster 0
[DEBUG] For MM tasks, 41.5567% of tasks should be scheduled to cluster 1
[DEBUG] The best resource width for MM tasks on cluster 1 and 2 are <2> and <2>
[DEBUG] Using <2> cores in cluster 1 and <4> cores in cluster 2 achieves the lowest predicted EDP.
[DEBUG] For MM tasks, 58.2985% of tasks should be scheduled to cluster 0
[DEBUG] For MM tasks, 41.7015% of tasks should be scheduled to cluster 1
[DEBUG] The best resource width for MM tasks on cluster 1 and 2 are <2> and <2>
[DEBUG] Using <2> cores in cluster 1 and <4> cores in cluster 2 achieves the lowest predicted EDP.
[DEBUG] For MM tasks, 58.3816% of tasks should be scheduled to cluster 0
[DEBUG] For MM tasks, 41.6184% of tasks should be scheduled to cluster 1
[DEBUG] The best resource width for MM tasks on cluster 1 and 2 are <2> and <2>
[DEBUG] Using <2> cores in cluster 1 and <4> cores in cluster 2 achieves the lowest predicted EDP.
[DEBUG] For MM tasks, 58.5548% of tasks should be scheduled to cluster 0
[DEBUG] For MM tasks, 41.4452% of tasks should be scheduled to cluster 1
[DEBUG] The best resource width for MM tasks on cluster 1 and 2 are <2> and <2>
[DEBUG] Using <2> cores in cluster 1 and <4> cores in cluster 2 achieves the lowest predicted EDP.
[DEBUG] For MM tasks, 58.4427% of tasks should be scheduled to cluster 0
[DEBUG] For MM tasks, 41.5573% of tasks should be scheduled to cluster 1
[DEBUG] The best resource width for MM tasks on cluster 1 and 2 are <2> and <2>
[DEBUG] Using <2> cores in cluster 1 and <4> cores in cluster 2 achieves the lowest predicted EDP.
[DEBUG] For MM tasks, 58.4099% of tasks should be scheduled to cluster 0
[DEBUG] For MM tasks, 41.5901% of tasks should be scheduled to cluster 1
[DEBUG] The best resource width for MM tasks on cluster 1 and 2 are <2> and <2>
[DEBUG] Using <2> cores in cluster 1 and <4> cores in cluster 2 achieves the lowest predicted EDP.
[DEBUG] For MM tasks, 58.6152% of tasks should be scheduled to cluster 0
[DEBUG] For MM tasks, 41.3848% of tasks should be scheduled to cluster 1
[DEBUG] The best resource width for MM tasks on cluster 1 and 2 are <2> and <2>
[DEBUG] Using <2> cores in cluster 1 and <4> cores in cluster 2 achieves the lowest predicted EDP.
[DEBUG] For MM tasks, 58.3458% of tasks should be scheduled to cluster 0
[DEBUG] For MM tasks, 41.6542% of tasks should be scheduled to cluster 1
[DEBUG] The best resource width for MM tasks on cluster 1 and 2 are <2> and <2>
[DEBUG] Using <2> cores in cluster 1 and <4> cores in cluster 2 achieves the lowest predicted EDP.
[DEBUG] For MM tasks, 58.6061% of tasks should be scheduled to cluster 0
[DEBUG] For MM tasks, 41.3939% of tasks should be scheduled to cluster 1
[DEBUG] The best resource width for MM tasks on cluster 1 and 2 are <2> and <2>
[DEBUG] Using <2> cores in cluster 1 and <4> cores in cluster 2 achieves the lowest predicted EDP.
[DEBUG] For MM tasks, 58.524% of tasks should be scheduled to cluster 0
[DEBUG] For MM tasks, 41.476% of tasks should be scheduled to cluster 1
[DEBUG] The best resource width for MM tasks on cluster 1 and 2 are <2> and <2>
[DEBUG] Using <2> cores in cluster 1 and <4> cores in cluster 2 achieves the lowest predicted EDP.
[DEBUG] For MM tasks, 58.1821% of tasks should be scheduled to cluster 0
[DEBUG] For MM tasks, 41.8179% of tasks should be scheduled to cluster 1
[DEBUG] The best resource width for MM tasks on cluster 1 and 2 are <2> and <2>
[DEBUG] Using <2> cores in cluster 1 and <4> cores in cluster 2 achieves the lowest predicted EDP.
[DEBUG] For MM tasks, 58.5718% of tasks should be scheduled to cluster 0
[DEBUG] For MM tasks, 41.4282% of tasks should be scheduled to cluster 1
[DEBUG] The best resource width for MM tasks on cluster 1 and 2 are <2> and <1>
[DEBUG] Using <2> cores in cluster 1 and <4> cores in cluster 2 achieves the lowest predicted EDP.
[DEBUG] For MM tasks, 58.6272% of tasks should be scheduled to cluster 0
[DEBUG] For MM tasks, 41.3728% of tasks should be scheduled to cluster 1
[DEBUG] The best resource width for MM tasks on cluster 1 and 2 are <2> and <1>
[DEBUG] Using <2> cores in cluster 1 and <4> cores in cluster 2 achieves the lowest predicted EDP.
[DEBUG] For MM tasks, 58.3401% of tasks should be scheduled to cluster 0
[DEBUG] For MM tasks, 41.6599% of tasks should be scheduled to cluster 1
[DEBUG] The best resource width for MM tasks on cluster 1 and 2 are <2> and <1>
[DEBUG] Using <2> cores in cluster 1 and <4> cores in cluster 2 achieves the lowest predicted EDP.
[DEBUG] For MM tasks, 58.3477% of tasks should be scheduled to cluster 0
[DEBUG] For MM tasks, 41.6523% of tasks should be scheduled to cluster 1
[DEBUG] The best resource width for MM tasks on cluster 1 and 2 are <2> and <1>
[DEBUG] Using <2> cores in cluster 1 and <4> cores in cluster 2 achieves the lowest predicted EDP.
[DEBUG] For MM tasks, 58.3368% of tasks should be scheduled to cluster 0
[DEBUG] For MM tasks, 41.6632% of tasks should be scheduled to cluster 1
[DEBUG] The best resource width for MM tasks on cluster 1 and 2 are <2> and <2>
[DEBUG] Using <2> cores in cluster 1 and <4> cores in cluster 2 achieves the lowest predicted EDP.
[DEBUG] For MM tasks, 58.5919% of tasks should be scheduled to cluster 0
[DEBUG] For MM tasks, 41.4081% of tasks should be scheduled to cluster 1
[DEBUG] The best resource width for MM tasks on cluster 1 and 2 are <2> and <2>
[DEBUG] Using <2> cores in cluster 1 and <4> cores in cluster 2 achieves the lowest predicted EDP.
[DEBUG] For MM tasks, 58.3977% of tasks should be scheduled to cluster 0
[DEBUG] For MM tasks, 41.6023% of tasks should be scheduled to cluster 1
[DEBUG] The best resource width for MM tasks on cluster 1 and 2 are <2> and <2>
[DEBUG] Using <2> cores in cluster 1 and <4> cores in cluster 2 achieves the lowest predicted EDP.
[DEBUG] For MM tasks, 58.3607% of tasks should be scheduled to cluster 0
[DEBUG] For MM tasks, 41.6393% of tasks should be scheduled to cluster 1
[DEBUG] The best resource width for MM tasks on cluster 1 and 2 are <2> and <2>
[DEBUG] Using <2> cores in cluster 1 and <4> cores in cluster 2 achieves the lowest predicted EDP.
[DEBUG] For MM tasks, 58.5187% of tasks should be scheduled to cluster 0
[DEBUG] For MM tasks, 41.4813% of tasks should be scheduled to cluster 1
[DEBUG] The best resource width for MM tasks on cluster 1 and 2 are <2> and <2>
[DEBUG] Using <2> cores in cluster 1 and <4> cores in cluster 2 achieves the lowest predicted EDP.
[DEBUG] For MM tasks, 58.5917% of tasks should be scheduled to cluster 0
[DEBUG] For MM tasks, 41.4083% of tasks should be scheduled to cluster 1
[DEBUG] The best resource width for MM tasks on cluster 1 and 2 are <2> and <2>
[DEBUG] Using <2> cores in cluster 1 and <4> cores in cluster 2 achieves the lowest predicted EDP.
[DEBUG] For MM tasks, 58.3039% of tasks should be scheduled to cluster 0
[DEBUG] For MM tasks, 41.6961% of tasks should be scheduled to cluster 1
[DEBUG] The best resource width for MM tasks on cluster 1 and 2 are <2> and <1>
[DEBUG] Using <2> cores in cluster 1 and <4> cores in cluster 2 achieves the lowest predicted EDP.
[DEBUG] For MM tasks, 58.6055% of tasks should be scheduled to cluster 0
[DEBUG] For MM tasks, 41.3945% of tasks should be scheduled to cluster 1
[DEBUG] The best resource width for MM tasks on cluster 1 and 2 are <2> and <2>
[DEBUG] Using <2> cores in cluster 1 and <4> cores in cluster 2 achieves the lowest predicted EDP.
[DEBUG] For MM tasks, 58.558% of tasks should be scheduled to cluster 0
[DEBUG] For MM tasks, 41.442% of tasks should be scheduled to cluster 1
[DEBUG] The best resource width for MM tasks on cluster 1 and 2 are <2> and <2>
[DEBUG] Using <2> cores in cluster 1 and <4> cores in cluster 2 achieves the lowest predicted EDP.
[DEBUG] For MM tasks, 58.43% of tasks should be scheduled to cluster 0
[DEBUG] For MM tasks, 41.57% of tasks should be scheduled to cluster 1
[DEBUG] The best resource width for MM tasks on cluster 1 and 2 are <2> and <2>
[DEBUG] Using <2> cores in cluster 1 and <4> cores in cluster 2 achieves the lowest predicted EDP.
[DEBUG] For MM tasks, 58.3553% of tasks should be scheduled to cluster 0
[DEBUG] For MM tasks, 41.6447% of tasks should be scheduled to cluster 1
[DEBUG] The best resource width for MM tasks on cluster 1 and 2 are <2> and <1>
[DEBUG] Using <2> cores in cluster 1 and <4> cores in cluster 2 achieves the lowest predicted EDP.
[DEBUG] For MM tasks, 58.6035% of tasks should be scheduled to cluster 0
[DEBUG] For MM tasks, 41.3965% of tasks should be scheduled to cluster 1
[DEBUG] The best resource width for MM tasks on cluster 1 and 2 are <2> and <1>
[DEBUG] Using <2> cores in cluster 1 and <4> cores in cluster 2 achieves the lowest predicted EDP.
[DEBUG] For MM tasks, 58.3598% of tasks should be scheduled to cluster 0
[DEBUG] For MM tasks, 41.6402% of tasks should be scheduled to cluster 1
[DEBUG] The best resource width for MM tasks on cluster 1 and 2 are <2> and <2>
[DEBUG] Using <2> cores in cluster 1 and <4> cores in cluster 2 achieves the lowest predicted EDP.
[DEBUG] For MM tasks, 58.6177% of tasks should be scheduled to cluster 0
[DEBUG] For MM tasks, 41.3823% of tasks should be scheduled to cluster 1
[DEBUG] The best resource width for MM tasks on cluster 1 and 2 are <2> and <2>
[DEBUG] Using <2> cores in cluster 1 and <4> cores in cluster 2 achieves the lowest predicted EDP.
[DEBUG] For MM tasks, 58.3727% of tasks should be scheduled to cluster 0
[DEBUG] For MM tasks, 41.6273% of tasks should be scheduled to cluster 1
[DEBUG] The best resource width for MM tasks on cluster 1 and 2 are <2> and <2>
[DEBUG] Using <2> cores in cluster 1 and <4> cores in cluster 2 achieves the lowest predicted EDP.
[DEBUG] For MM tasks, 58.3683% of tasks should be scheduled to cluster 0
[DEBUG] For MM tasks, 41.6317% of tasks should be scheduled to cluster 1
[DEBUG] The best resource width for MM tasks on cluster 1 and 2 are <2> and <2>
[DEBUG] Using <2> cores in cluster 1 and <4> cores in cluster 2 achieves the lowest predicted EDP.
[DEBUG] For MM tasks, 58.693% of tasks should be scheduled to cluster 0
[DEBUG] For MM tasks, 41.307% of tasks should be scheduled to cluster 1
[DEBUG] The best resource width for MM tasks on cluster 1 and 2 are <2> and <2>
[DEBUG] Using <2> cores in cluster 1 and <4> cores in cluster 2 achieves the lowest predicted EDP.
[DEBUG] For MM tasks, 58.2441% of tasks should be scheduled to cluster 0
[DEBUG] For MM tasks, 41.7559% of tasks should be scheduled to cluster 1
[DEBUG] The best resource width for MM tasks on cluster 1 and 2 are <2> and <2>
[DEBUG] Using <2> cores in cluster 1 and <4> cores in cluster 2 achieves the lowest predicted EDP.
[DEBUG] For MM tasks, 58.3862% of tasks should be scheduled to cluster 0
[DEBUG] For MM tasks, 41.6138% of tasks should be scheduled to cluster 1
[DEBUG] The best resource width for MM tasks on cluster 1 and 2 are <2> and <2>
[DEBUG] Using <2> cores in cluster 1 and <4> cores in cluster 2 achieves the lowest predicted EDP.
[DEBUG] For MM tasks, 58.6272% of tasks should be scheduled to cluster 0
[DEBUG] For MM tasks, 41.3728% of tasks should be scheduled to cluster 1
[DEBUG] The best resource width for MM tasks on cluster 1 and 2 are <2> and <2>
[DEBUG] Using <2> cores in cluster 1 and <4> cores in cluster 2 achieves the lowest predicted EDP.
[DEBUG] For MM tasks, 58.5216% of tasks should be scheduled to cluster 0
[DEBUG] For MM tasks, 41.4784% of tasks should be scheduled to cluster 1
[DEBUG] The best resource width for MM tasks on cluster 1 and 2 are <2> and <2>
[DEBUG] Using <2> cores in cluster 1 and <4> cores in cluster 2 achieves the lowest predicted EDP.
[DEBUG] For MM tasks, 57.9562% of tasks should be scheduled to cluster 0
[DEBUG] For MM tasks, 42.0438% of tasks should be scheduled to cluster 1
[DEBUG] The best resource width for MM tasks on cluster 1 and 2 are <2> and <2>
[DEBUG] Using <2> cores in cluster 1 and <4> cores in cluster 2 achieves the lowest predicted EDP.
[DEBUG] For MM tasks, 58.6226% of tasks should be scheduled to cluster 0
[DEBUG] For MM tasks, 41.3774% of tasks should be scheduled to cluster 1
[DEBUG] The best resource width for MM tasks on cluster 1 and 2 are <2> and <2>
[DEBUG] Using <2> cores in cluster 1 and <4> cores in cluster 2 achieves the lowest predicted EDP.
[DEBUG] For MM tasks, 58.528% of tasks should be scheduled to cluster 0
[DEBUG] For MM tasks, 41.472% of tasks should be scheduled to cluster 1
[DEBUG] The best resource width for MM tasks on cluster 1 and 2 are <2> and <2>
[DEBUG] Using <2> cores in cluster 1 and <4> cores in cluster 2 achieves the lowest predicted EDP.
[DEBUG] For MM tasks, 58.3131% of tasks should be scheduled to cluster 0
[DEBUG] For MM tasks, 41.6869% of tasks should be scheduled to cluster 1
[DEBUG] The best resource width for MM tasks on cluster 1 and 2 are <2> and <2>
[DEBUG] Using <2> cores in cluster 1 and <4> cores in cluster 2 achieves the lowest predicted EDP.
[DEBUG] For MM tasks, 58.6698% of tasks should be scheduled to cluster 0
[DEBUG] For MM tasks, 41.3302% of tasks should be scheduled to cluster 1
[DEBUG] The best resource width for MM tasks on cluster 1 and 2 are <2> and <2>
[DEBUG] Using <2> cores in cluster 1 and <4> cores in cluster 2 achieves the lowest predicted EDP.
[DEBUG] For MM tasks, 58.6863% of tasks should be scheduled to cluster 0
[DEBUG] For MM tasks, 41.3137% of tasks should be scheduled to cluster 1
[DEBUG] The best resource width for MM tasks on cluster 1 and 2 are <2> and <1>
[DEBUG] Using <2> cores in cluster 1 and <4> cores in cluster 2 achieves the lowest predicted EDP.
[DEBUG] For MM tasks, 58.709% of tasks should be scheduled to cluster 0
[DEBUG] For MM tasks, 41.291% of tasks should be scheduled to cluster 1
[DEBUG] The best resource width for MM tasks on cluster 1 and 2 are <2> and <1>
[DEBUG] Using <2> cores in cluster 1 and <4> cores in cluster 2 achieves the lowest predicted EDP.
[DEBUG] For MM tasks, 58.6977% of tasks should be scheduled to cluster 0
[DEBUG] For MM tasks, 41.3023% of tasks should be scheduled to cluster 1
[DEBUG] The best resource width for MM tasks on cluster 1 and 2 are <2> and <1>
[DEBUG] Using <2> cores in cluster 1 and <4> cores in cluster 2 achieves the lowest predicted EDP.
[DEBUG] For MM tasks, 58.3417% of tasks should be scheduled to cluster 0
[DEBUG] For MM tasks, 41.6582% of tasks should be scheduled to cluster 1
[DEBUG] The best resource width for MM tasks on cluster 1 and 2 are <2> and <1>
[DEBUG] Using <2> cores in cluster 1 and <4> cores in cluster 2 achieves the lowest predicted EDP.
[DEBUG] For MM tasks, 58.5953% of tasks should be scheduled to cluster 0
[DEBUG] For MM tasks, 41.4047% of tasks should be scheduled to cluster 1
[DEBUG] The best resource width for MM tasks on cluster 1 and 2 are <2> and <1>
[DEBUG] Using <2> cores in cluster 1 and <4> cores in cluster 2 achieves the lowest predicted EDP.
[DEBUG] For MM tasks, 58.3522% of tasks should be scheduled to cluster 0
[DEBUG] For MM tasks, 41.6479% of tasks should be scheduled to cluster 1
[DEBUG] The best resource width for MM tasks on cluster 1 and 2 are <2> and <1>
[DEBUG] Using <2> cores in cluster 1 and <4> cores in cluster 2 achieves the lowest predicted EDP.
[DEBUG] For MM tasks, 58.3394% of tasks should be scheduled to cluster 0
[DEBUG] For MM tasks, 41.6606% of tasks should be scheduled to cluster 1
[DEBUG] The best resource width for MM tasks on cluster 1 and 2 are <2> and <1>
[DEBUG] Using <2> cores in cluster 1 and <4> cores in cluster 2 achieves the lowest predicted EDP.
[DEBUG] For MM tasks, 58.3162% of tasks should be scheduled to cluster 0
[DEBUG] For MM tasks, 41.6838% of tasks should be scheduled to cluster 1
[DEBUG] The best resource width for MM tasks on cluster 1 and 2 are <2> and <1>
[DEBUG] Using <2> cores in cluster 1 and <4> cores in cluster 2 achieves the lowest predicted EDP.
[DEBUG] For MM tasks, 58.0037% of tasks should be scheduled to cluster 0
[DEBUG] For MM tasks, 41.9963% of tasks should be scheduled to cluster 1
[DEBUG] The best resource width for MM tasks on cluster 1 and 2 are <2> and <2>
[DEBUG] Using <2> cores in cluster 1 and <4> cores in cluster 2 achieves the lowest predicted EDP.
[DEBUG] For MM tasks, 58.7022% of tasks should be scheduled to cluster 0
[DEBUG] For MM tasks, 41.2978% of tasks should be scheduled to cluster 1
[DEBUG] The best resource width for MM tasks on cluster 1 and 2 are <2> and <1>
[DEBUG] Using <2> cores in cluster 1 and <4> cores in cluster 2 achieves the lowest predicted EDP.
[DEBUG] For MM tasks, 58.6318% of tasks should be scheduled to cluster 0
[DEBUG] For MM tasks, 41.3682% of tasks should be scheduled to cluster 1
[DEBUG] The best resource width for MM tasks on cluster 1 and 2 are <2> and <1>
[DEBUG] Using <2> cores in cluster 1 and <4> cores in cluster 2 achieves the lowest predicted EDP.
[DEBUG] For MM tasks, 58.3505% of tasks should be scheduled to cluster 0
[DEBUG] For MM tasks, 41.6495% of tasks should be scheduled to cluster 1
Thread 2 sleeps for 130424 ms. 
Task type: 0: Thread 2 with width 1 completes 181 tasks.
Task type: 0: Thread 2 with width 2 completes 840 tasks.
Task type: 0: Thread 2 with width 4 completes 54 tasks.
Task type: 1: Thread 2 with width 1 completes 0 tasks.
Task type: 1: Thread 2 with width 2 completes 0 tasks.
Task type: 1: Thread 2 with width 4 completes 0 tasks.
Task type: 2: Thread 2 with width 1 completes 0 tasks.
Task type: 2: Thread 2 with width 2 completes 0 tasks.
Task type: 2: Thread 2 with width 4 completes 0 tasks.
Task type: 3: Thread 2 with width 1 completes 0 tasks.
Task type: 3: Thread 2 with width 2 completes 0 tasks.
Task type: 3: Thread 2 with width 4 completes 0 tasks.
Task type: 4: Thread 2 with width 1 completes 0 tasks.
Task type: 4: Thread 2 with width 2 completes 0 tasks.
Task type: 4: Thread 2 with width 4 completes 0 tasks.
Task type: 5: Thread 2 with width 1 completes 0 tasks.
Task type: 5: Thread 2 with width 2 completes 0 tasks.
Task type: 5: Thread 2 with width 4 completes 0 tasks.
The total execution time of thread 2 is 112.7 s.
Thread 0 sleeps for 4278 ms. 
Task type: 0: Thread 0 with width 1 completes 8 tasks.
Task type: 0: Thread 0 with width 2 completes 7471 tasks.
Task type: 0: Thread 0 with width 4 completes 0 tasks.
Task type: 1: Thread 0 with width 1 completes 0 tasks.
Task type: 1: Thread 0 with width 2 completes 0 tasks.
Task type: 1: Thread 0 with width 4 completes 0 tasks.
Task type: 2: Thread 0 with width 1 completes 0 tasks.
Task type: 2: Thread 0 with width 2 completes 0 tasks.
Task type: 2: Thread 0 with width 4 completes 0 tasks.
Task type: 3: Thread 0 with width 1 completes 0 tasks.
Task type: 3: Thread 0 with width 2 completes 0 tasks.
Task type: 3: Thread 0 with width 4 completes 0 tasks.
Task type: 4: Thread 0 with width 1 completes 0 tasks.
Task type: 4: Thread 0 with width 2 completes 0 tasks.
Task type: 4: Thread 0 with width 4 completes 0 tasks.
Task type: 5: Thread 0 with width 1 completes 0 tasks.
Task type: 5: Thread 0 with width 2 completes 0 tasks.
Task type: 5: Thread 0 with width 4 completes 0 tasks.
The total execution time of thread 0 is 239.038 s.
Thread 1 sleeps for 4668 ms. 
Task type: 0: Thread 1 with width 1 completes 9 tasks.
Task type: 0: Thread 1 with width 2 completes 7471 tasks.
Task type: 0: Thread 1 with width 4 completes 0 tasks.
Task type: 1: Thread 1 with width 1 completes 0 tasks.
Task type: 1: Thread 1 with width 2 completes 0 tasks.
Task type: 1: Thread 1 with width 4 completes 0 tasks.
Task type: 2: Thread 1 with width 1 completes 0 tasks.
Task type: 2: Thread 1 with width 2 completes 0 tasks.
Task type: 2: Thread 1 with width 4 completes 0 tasks.
Task type: 3: Thread 1 with width 1 completes 0 tasks.
Task type: 3: Thread 1 with width 2 completes 0 tasks.
Task type: 3: Thread 1 with width 4 completes 0 tasks.
Task type: 4: Thread 1 with width 1 completes 0 tasks.
Task type: 4: Thread 1 with width 2 completes 0 tasks.
Task type: 4: Thread 1 with width 4 completes 0 tasks.
Task type: 5: Thread 1 with width 1 completes 0 tasks.
Task type: 5: Thread 1 with width 2 completes 0 tasks.
Task type: 5: Thread 1 with width 4 completes 0 tasks.
The total execution time of thread 1 is 238.653 s.
Thread 4 sleeps for 136551 ms. 
Task type: 0: Thread 4 with width 1 completes 201 tasks.
Task type: 0: Thread 4 with width 2 completes 762 tasks.
Task type: 0: Thread 4 with width 4 completes 54 tasks.
Task type: 1: Thread 4 with width 1 completes 0 tasks.
Task type: 1: Thread 4 with width 2 completes 0 tasks.
Task type: 1: Thread 4 with width 4 completes 0 tasks.
Task type: 2: Thread 4 with width 1 completes 0 tasks.
Task type: 2: Thread 4 with width 2 completes 0 tasks.
Task type: 2: Thread 4 with width 4 completes 0 tasks.
Task type: 3: Thread 4 with width 1 completes 0 tasks.
Task type: 3: Thread 4 with width 2 completes 0 tasks.
Task type: 3: Thread 4 with width 4 completes 0 tasks.
Task type: 4: Thread 4 with width 1 completes 0 tasks.
Task type: 4: Thread 4 with width 2 completes 0 tasks.
Task type: 4: Thread 4 with width 4 completes 0 tasks.
Task type: 5: Thread 4 with width 1 completes 0 tasks.
Task type: 5: Thread 4 with width 2 completes 0 tasks.
Task type: 5: Thread 4 with width 4 completes 0 tasks.
The total execution time of thread 4 is 106.488 s.
Thread 5 sleeps for 132564 ms. 
Task type: 0: Thread 5 with width 1 completes 224 tasks.
Task type: 0: Thread 5 with width 2 completes 762 tasks.
Task type: 0: Thread 5 with width 4 completes 54 tasks.
Task type: 1: Thread 5 with width 1 completes 0 tasks.
Task type: 1: Thread 5 with width 2 completes 0 tasks.
Task type: 1: Thread 5 with width 4 completes 0 tasks.
Task type: 2: Thread 5 with width 1 completes 0 tasks.
Task type: 2: Thread 5 with width 2 completes 0 tasks.
Task type: 2: Thread 5 with width 4 completes 0 tasks.
Task type: 3: Thread 5 with width 1 completes 0 tasks.
Task type: 3: Thread 5 with width 2 completes 0 tasks.
Task type: 3: Thread 5 with width 4 completes 0 tasks.
Task type: 4: Thread 5 with width 1 completes 0 tasks.
Task type: 4: Thread 5 with width 2 completes 0 tasks.
Task type: 4: Thread 5 with width 4 completes 0 tasks.
Task type: 5: Thread 5 with width 1 completes 0 tasks.
Task type: 5: Thread 5 with width 2 completes 0 tasks.
Task type: 5: Thread 5 with width 4 completes 0 tasks.
The total execution time of thread 5 is 110.534 s.
Thread 3 sleeps for 121274 ms. 
Task type: 0: Thread 3 with width 1 completes 250 tasks.
Task type: 0: Thread 3 with width 2 completes 840 tasks.
Task type: 0: Thread 3 with width 4 completes 54 tasks.
Task type: 1: Thread 3 with width 1 completes 0 tasks.
Task type: 1: Thread 3 with width 2 completes 0 tasks.
Task type: 1: Thread 3 with width 4 completes 0 tasks.
Task type: 2: Thread 3 with width 1 completes 0 tasks.
Task type: 2: Thread 3 with width 2 completes 0 tasks.
Task type: 2: Thread 3 with width 4 completes 0 tasks.
Task type: 3: Thread 3 with width 1 completes 0 tasks.
Task type: 3: Thread 3 with width 2 completes 0 tasks.
Task type: 3: Thread 3 with width 4 completes 0 tasks.
Task type: 4: Thread 3 with width 1 completes 0 tasks.
Task type: 4: Thread 3 with width 2 completes 0 tasks.
Task type: 4: Thread 3 with width 4 completes 0 tasks.
Task type: 5: Thread 3 with width 1 completes 0 tasks.
Task type: 5: Thread 3 with width 2 completes 0 tasks.
Task type: 5: Thread 3 with width 4 completes 0 tasks.
The total execution time of thread 3 is 121.933 s.
10000,4,1687718957408	1687719201238,243.83,41.0122
Total number of steals across clusters: 0


---------------------- Test Application - Synthetic Benchmarks ---------------------
---------------------- You choose Paper4 scheduler ---------------------
[Warning] Memory-boundness Calculation (ClusterB) is smaller than 0!
MM: Training Phase finished. Predicted execution time and power results for the kernel tasks: 

---------- Execution Time Predictions ---------- 
Memory Frequency: 1866000000: 
Cluster 0: 
CPU_Freq[2035200]: 0.0646832	0.0330326	
CPU_Freq[1881600]: 0.0712838	0.0347627	
CPU_Freq[1728000]: 0.0770056	0.0380298	
CPU_Freq[1574400]: 0.0838798	0.0419345	
CPU_Freq[1420800]: 0.0922931	0.0466834	
CPU_Freq[1267200]: 0.102827	0.0525836	
CPU_Freq[1113600]: 0.118484	0.0598315	
CPU_Freq[960000]: 0.13453	0.070048	
CPU_Freq[806400]: 0.159989	0.0837701	
CPU_Freq[652800]: 0.198307	0.10395	
CPU_Freq[499200]: 0.262414	0.136547	
CPU_Freq[345600]: 0.390951	0.198121	
Cluster 1: 
CPU_Freq[2035200]: 0.181931	0.0905566	0.0453081	
CPU_Freq[1881600]: 0.198733	0.0987935	0.0492192	
CPU_Freq[1728000]: 0.214841	0.106721	0.0533955	
CPU_Freq[1574400]: 0.234165	0.11624	0.0584214	
CPU_Freq[1420800]: 0.257775	0.12788	0.0645847	
CPU_Freq[1267200]: 0.287272	0.142441	0.0723198	
CPU_Freq[1113600]: 0.323869	0.162588	0.0835908	
CPU_Freq[960000]: 0.375647	0.186176	0.0957199	
CPU_Freq[806400]: 0.446199	0.221207	0.114635	
CPU_Freq[652800]: 0.551735	0.273791	0.143296	
CPU_Freq[499200]: 0.726699	0.361418	0.19172	
CPU_Freq[345600]: 1.07229	0.535981	0.290354	
Memory Frequency: 1600000000: 
Cluster 0: 
CPU_Freq[2035200]: 0.0665038	0.0322879	
CPU_Freq[1881600]: 0.0713011	0.0350442	
CPU_Freq[1728000]: 0.0769765	0.0382904	
CPU_Freq[1574400]: 0.0837954	0.0421701	
CPU_Freq[1420800]: 0.0921413	0.0468885	
CPU_Freq[1267200]: 0.102591	0.0527509	
CPU_Freq[1113600]: 0.116054	0.0602305	
CPU_Freq[960000]: 0.134047	0.0701035	
CPU_Freq[806400]: 0.159311	0.0837377	
CPU_Freq[652800]: 0.197343	0.103788	
CPU_Freq[499200]: 0.260989	0.136177	
CPU_Freq[345600]: 0.388653	0.197356	
Cluster 1: 
CPU_Freq[2035200]: 0.186494	0.0926692	0.0461131	
CPU_Freq[1881600]: 0.200066	0.0993234	0.0496059	
CPU_Freq[1728000]: 0.216102	0.107191	0.0537441	
CPU_Freq[1574400]: 0.23534	0.116638	0.0587243	
CPU_Freq[1420800]: 0.258845	0.128192	0.0648321	
CPU_Freq[1267200]: 0.288212	0.142645	0.0724983	
CPU_Freq[1113600]: 0.325943	0.161242	0.0824041	
CPU_Freq[960000]: 0.3762	0.186061	0.0956943	
CPU_Freq[806400]: 0.446449	0.220841	0.114449	
CPU_Freq[652800]: 0.551539	0.273056	0.142874	
CPU_Freq[499200]: 0.725782	0.360087	0.190917	
CPU_Freq[345600]: 1.07002	0.533524	0.288832	
Memory Frequency: 1331200000: 
Cluster 0: 
CPU_Freq[2035200]: 0.0669313	0.0327119	
CPU_Freq[1881600]: 0.0716729	0.0354429	
CPU_Freq[1728000]: 0.0772827	0.0386595	
CPU_Freq[1574400]: 0.0840232	0.0425037	
CPU_Freq[1420800]: 0.0922738	0.0471791	
CPU_Freq[1267200]: 0.102605	0.052988	
CPU_Freq[1113600]: 0.115916	0.0603992	
CPU_Freq[960000]: 0.13371	0.070182	
CPU_Freq[806400]: 0.158699	0.0836917	
CPU_Freq[652800]: 0.196326	0.103559	
CPU_Freq[499200]: 0.259317	0.135652	
CPU_Freq[345600]: 0.385745	0.196272	
Cluster 1: 
CPU_Freq[2035200]: 0.188649	0.0936958	0.0468107	
CPU_Freq[1881600]: 0.202134	0.100278	0.0502576	
CPU_Freq[1728000]: 0.218068	0.108062	0.0543417	
CPU_Freq[1574400]: 0.237184	0.117407	0.0592573	
CPU_Freq[1420800]: 0.26054	0.128838	0.0652865	
CPU_Freq[1267200]: 0.289722	0.143138	0.0728549	
CPU_Freq[1113600]: 0.327218	0.16154	0.0826362	
CPU_Freq[960000]: 0.377164	0.186102	0.0957618	
CPU_Freq[806400]: 0.446984	0.220526	0.114289	
CPU_Freq[652800]: 0.551442	0.272219	0.14238	
CPU_Freq[499200]: 0.724665	0.358405	0.189884	
CPU_Freq[345600]: 1.06697	0.530248	0.286779	
Memory Frequency: 1062400000: 
Cluster 0: 
CPU_Freq[2035200]: 0.0683436	0.0333503	
CPU_Freq[1881600]: 0.0730013	0.0360435	
CPU_Freq[1728000]: 0.0785124	0.0392154	
CPU_Freq[1574400]: 0.0851348	0.0430063	
CPU_Freq[1420800]: 0.0932418	0.0476168	
CPU_Freq[1267200]: 0.103395	0.0533449	
CPU_Freq[1113600]: 0.116478	0.0606533	
CPU_Freq[960000]: 0.133972	0.0703004	
CPU_Freq[806400]: 0.158546	0.0836225	
CPU_Freq[652800]: 0.195563	0.103214	
CPU_Freq[499200]: 0.257568	0.134861	
CPU_Freq[345600]: 0.382134	0.19464	
Cluster 1: 
CPU_Freq[2035200]: 0.192294	0.0956936	0.0480911	
CPU_Freq[1881600]: 0.205649	0.102168	0.0514688	
CPU_Freq[1728000]: 0.221428	0.109824	0.0554714	
CPU_Freq[1574400]: 0.24036	0.119017	0.0602897	
CPU_Freq[1420800]: 0.263493	0.130263	0.0662005	
CPU_Freq[1267200]: 0.292396	0.144332	0.0736219	
CPU_Freq[1113600]: 0.329537	0.162441	0.0832154	
CPU_Freq[960000]: 0.379015	0.186615	0.0960934	
CPU_Freq[806400]: 0.448187	0.220504	0.114278	
CPU_Freq[652800]: 0.551694	0.271409	0.141866	
CPU_Freq[499200]: 0.72338	0.356324	0.188558	
CPU_Freq[345600]: 1.06278	0.525765	0.283917	
Memory Frequency: 800000000: 
Cluster 0: 
CPU_Freq[2035200]: 0.0726066	0.0343874	
CPU_Freq[1881600]: 0.077128	0.037019	
CPU_Freq[1728000]: 0.0824787	0.0401184	
CPU_Freq[1574400]: 0.0889093	0.0438226	
CPU_Freq[1420800]: 0.096783	0.0483276	
CPU_Freq[1267200]: 0.106646	0.0539249	
CPU_Freq[1113600]: 0.11936	0.0610661	
CPU_Freq[960000]: 0.136365	0.0704926	
CPU_Freq[806400]: 0.160265	0.0835101	
CPU_Freq[652800]: 0.196291	0.102653	
CPU_Freq[499200]: 0.256695	0.133577	
CPU_Freq[345600]: 0.378237	0.191989	
Cluster 1: 
CPU_Freq[2035200]: 0.199237	0.100096	0.0507595	
CPU_Freq[1881600]: 0.212379	0.106395	0.0540249	
CPU_Freq[1728000]: 0.227909	0.113844	0.0578953	
CPU_Freq[1574400]: 0.246541	0.12279	0.0625554	
CPU_Freq[1420800]: 0.26931	0.133734	0.0682739	
CPU_Freq[1267200]: 0.297762	0.14743	0.0754563	
CPU_Freq[1113600]: 0.334326	0.165061	0.084745	
CPU_Freq[960000]: 0.383043	0.188606	0.0972205	
CPU_Freq[806400]: 0.451164	0.221626	0.11485	
CPU_Freq[652800]: 0.553126	0.271252	0.141621	
CPU_Freq[499200]: 0.722315	0.354101	0.186992	
CPU_Freq[345600]: 1.057	0.51964	0.279858	

---------- CPU Power Predictions ---------- 
Memory Frequency: 1866000000: 
Cluster 0: 
CPU_Freq[2035200]: 1.89246	3.15724	
CPU_Freq[1881600]: 1.64157	2.72477	
CPU_Freq[1728000]: 1.41468	2.33284	
CPU_Freq[1574400]: 1.21179	1.98143	
CPU_Freq[1420800]: 1.0329	1.67057	
CPU_Freq[1267200]: 0.878017	1.40023	
CPU_Freq[1113600]: 0.747135	1.17043	
CPU_Freq[960000]: 0.640255	0.981165	
CPU_Freq[806400]: 0.557378	0.832431	
CPU_Freq[652800]: 0.498503	0.724232	
CPU_Freq[499200]: 0.46363	0.656567	
CPU_Freq[345600]: 0.45276	0.629436	
Cluster 1: 
CPU_Freq[2035200]: 1.23592	1.86091	2.6269	
CPU_Freq[1881600]: 1.08529	1.63875	2.29185	
CPU_Freq[1728000]: 0.947843	1.43431	1.98468	
CPU_Freq[1574400]: 0.823576	1.24758	1.70539	
CPU_Freq[1420800]: 0.71249	1.07856	1.45397	
CPU_Freq[1267200]: 0.614587	0.927258	1.23042	
CPU_Freq[1113600]: 0.529866	0.793669	1.03475	
CPU_Freq[960000]: 0.458326	0.677793	0.866944	
CPU_Freq[806400]: 0.399969	0.579631	0.727017	
CPU_Freq[652800]: 0.354794	0.499183	0.614964	
CPU_Freq[499200]: 0.322801	0.436448	0.530784	
CPU_Freq[345600]: 0.30399	0.391427	0.474478	
Memory Frequency: 1600000000: 
Cluster 0: 
CPU_Freq[2035200]: 1.89246	3.15724	
CPU_Freq[1881600]: 1.64157	2.72477	
CPU_Freq[1728000]: 1.41468	2.33284	
CPU_Freq[1574400]: 1.21179	1.98143	
CPU_Freq[1420800]: 1.0329	1.67057	
CPU_Freq[1267200]: 0.878017	1.40023	
CPU_Freq[1113600]: 0.747135	1.17043	
CPU_Freq[960000]: 0.640255	0.981165	
CPU_Freq[806400]: 0.557378	0.832431	
CPU_Freq[652800]: 0.498503	0.724232	
CPU_Freq[499200]: 0.46363	0.656567	
CPU_Freq[345600]: 0.45276	0.629436	
Cluster 1: 
CPU_Freq[2035200]: 1.23592	1.86091	2.6269	
CPU_Freq[1881600]: 1.08529	1.63875	2.29185	
CPU_Freq[1728000]: 0.947843	1.43431	1.98468	
CPU_Freq[1574400]: 0.823576	1.24758	1.70539	
CPU_Freq[1420800]: 0.71249	1.07856	1.45397	
CPU_Freq[1267200]: 0.614587	0.927258	1.23042	
CPU_Freq[1113600]: 0.529866	0.793669	1.03475	
CPU_Freq[960000]: 0.458326	0.677793	0.866944	
CPU_Freq[806400]: 0.399969	0.579631	0.727017	
CPU_Freq[652800]: 0.354794	0.499183	0.614964	
CPU_Freq[499200]: 0.322801	0.436448	0.530784	
CPU_Freq[345600]: 0.30399	0.391427	0.474478	
Memory Frequency: 1331200000: 
Cluster 0: 
CPU_Freq[2035200]: 1.89246	3.15724	
CPU_Freq[1881600]: 1.64157	2.72477	
CPU_Freq[1728000]: 1.41468	2.33284	
CPU_Freq[1574400]: 1.21179	1.98143	
CPU_Freq[1420800]: 1.0329	1.67057	
CPU_Freq[1267200]: 0.878017	1.40023	
CPU_Freq[1113600]: 0.747135	1.17043	
CPU_Freq[960000]: 0.640255	0.981165	
CPU_Freq[806400]: 0.557378	0.832431	
CPU_Freq[652800]: 0.498503	0.724232	
CPU_Freq[499200]: 0.46363	0.656567	
CPU_Freq[345600]: 0.45276	0.629436	
Cluster 1: 
CPU_Freq[2035200]: 1.23592	1.86091	2.6269	
CPU_Freq[1881600]: 1.08529	1.63875	2.29185	
CPU_Freq[1728000]: 0.947843	1.43431	1.98468	
CPU_Freq[1574400]: 0.823576	1.24758	1.70539	
CPU_Freq[1420800]: 0.71249	1.07856	1.45397	
CPU_Freq[1267200]: 0.614587	0.927258	1.23042	
CPU_Freq[1113600]: 0.529866	0.793669	1.03475	
CPU_Freq[960000]: 0.458326	0.677793	0.866944	
CPU_Freq[806400]: 0.399969	0.579631	0.727017	
CPU_Freq[652800]: 0.354794	0.499183	0.614964	
CPU_Freq[499200]: 0.322801	0.436448	0.530784	
CPU_Freq[345600]: 0.30399	0.391427	0.474478	
Memory Frequency: 1062400000: 
Cluster 0: 
CPU_Freq[2035200]: 1.89246	3.15724	
CPU_Freq[1881600]: 1.64157	2.72477	
CPU_Freq[1728000]: 1.41468	2.33284	
CPU_Freq[1574400]: 1.21179	1.98143	
CPU_Freq[1420800]: 1.0329	1.67057	
CPU_Freq[1267200]: 0.878017	1.40023	
CPU_Freq[1113600]: 0.747135	1.17043	
CPU_Freq[960000]: 0.640255	0.981165	
CPU_Freq[806400]: 0.557378	0.832431	
CPU_Freq[652800]: 0.498503	0.724232	
CPU_Freq[499200]: 0.46363	0.656567	
CPU_Freq[345600]: 0.45276	0.629436	
Cluster 1: 
CPU_Freq[2035200]: 1.23592	1.86091	2.6269	
CPU_Freq[1881600]: 1.08529	1.63875	2.29185	
CPU_Freq[1728000]: 0.947843	1.43431	1.98468	
CPU_Freq[1574400]: 0.823576	1.24758	1.70539	
CPU_Freq[1420800]: 0.71249	1.07856	1.45397	
CPU_Freq[1267200]: 0.614587	0.927258	1.23042	
CPU_Freq[1113600]: 0.529866	0.793669	1.03475	
CPU_Freq[960000]: 0.458326	0.677793	0.866944	
CPU_Freq[806400]: 0.399969	0.579631	0.727017	
CPU_Freq[652800]: 0.354794	0.499183	0.614964	
CPU_Freq[499200]: 0.322801	0.436448	0.530784	
CPU_Freq[345600]: 0.30399	0.391427	0.474478	
Memory Frequency: 800000000: 
Cluster 0: 
CPU_Freq[2035200]: 1.89246	3.15724	
CPU_Freq[1881600]: 1.64157	2.72477	
CPU_Freq[1728000]: 1.41468	2.33284	
CPU_Freq[1574400]: 1.21179	1.98143	
CPU_Freq[1420800]: 1.0329	1.67057	
CPU_Freq[1267200]: 0.878017	1.40023	
CPU_Freq[1113600]: 0.747135	1.17043	
CPU_Freq[960000]: 0.640255	0.981165	
CPU_Freq[806400]: 0.557378	0.832431	
CPU_Freq[652800]: 0.498503	0.724232	
CPU_Freq[499200]: 0.46363	0.656567	
CPU_Freq[345600]: 0.45276	0.629436	
Cluster 1: 
CPU_Freq[2035200]: 1.23592	1.86091	2.6269	
CPU_Freq[1881600]: 1.08529	1.63875	2.29185	
CPU_Freq[1728000]: 0.947843	1.43431	1.98468	
CPU_Freq[1574400]: 0.823576	1.24758	1.70539	
CPU_Freq[1420800]: 0.71249	1.07856	1.45397	
CPU_Freq[1267200]: 0.614587	0.927258	1.23042	
CPU_Freq[1113600]: 0.529866	0.793669	1.03475	
CPU_Freq[960000]: 0.458326	0.677793	0.866944	
CPU_Freq[806400]: 0.399969	0.579631	0.727017	
CPU_Freq[652800]: 0.354794	0.499183	0.614964	
CPU_Freq[499200]: 0.322801	0.436448	0.530784	
CPU_Freq[345600]: 0.30399	0.391427	0.474478	

---------- Memory Power Predictions ---------- 
Memory Frequency: 1866000000: 
Cluster 0: 
CPU_Freq[2035200]: 1.21534	1.61571	
CPU_Freq[1881600]: 1.21684	1.60081	
CPU_Freq[1728000]: 1.2155	1.58184	
CPU_Freq[1574400]: 1.21131	1.55878	
CPU_Freq[1420800]: 1.20429	1.53165	
CPU_Freq[1267200]: 1.19442	1.50044	
CPU_Freq[1113600]: 1.18172	1.46514	
CPU_Freq[960000]: 1.16617	1.42577	
CPU_Freq[806400]: 1.14778	1.38232	
CPU_Freq[652800]: 1.12655	1.33479	
CPU_Freq[499200]: 1.10247	1.28318	
CPU_Freq[345600]: 1.07556	1.22749	
Cluster 1: 
CPU_Freq[2035200]: 1.20326	1.18326	1.1712	
CPU_Freq[1881600]: 1.20336	1.18707	1.17476	
CPU_Freq[1728000]: 1.20163	1.18796	1.17643	
CPU_Freq[1574400]: 1.19805	1.18595	1.17621	
CPU_Freq[1420800]: 1.19264	1.18104	1.17411	
CPU_Freq[1267200]: 1.18538	1.17323	1.17011	
CPU_Freq[1113600]: 1.17629	1.1625	1.16423	
CPU_Freq[960000]: 1.16536	1.14888	1.15646	
CPU_Freq[806400]: 1.15259	1.13235	1.1468	
CPU_Freq[652800]: 1.13798	1.11291	1.13525	
CPU_Freq[499200]: 1.12153	1.09057	1.12181	
CPU_Freq[345600]: 1.10325	1.06533	1.10649	
Memory Frequency: 1600000000: 
Cluster 0: 
CPU_Freq[2035200]: 0.829045	1.24464	
CPU_Freq[1881600]: 0.830423	1.23061	
CPU_Freq[1728000]: 0.828959	1.2125	
CPU_Freq[1574400]: 0.824654	1.19031	
CPU_Freq[1420800]: 0.817508	1.16404	
CPU_Freq[1267200]: 0.80752	1.13369	
CPU_Freq[1113600]: 0.794691	1.09926	
CPU_Freq[960000]: 0.779021	1.06075	
CPU_Freq[806400]: 0.760509	1.01817	
CPU_Freq[652800]: 0.739155	0.9715	
CPU_Freq[499200]: 0.714961	0.920753	
CPU_Freq[345600]: 0.687925	0.865927	
Cluster 1: 
CPU_Freq[2035200]: 0.780724	0.778425	0.760172	
CPU_Freq[1881600]: 0.780826	0.78223	0.763727	
CPU_Freq[1728000]: 0.779088	0.783132	0.765392	
CPU_Freq[1574400]: 0.775512	0.781128	0.76517	
CPU_Freq[1420800]: 0.770097	0.776221	0.763059	
CPU_Freq[1267200]: 0.762843	0.768409	0.759059	
CPU_Freq[1113600]: 0.753751	0.757692	0.753172	
CPU_Freq[960000]: 0.74282	0.74407	0.745395	
CPU_Freq[806400]: 0.73005	0.727545	0.735731	
CPU_Freq[652800]: 0.715441	0.708114	0.724178	
CPU_Freq[499200]: 0.698994	0.685779	0.710737	
CPU_Freq[345600]: 0.680707	0.66054	0.695407	
Memory Frequency: 1331200000: 
Cluster 0: 
CPU_Freq[2035200]: 0.553789	0.975148	
CPU_Freq[1881600]: 0.555043	0.961989	
CPU_Freq[1728000]: 0.553456	0.944751	
CPU_Freq[1574400]: 0.549028	0.923434	
CPU_Freq[1420800]: 0.541758	0.898037	
CPU_Freq[1267200]: 0.531647	0.86856	
CPU_Freq[1113600]: 0.518694	0.835004	
CPU_Freq[960000]: 0.5029	0.797369	
CPU_Freq[806400]: 0.484265	0.755654	
CPU_Freq[652800]: 0.462788	0.70986	
CPU_Freq[499200]: 0.43847	0.659986	
CPU_Freq[345600]: 0.411311	0.606033	
Cluster 1: 
CPU_Freq[2035200]: 0.488309	0.493816	0.472054	
CPU_Freq[1881600]: 0.488411	0.497626	0.475604	
CPU_Freq[1728000]: 0.486673	0.498532	0.477265	
CPU_Freq[1574400]: 0.483097	0.496533	0.477038	
CPU_Freq[1420800]: 0.477682	0.49163	0.474922	
CPU_Freq[1267200]: 0.470428	0.483822	0.470918	
CPU_Freq[1113600]: 0.461336	0.47311	0.465026	
CPU_Freq[960000]: 0.450405	0.459493	0.457245	
CPU_Freq[806400]: 0.437635	0.442971	0.447576	
CPU_Freq[652800]: 0.423026	0.423546	0.436018	
CPU_Freq[499200]: 0.406578	0.401215	0.422573	
CPU_Freq[345600]: 0.388292	0.37598	0.407238	
Memory Frequency: 1062400000: 
Cluster 0: 
CPU_Freq[2035200]: 0.394237	0.811678	
CPU_Freq[1881600]: 0.395368	0.799392	
CPU_Freq[1728000]: 0.393658	0.783026	
CPU_Freq[1574400]: 0.389106	0.762582	
CPU_Freq[1420800]: 0.381713	0.738058	
CPU_Freq[1267200]: 0.371478	0.709454	
CPU_Freq[1113600]: 0.358402	0.676771	
CPU_Freq[960000]: 0.342485	0.640008	
CPU_Freq[806400]: 0.323726	0.599166	
CPU_Freq[652800]: 0.302126	0.554245	
CPU_Freq[499200]: 0.277685	0.505244	
CPU_Freq[345600]: 0.250402	0.452163	
Cluster 1: 
CPU_Freq[2035200]: 0.331171	0.334351	0.311841	
CPU_Freq[1881600]: 0.331272	0.338165	0.315386	
CPU_Freq[1728000]: 0.329535	0.339076	0.317042	
CPU_Freq[1574400]: 0.325958	0.337081	0.316811	
CPU_Freq[1420800]: 0.320543	0.332183	0.31469	
CPU_Freq[1267200]: 0.31329	0.324379	0.310682	
CPU_Freq[1113600]: 0.304197	0.313671	0.304785	
CPU_Freq[960000]: 0.293266	0.300059	0.297	
CPU_Freq[806400]: 0.280496	0.283542	0.287326	
CPU_Freq[652800]: 0.265887	0.264121	0.275764	
CPU_Freq[499200]: 0.24944	0.241795	0.262313	
CPU_Freq[345600]: 0.231154	0.216564	0.246975	
Memory Frequency: 800000000: 
Cluster 0: 
CPU_Freq[2035200]: 0.350091	0.754368	
CPU_Freq[1881600]: 0.351101	0.742935	
CPU_Freq[1728000]: 0.34927	0.727421	
CPU_Freq[1574400]: 0.344598	0.707829	
CPU_Freq[1420800]: 0.337084	0.684156	
CPU_Freq[1267200]: 0.326729	0.656405	
CPU_Freq[1113600]: 0.313533	0.624574	
CPU_Freq[960000]: 0.297495	0.588663	
CPU_Freq[806400]: 0.278616	0.548673	
CPU_Freq[652800]: 0.256895	0.504604	
CPU_Freq[499200]: 0.232333	0.456455	
CPU_Freq[345600]: 0.20493	0.404226	
Cluster 1: 
CPU_Freq[2035200]: 0.308257	0.299392	0.278816	
CPU_Freq[1881600]: 0.308358	0.303212	0.282356	
CPU_Freq[1728000]: 0.306621	0.304126	0.284008	
CPU_Freq[1574400]: 0.303044	0.302136	0.283772	
CPU_Freq[1420800]: 0.29763	0.297242	0.281647	
CPU_Freq[1267200]: 0.290376	0.289443	0.277634	
CPU_Freq[1113600]: 0.281283	0.278739	0.271733	
CPU_Freq[960000]: 0.270352	0.265131	0.263943	
CPU_Freq[806400]: 0.257582	0.248619	0.254265	
CPU_Freq[652800]: 0.242973	0.229202	0.242698	
CPU_Freq[499200]: 0.226526	0.20688	0.229243	
CPU_Freq[345600]: 0.20824	0.181654	0.2139	

[Congratulations!] All the training Phase finished. Training finished time: 1687719236839. Set the CPU frequency of all clusters back to the highest frequency
[DEBUG] The best resource width for MM tasks on cluster 1 and 2 are <1> and <4>
[DEBUG] Using <2> cores in cluster 1 and <4> cores in cluster 2 achieves the lowest predicted EDP.
[DEBUG] For MM tasks, 58.3494% of tasks should be scheduled to cluster 0
[DEBUG] For MM tasks, 41.6506% of tasks should be scheduled to cluster 1
[DEBUG] The best resource width for MM tasks on cluster 1 and 2 are <1> and <2>
[DEBUG] Using <2> cores in cluster 1 and <4> cores in cluster 2 achieves the lowest predicted EDP.
[DEBUG] For MM tasks, 58.5866% of tasks should be scheduled to cluster 0
[DEBUG] For MM tasks, 41.4134% of tasks should be scheduled to cluster 1
[DEBUG] The best resource width for MM tasks on cluster 1 and 2 are <1> and <2>
[DEBUG] Using <2> cores in cluster 1 and <4> cores in cluster 2 achieves the lowest predicted EDP.
[DEBUG] For MM tasks, 58.3945% of tasks should be scheduled to cluster 0
[DEBUG] For MM tasks, 41.6055% of tasks should be scheduled to cluster 1
[DEBUG] The best resource width for MM tasks on cluster 1 and 2 are <1> and <2>
[DEBUG] Using <2> cores in cluster 1 and <4> cores in cluster 2 achieves the lowest predicted EDP.
[DEBUG] For MM tasks, 58.4376% of tasks should be scheduled to cluster 0
[DEBUG] For MM tasks, 41.5624% of tasks should be scheduled to cluster 1
[DEBUG] The best resource width for MM tasks on cluster 1 and 2 are <1> and <2>
[DEBUG] Using <2> cores in cluster 1 and <4> cores in cluster 2 achieves the lowest predicted EDP.
[DEBUG] For MM tasks, 58.5366% of tasks should be scheduled to cluster 0
[DEBUG] For MM tasks, 41.4634% of tasks should be scheduled to cluster 1
[DEBUG] The best resource width for MM tasks on cluster 1 and 2 are <1> and <2>
[DEBUG] Using <2> cores in cluster 1 and <4> cores in cluster 2 achieves the lowest predicted EDP.
[DEBUG] For MM tasks, 58.2938% of tasks should be scheduled to cluster 0
[DEBUG] For MM tasks, 41.7062% of tasks should be scheduled to cluster 1
[DEBUG] The best resource width for MM tasks on cluster 1 and 2 are <1> and <2>
[DEBUG] Using <2> cores in cluster 1 and <4> cores in cluster 2 achieves the lowest predicted EDP.
[DEBUG] For MM tasks, 58.5676% of tasks should be scheduled to cluster 0
[DEBUG] For MM tasks, 41.4324% of tasks should be scheduled to cluster 1
[DEBUG] The best resource width for MM tasks on cluster 1 and 2 are <1> and <2>
[DEBUG] Using <2> cores in cluster 1 and <4> cores in cluster 2 achieves the lowest predicted EDP.
[DEBUG] For MM tasks, 58.287% of tasks should be scheduled to cluster 0
[DEBUG] For MM tasks, 41.713% of tasks should be scheduled to cluster 1
[DEBUG] The best resource width for MM tasks on cluster 1 and 2 are <1> and <2>
[DEBUG] Using <2> cores in cluster 1 and <4> cores in cluster 2 achieves the lowest predicted EDP.
[DEBUG] For MM tasks, 58.5696% of tasks should be scheduled to cluster 0
[DEBUG] For MM tasks, 41.4304% of tasks should be scheduled to cluster 1
[DEBUG] The best resource width for MM tasks on cluster 1 and 2 are <1> and <2>
[DEBUG] Using <2> cores in cluster 1 and <4> cores in cluster 2 achieves the lowest predicted EDP.
[DEBUG] For MM tasks, 58.5449% of tasks should be scheduled to cluster 0
[DEBUG] For MM tasks, 41.4551% of tasks should be scheduled to cluster 1
[DEBUG] The best resource width for MM tasks on cluster 1 and 2 are <1> and <2>
[DEBUG] Using <2> cores in cluster 1 and <4> cores in cluster 2 achieves the lowest predicted EDP.
[DEBUG] For MM tasks, 58.5111% of tasks should be scheduled to cluster 0
[DEBUG] For MM tasks, 41.4889% of tasks should be scheduled to cluster 1
[DEBUG] The best resource width for MM tasks on cluster 1 and 2 are <1> and <2>
[DEBUG] Using <2> cores in cluster 1 and <4> cores in cluster 2 achieves the lowest predicted EDP.
[DEBUG] For MM tasks, 58.273% of tasks should be scheduled to cluster 0
[DEBUG] For MM tasks, 41.727% of tasks should be scheduled to cluster 1
[DEBUG] The best resource width for MM tasks on cluster 1 and 2 are <1> and <2>
[DEBUG] Using <2> cores in cluster 1 and <4> cores in cluster 2 achieves the lowest predicted EDP.
[DEBUG] For MM tasks, 58.5306% of tasks should be scheduled to cluster 0
[DEBUG] For MM tasks, 41.4694% of tasks should be scheduled to cluster 1
[DEBUG] The best resource width for MM tasks on cluster 1 and 2 are <1> and <2>
[DEBUG] Using <2> cores in cluster 1 and <4> cores in cluster 2 achieves the lowest predicted EDP.
[DEBUG] For MM tasks, 58.3188% of tasks should be scheduled to cluster 0
[DEBUG] For MM tasks, 41.6812% of tasks should be scheduled to cluster 1
[DEBUG] The best resource width for MM tasks on cluster 1 and 2 are <1> and <2>
[DEBUG] Using <2> cores in cluster 1 and <4> cores in cluster 2 achieves the lowest predicted EDP.
[DEBUG] For MM tasks, 58.412% of tasks should be scheduled to cluster 0
[DEBUG] For MM tasks, 41.588% of tasks should be scheduled to cluster 1
[DEBUG] The best resource width for MM tasks on cluster 1 and 2 are <1> and <2>
[DEBUG] Using <2> cores in cluster 1 and <4> cores in cluster 2 achieves the lowest predicted EDP.
[DEBUG] For MM tasks, 58.2429% of tasks should be scheduled to cluster 0
[DEBUG] For MM tasks, 41.7571% of tasks should be scheduled to cluster 1
[DEBUG] The best resource width for MM tasks on cluster 1 and 2 are <1> and <2>
[DEBUG] Using <2> cores in cluster 1 and <4> cores in cluster 2 achieves the lowest predicted EDP.
[DEBUG] For MM tasks, 58.0752% of tasks should be scheduled to cluster 0
[DEBUG] For MM tasks, 41.9248% of tasks should be scheduled to cluster 1
[DEBUG] The best resource width for MM tasks on cluster 1 and 2 are <1> and <2>
[DEBUG] Using <2> cores in cluster 1 and <4> cores in cluster 2 achieves the lowest predicted EDP.
[DEBUG] For MM tasks, 58.329% of tasks should be scheduled to cluster 0
[DEBUG] For MM tasks, 41.671% of tasks should be scheduled to cluster 1
[DEBUG] The best resource width for MM tasks on cluster 1 and 2 are <1> and <2>
[DEBUG] Using <2> cores in cluster 1 and <4> cores in cluster 2 achieves the lowest predicted EDP.
[DEBUG] For MM tasks, 58.4864% of tasks should be scheduled to cluster 0
[DEBUG] For MM tasks, 41.5136% of tasks should be scheduled to cluster 1
[DEBUG] The best resource width for MM tasks on cluster 1 and 2 are <1> and <2>
[DEBUG] Using <2> cores in cluster 1 and <4> cores in cluster 2 achieves the lowest predicted EDP.
[DEBUG] For MM tasks, 58.6374% of tasks should be scheduled to cluster 0
[DEBUG] For MM tasks, 41.3626% of tasks should be scheduled to cluster 1
[DEBUG] The best resource width for MM tasks on cluster 1 and 2 are <1> and <2>
[DEBUG] Using <2> cores in cluster 1 and <4> cores in cluster 2 achieves the lowest predicted EDP.
[DEBUG] For MM tasks, 58.4953% of tasks should be scheduled to cluster 0
[DEBUG] For MM tasks, 41.5047% of tasks should be scheduled to cluster 1
[DEBUG] The best resource width for MM tasks on cluster 1 and 2 are <1> and <2>
[DEBUG] Using <2> cores in cluster 1 and <4> cores in cluster 2 achieves the lowest predicted EDP.
[DEBUG] For MM tasks, 58.3821% of tasks should be scheduled to cluster 0
[DEBUG] For MM tasks, 41.6179% of tasks should be scheduled to cluster 1
[DEBUG] The best resource width for MM tasks on cluster 1 and 2 are <1> and <2>
[DEBUG] Using <2> cores in cluster 1 and <4> cores in cluster 2 achieves the lowest predicted EDP.
[DEBUG] For MM tasks, 58.2569% of tasks should be scheduled to cluster 0
[DEBUG] For MM tasks, 41.7431% of tasks should be scheduled to cluster 1
[DEBUG] The best resource width for MM tasks on cluster 1 and 2 are <1> and <2>
[DEBUG] Using <2> cores in cluster 1 and <4> cores in cluster 2 achieves the lowest predicted EDP.
[DEBUG] For MM tasks, 58.6881% of tasks should be scheduled to cluster 0
[DEBUG] For MM tasks, 41.3119% of tasks should be scheduled to cluster 1
[DEBUG] The best resource width for MM tasks on cluster 1 and 2 are <1> and <2>
[DEBUG] Using <2> cores in cluster 1 and <4> cores in cluster 2 achieves the lowest predicted EDP.
[DEBUG] For MM tasks, 58.5846% of tasks should be scheduled to cluster 0
[DEBUG] For MM tasks, 41.4154% of tasks should be scheduled to cluster 1
[DEBUG] The best resource width for MM tasks on cluster 1 and 2 are <1> and <2>
[DEBUG] Using <2> cores in cluster 1 and <4> cores in cluster 2 achieves the lowest predicted EDP.
[DEBUG] For MM tasks, 58.2441% of tasks should be scheduled to cluster 0
[DEBUG] For MM tasks, 41.7559% of tasks should be scheduled to cluster 1
[DEBUG] The best resource width for MM tasks on cluster 1 and 2 are <1> and <2>
[DEBUG] Using <2> cores in cluster 1 and <4> cores in cluster 2 achieves the lowest predicted EDP.
[DEBUG] For MM tasks, 58.3611% of tasks should be scheduled to cluster 0
[DEBUG] For MM tasks, 41.6389% of tasks should be scheduled to cluster 1
[DEBUG] The best resource width for MM tasks on cluster 1 and 2 are <1> and <2>
[DEBUG] Using <2> cores in cluster 1 and <4> cores in cluster 2 achieves the lowest predicted EDP.
[DEBUG] For MM tasks, 58.3026% of tasks should be scheduled to cluster 0
[DEBUG] For MM tasks, 41.6973% of tasks should be scheduled to cluster 1
[DEBUG] The best resource width for MM tasks on cluster 1 and 2 are <1> and <2>
[DEBUG] Using <2> cores in cluster 1 and <4> cores in cluster 2 achieves the lowest predicted EDP.
[DEBUG] For MM tasks, 58.2956% of tasks should be scheduled to cluster 0
[DEBUG] For MM tasks, 41.7044% of tasks should be scheduled to cluster 1
[DEBUG] The best resource width for MM tasks on cluster 1 and 2 are <1> and <2>
[DEBUG] Using <2> cores in cluster 1 and <4> cores in cluster 2 achieves the lowest predicted EDP.
[DEBUG] For MM tasks, 58.1984% of tasks should be scheduled to cluster 0
[DEBUG] For MM tasks, 41.8016% of tasks should be scheduled to cluster 1
[DEBUG] The best resource width for MM tasks on cluster 1 and 2 are <1> and <2>
[DEBUG] Using <2> cores in cluster 1 and <4> cores in cluster 2 achieves the lowest predicted EDP.
[DEBUG] For MM tasks, 58.1644% of tasks should be scheduled to cluster 0
[DEBUG] For MM tasks, 41.8356% of tasks should be scheduled to cluster 1
[DEBUG] The best resource width for MM tasks on cluster 1 and 2 are <1> and <2>
[DEBUG] Using <2> cores in cluster 1 and <4> cores in cluster 2 achieves the lowest predicted EDP.
[DEBUG] For MM tasks, 58.4344% of tasks should be scheduled to cluster 0
[DEBUG] For MM tasks, 41.5656% of tasks should be scheduled to cluster 1
[DEBUG] The best resource width for MM tasks on cluster 1 and 2 are <1> and <2>
[DEBUG] Using <2> cores in cluster 1 and <4> cores in cluster 2 achieves the lowest predicted EDP.
[DEBUG] For MM tasks, 58.4434% of tasks should be scheduled to cluster 0
[DEBUG] For MM tasks, 41.5566% of tasks should be scheduled to cluster 1
[DEBUG] The best resource width for MM tasks on cluster 1 and 2 are <1> and <2>
[DEBUG] Using <2> cores in cluster 1 and <4> cores in cluster 2 achieves the lowest predicted EDP.
[DEBUG] For MM tasks, 58.2812% of tasks should be scheduled to cluster 0
[DEBUG] For MM tasks, 41.7188% of tasks should be scheduled to cluster 1
[DEBUG] The best resource width for MM tasks on cluster 1 and 2 are <1> and <2>
[DEBUG] Using <2> cores in cluster 1 and <4> cores in cluster 2 achieves the lowest predicted EDP.
[DEBUG] For MM tasks, 58.5565% of tasks should be scheduled to cluster 0
[DEBUG] For MM tasks, 41.4435% of tasks should be scheduled to cluster 1
[DEBUG] The best resource width for MM tasks on cluster 1 and 2 are <1> and <2>
[DEBUG] Using <2> cores in cluster 1 and <4> cores in cluster 2 achieves the lowest predicted EDP.
[DEBUG] For MM tasks, 58.4461% of tasks should be scheduled to cluster 0
[DEBUG] For MM tasks, 41.5539% of tasks should be scheduled to cluster 1
[DEBUG] The best resource width for MM tasks on cluster 1 and 2 are <1> and <2>
[DEBUG] Using <2> cores in cluster 1 and <4> cores in cluster 2 achieves the lowest predicted EDP.
[DEBUG] For MM tasks, 58.3228% of tasks should be scheduled to cluster 0
[DEBUG] For MM tasks, 41.6772% of tasks should be scheduled to cluster 1
[DEBUG] The best resource width for MM tasks on cluster 1 and 2 are <1> and <2>
[DEBUG] Using <2> cores in cluster 1 and <4> cores in cluster 2 achieves the lowest predicted EDP.
[DEBUG] For MM tasks, 58.5106% of tasks should be scheduled to cluster 0
[DEBUG] For MM tasks, 41.4894% of tasks should be scheduled to cluster 1
[DEBUG] The best resource width for MM tasks on cluster 1 and 2 are <1> and <2>
[DEBUG] Using <2> cores in cluster 1 and <4> cores in cluster 2 achieves the lowest predicted EDP.
[DEBUG] For MM tasks, 58.2561% of tasks should be scheduled to cluster 0
[DEBUG] For MM tasks, 41.7439% of tasks should be scheduled to cluster 1
[DEBUG] The best resource width for MM tasks on cluster 1 and 2 are <1> and <2>
[DEBUG] Using <2> cores in cluster 1 and <4> cores in cluster 2 achieves the lowest predicted EDP.
[DEBUG] For MM tasks, 58.3226% of tasks should be scheduled to cluster 0
[DEBUG] For MM tasks, 41.6774% of tasks should be scheduled to cluster 1
[DEBUG] The best resource width for MM tasks on cluster 1 and 2 are <1> and <2>
[DEBUG] Using <2> cores in cluster 1 and <4> cores in cluster 2 achieves the lowest predicted EDP.
[DEBUG] For MM tasks, 58.5426% of tasks should be scheduled to cluster 0
[DEBUG] For MM tasks, 41.4574% of tasks should be scheduled to cluster 1
[DEBUG] The best resource width for MM tasks on cluster 1 and 2 are <1> and <2>
[DEBUG] Using <2> cores in cluster 1 and <4> cores in cluster 2 achieves the lowest predicted EDP.
[DEBUG] For MM tasks, 58.5216% of tasks should be scheduled to cluster 0
[DEBUG] For MM tasks, 41.4784% of tasks should be scheduled to cluster 1
[DEBUG] The best resource width for MM tasks on cluster 1 and 2 are <1> and <2>
[DEBUG] Using <2> cores in cluster 1 and <4> cores in cluster 2 achieves the lowest predicted EDP.
[DEBUG] For MM tasks, 58.2876% of tasks should be scheduled to cluster 0
[DEBUG] For MM tasks, 41.7124% of tasks should be scheduled to cluster 1
[DEBUG] The best resource width for MM tasks on cluster 1 and 2 are <1> and <2>
[DEBUG] Using <2> cores in cluster 1 and <4> cores in cluster 2 achieves the lowest predicted EDP.
[DEBUG] For MM tasks, 58.4089% of tasks should be scheduled to cluster 0
[DEBUG] For MM tasks, 41.591% of tasks should be scheduled to cluster 1
[DEBUG] The best resource width for MM tasks on cluster 1 and 2 are <1> and <2>
[DEBUG] Using <2> cores in cluster 1 and <4> cores in cluster 2 achieves the lowest predicted EDP.
[DEBUG] For MM tasks, 58.1398% of tasks should be scheduled to cluster 0
[DEBUG] For MM tasks, 41.8602% of tasks should be scheduled to cluster 1
[DEBUG] The best resource width for MM tasks on cluster 1 and 2 are <1> and <2>
[DEBUG] Using <2> cores in cluster 1 and <4> cores in cluster 2 achieves the lowest predicted EDP.
[DEBUG] For MM tasks, 58.5148% of tasks should be scheduled to cluster 0
[DEBUG] For MM tasks, 41.4852% of tasks should be scheduled to cluster 1
[DEBUG] The best resource width for MM tasks on cluster 1 and 2 are <1> and <2>
[DEBUG] Using <2> cores in cluster 1 and <4> cores in cluster 2 achieves the lowest predicted EDP.
[DEBUG] For MM tasks, 58.6667% of tasks should be scheduled to cluster 0
[DEBUG] For MM tasks, 41.3333% of tasks should be scheduled to cluster 1
[DEBUG] The best resource width for MM tasks on cluster 1 and 2 are <1> and <2>
[DEBUG] Using <2> cores in cluster 1 and <4> cores in cluster 2 achieves the lowest predicted EDP.
[DEBUG] For MM tasks, 58.3014% of tasks should be scheduled to cluster 0
[DEBUG] For MM tasks, 41.6986% of tasks should be scheduled to cluster 1
[DEBUG] The best resource width for MM tasks on cluster 1 and 2 are <1> and <2>
[DEBUG] Using <2> cores in cluster 1 and <4> cores in cluster 2 achieves the lowest predicted EDP.
[DEBUG] For MM tasks, 58.5144% of tasks should be scheduled to cluster 0
[DEBUG] For MM tasks, 41.4856% of tasks should be scheduled to cluster 1
[DEBUG] The best resource width for MM tasks on cluster 1 and 2 are <1> and <2>
[DEBUG] Using <2> cores in cluster 1 and <4> cores in cluster 2 achieves the lowest predicted EDP.
[DEBUG] For MM tasks, 58.5309% of tasks should be scheduled to cluster 0
[DEBUG] For MM tasks, 41.4691% of tasks should be scheduled to cluster 1
[DEBUG] The best resource width for MM tasks on cluster 1 and 2 are <1> and <2>
[DEBUG] Using <2> cores in cluster 1 and <4> cores in cluster 2 achieves the lowest predicted EDP.
[DEBUG] For MM tasks, 58.3042% of tasks should be scheduled to cluster 0
[DEBUG] For MM tasks, 41.6958% of tasks should be scheduled to cluster 1
[DEBUG] The best resource width for MM tasks on cluster 1 and 2 are <1> and <2>
[DEBUG] Using <2> cores in cluster 1 and <4> cores in cluster 2 achieves the lowest predicted EDP.
[DEBUG] For MM tasks, 58.3995% of tasks should be scheduled to cluster 0
[DEBUG] For MM tasks, 41.6005% of tasks should be scheduled to cluster 1
[DEBUG] The best resource width for MM tasks on cluster 1 and 2 are <1> and <2>
[DEBUG] Using <2> cores in cluster 1 and <4> cores in cluster 2 achieves the lowest predicted EDP.
[DEBUG] For MM tasks, 58.7723% of tasks should be scheduled to cluster 0
[DEBUG] For MM tasks, 41.2277% of tasks should be scheduled to cluster 1
[DEBUG] The best resource width for MM tasks on cluster 1 and 2 are <1> and <2>
[DEBUG] Using <2> cores in cluster 1 and <4> cores in cluster 2 achieves the lowest predicted EDP.
[DEBUG] For MM tasks, 58.2703% of tasks should be scheduled to cluster 0
[DEBUG] For MM tasks, 41.7298% of tasks should be scheduled to cluster 1
[DEBUG] The best resource width for MM tasks on cluster 1 and 2 are <1> and <2>
[DEBUG] Using <2> cores in cluster 1 and <4> cores in cluster 2 achieves the lowest predicted EDP.
[DEBUG] For MM tasks, 58.5642% of tasks should be scheduled to cluster 0
[DEBUG] For MM tasks, 41.4358% of tasks should be scheduled to cluster 1
[DEBUG] The best resource width for MM tasks on cluster 1 and 2 are <1> and <2>
[DEBUG] Using <2> cores in cluster 1 and <4> cores in cluster 2 achieves the lowest predicted EDP.
[DEBUG] For MM tasks, 58.2348% of tasks should be scheduled to cluster 0
[DEBUG] For MM tasks, 41.7652% of tasks should be scheduled to cluster 1
[DEBUG] The best resource width for MM tasks on cluster 1 and 2 are <1> and <2>
[DEBUG] Using <2> cores in cluster 1 and <4> cores in cluster 2 achieves the lowest predicted EDP.
[DEBUG] For MM tasks, 58.2891% of tasks should be scheduled to cluster 0
[DEBUG] For MM tasks, 41.7109% of tasks should be scheduled to cluster 1
[DEBUG] The best resource width for MM tasks on cluster 1 and 2 are <1> and <2>
[DEBUG] Using <2> cores in cluster 1 and <4> cores in cluster 2 achieves the lowest predicted EDP.
[DEBUG] For MM tasks, 58.2175% of tasks should be scheduled to cluster 0
[DEBUG] For MM tasks, 41.7825% of tasks should be scheduled to cluster 1
[DEBUG] The best resource width for MM tasks on cluster 1 and 2 are <1> and <2>
[DEBUG] Using <2> cores in cluster 1 and <4> cores in cluster 2 achieves the lowest predicted EDP.
[DEBUG] For MM tasks, 58.4888% of tasks should be scheduled to cluster 0
[DEBUG] For MM tasks, 41.5112% of tasks should be scheduled to cluster 1
[DEBUG] The best resource width for MM tasks on cluster 1 and 2 are <1> and <2>
[DEBUG] Using <2> cores in cluster 1 and <4> cores in cluster 2 achieves the lowest predicted EDP.
[DEBUG] For MM tasks, 58.31% of tasks should be scheduled to cluster 0
[DEBUG] For MM tasks, 41.69% of tasks should be scheduled to cluster 1
[DEBUG] The best resource width for MM tasks on cluster 1 and 2 are <1> and <2>
[DEBUG] Using <2> cores in cluster 1 and <4> cores in cluster 2 achieves the lowest predicted EDP.
[DEBUG] For MM tasks, 58.2758% of tasks should be scheduled to cluster 0
[DEBUG] For MM tasks, 41.7242% of tasks should be scheduled to cluster 1
[DEBUG] The best resource width for MM tasks on cluster 1 and 2 are <1> and <2>
[DEBUG] Using <2> cores in cluster 1 and <4> cores in cluster 2 achieves the lowest predicted EDP.
[DEBUG] For MM tasks, 58.3669% of tasks should be scheduled to cluster 0
[DEBUG] For MM tasks, 41.6331% of tasks should be scheduled to cluster 1
[DEBUG] The best resource width for MM tasks on cluster 1 and 2 are <1> and <2>
[DEBUG] Using <2> cores in cluster 1 and <4> cores in cluster 2 achieves the lowest predicted EDP.
[DEBUG] For MM tasks, 58.3993% of tasks should be scheduled to cluster 0
[DEBUG] For MM tasks, 41.6007% of tasks should be scheduled to cluster 1
[DEBUG] The best resource width for MM tasks on cluster 1 and 2 are <1> and <2>
[DEBUG] Using <2> cores in cluster 1 and <4> cores in cluster 2 achieves the lowest predicted EDP.
[DEBUG] For MM tasks, 58.2822% of tasks should be scheduled to cluster 0
[DEBUG] For MM tasks, 41.7178% of tasks should be scheduled to cluster 1
[DEBUG] The best resource width for MM tasks on cluster 1 and 2 are <1> and <2>
[DEBUG] Using <2> cores in cluster 1 and <4> cores in cluster 2 achieves the lowest predicted EDP.
[DEBUG] For MM tasks, 58.3339% of tasks should be scheduled to cluster 0
[DEBUG] For MM tasks, 41.6661% of tasks should be scheduled to cluster 1
Thread 3 sleeps for 169945 ms. 
Task type: 0: Thread 3 with width 1 completes 1 tasks.
Task type: 0: Thread 3 with width 2 completes 1040 tasks.
Task type: 0: Thread 3 with width 4 completes 59 tasks.
Task type: 1: Thread 3 with width 1 completes 0 tasks.
Task type: 1: Thread 3 with width 2 completes 0 tasks.
Task type: 1: Thread 3 with width 4 completes 0 tasks.
Task type: 2: Thread 3 with width 1 completes 0 tasks.
Task type: 2: Thread 3 with width 2 completes 0 tasks.
Task type: 2: Thread 3 with width 4 completes 0 tasks.
Task type: 3: Thread 3 with width 1 completes 0 tasks.
Task type: 3: Thread 3 with width 2 completes 0 tasks.
Task type: 3: Thread 3 with width 4 completes 0 tasks.
Task type: 4: Thread 3 with width 1 completes 0 tasks.
Task type: 4: Thread 3 with width 2 completes 0 tasks.
Task type: 4: Thread 3 with width 4 completes 0 tasks.
Task type: 5: Thread 3 with width 1 completes 0 tasks.
Task type: 5: Thread 3 with width 2 completes 0 tasks.
Task type: 5: Thread 3 with width 4 completes 0 tasks.
The total execution time of thread 3 is 96.099 s.
Thread 5 sleeps for 136525 ms. 
Task type: 0: Thread 5 with width 1 completes 2 tasks.
Task type: 0: Thread 5 with width 2 completes 1410 tasks.
Task type: 0: Thread 5 with width 4 completes 59 tasks.
Task type: 1: Thread 5 with width 1 completes 0 tasks.
Task type: 1: Thread 5 with width 2 completes 0 tasks.
Task type: 1: Thread 5 with width 4 completes 0 tasks.
Task type: 2: Thread 5 with width 1 completes 0 tasks.
Task type: 2: Thread 5 with width 2 completes 0 tasks.
Task type: 2: Thread 5 with width 4 completes 0 tasks.
Task type: 3: Thread 5 with width 1 completes 0 tasks.
Task type: 3: Thread 5 with width 2 completes 0 tasks.
Task type: 3: Thread 5 with width 4 completes 0 tasks.
Task type: 4: Thread 5 with width 1 completes 0 tasks.
Task type: 4: Thread 5 with width 2 completes 0 tasks.
Task type: 4: Thread 5 with width 4 completes 0 tasks.
Task type: 5: Thread 5 with width 1 completes 0 tasks.
Task type: 5: Thread 5 with width 2 completes 0 tasks.
Task type: 5: Thread 5 with width 4 completes 0 tasks.
The total execution time of thread 5 is 129.464 s.
Thread 2 sleeps for 166887 ms. 
Task type: 0: Thread 2 with width 1 completes 3 tasks.
Task type: 0: Thread 2 with width 2 completes 1040 tasks.
Task type: 0: Thread 2 with width 4 completes 59 tasks.
Task type: 1: Thread 2 with width 1 completes 0 tasks.
Task type: 1: Thread 2 with width 2 completes 0 tasks.
Task type: 1: Thread 2 with width 4 completes 0 tasks.
Task type: 2: Thread 2 with width 1 completes 0 tasks.
Task type: 2: Thread 2 with width 2 completes 0 tasks.
Task type: 2: Thread 2 with width 4 completes 0 tasks.
Task type: 3: Thread 2 with width 1 completes 0 tasks.
Task type: 3: Thread 2 with width 2 completes 0 tasks.
Task type: 3: Thread 2 with width 4 completes 0 tasks.
Task type: 4: Thread 2 with width 1 completes 0 tasks.
Task type: 4: Thread 2 with width 2 completes 0 tasks.
Task type: 4: Thread 2 with width 4 completes 0 tasks.
Task type: 5: Thread 2 with width 1 completes 0 tasks.
Task type: 5: Thread 2 with width 2 completes 0 tasks.
Task type: 5: Thread 2 with width 4 completes 0 tasks.
The total execution time of thread 2 is 99.1987 s.
Thread 0 sleeps for 27157 ms. 
Task type: 0: Thread 0 with width 1 completes 3739 tasks.
Task type: 0: Thread 0 with width 2 completes 15 tasks.
Task type: 0: Thread 0 with width 4 completes 0 tasks.
Task type: 1: Thread 0 with width 1 completes 0 tasks.
Task type: 1: Thread 0 with width 2 completes 0 tasks.
Task type: 1: Thread 0 with width 4 completes 0 tasks.
Task type: 2: Thread 0 with width 1 completes 0 tasks.
Task type: 2: Thread 0 with width 2 completes 0 tasks.
Task type: 2: Thread 0 with width 4 completes 0 tasks.
Task type: 3: Thread 0 with width 1 completes 0 tasks.
Task type: 3: Thread 0 with width 2 completes 0 tasks.
Task type: 3: Thread 0 with width 4 completes 0 tasks.
Task type: 4: Thread 0 with width 1 completes 0 tasks.
Task type: 4: Thread 0 with width 2 completes 0 tasks.
Task type: 4: Thread 0 with width 4 completes 0 tasks.
Task type: 5: Thread 0 with width 1 completes 0 tasks.
Task type: 5: Thread 0 with width 2 completes 0 tasks.
Task type: 5: Thread 0 with width 4 completes 0 tasks.
The total execution time of thread 0 is 239.302 s.
Thread 1 sleeps for 27824 ms. 
Task type: 0: Thread 1 with width 1 completes 3726 tasks.
Task type: 0: Thread 1 with width 2 completes 15 tasks.
Task type: 0: Thread 1 with width 4 completes 0 tasks.
Task type: 1: Thread 1 with width 1 completes 0 tasks.
Task type: 1: Thread 1 with width 2 completes 0 tasks.
Task type: 1: Thread 1 with width 4 completes 0 tasks.
Task type: 2: Thread 1 with width 1 completes 0 tasks.
Task type: 2: Thread 1 with width 2 completes 0 tasks.
Task type: 2: Thread 1 with width 4 completes 0 tasks.
Task type: 3: Thread 1 with width 1 completes 0 tasks.
Task type: 3: Thread 1 with width 2 completes 0 tasks.
Task type: 3: Thread 1 with width 4 completes 0 tasks.
Task type: 4: Thread 1 with width 1 completes 0 tasks.
Task type: 4: Thread 1 with width 2 completes 0 tasks.
Task type: 4: Thread 1 with width 4 completes 0 tasks.
Task type: 5: Thread 1 with width 1 completes 0 tasks.
Task type: 5: Thread 1 with width 2 completes 0 tasks.
Task type: 5: Thread 1 with width 4 completes 0 tasks.
The total execution time of thread 1 is 238.639 s.
Thread 4 sleeps for 135792 ms. 
Task type: 0: Thread 4 with width 1 completes 5 tasks.
Task type: 0: Thread 4 with width 2 completes 1410 tasks.
Task type: 0: Thread 4 with width 4 completes 59 tasks.
Task type: 1: Thread 4 with width 1 completes 0 tasks.
Task type: 1: Thread 4 with width 2 completes 0 tasks.
Task type: 1: Thread 4 with width 4 completes 0 tasks.
Task type: 2: Thread 4 with width 1 completes 0 tasks.
Task type: 2: Thread 4 with width 2 completes 0 tasks.
Task type: 2: Thread 4 with width 4 completes 0 tasks.
Task type: 3: Thread 4 with width 1 completes 0 tasks.
Task type: 3: Thread 4 with width 2 completes 0 tasks.
Task type: 3: Thread 4 with width 4 completes 0 tasks.
Task type: 4: Thread 4 with width 1 completes 0 tasks.
Task type: 4: Thread 4 with width 2 completes 0 tasks.
Task type: 4: Thread 4 with width 4 completes 0 tasks.
Task type: 5: Thread 4 with width 1 completes 0 tasks.
Task type: 5: Thread 4 with width 2 completes 0 tasks.
Task type: 5: Thread 4 with width 4 completes 0 tasks.
The total execution time of thread 4 is 130.18 s.
10000,4,1687719232066	1687719498949,266.883,37.4696
Total number of steals across clusters: 0


---------------------- Test Application - Synthetic Benchmarks ---------------------
---------------------- You choose Paper4 scheduler ---------------------
[Warning] MM->Memory-boundness (ClusterA) is smaller than 0!
[Warning] Memory-boundness Calculation (ClusterB) is smaller than 0!
MM: Training Phase finished. Predicted execution time and power results for the kernel tasks: 

---------- Execution Time Predictions ---------- 
Memory Frequency: 1866000000: 
Cluster 0: 
CPU_Freq[2035200]: 0.0645205	0.0318603	
CPU_Freq[1881600]: 0.071036	0.0335609	
CPU_Freq[1728000]: 0.0767184	0.0367922	
CPU_Freq[1574400]: 0.0835453	0.040654	
CPU_Freq[1420800]: 0.091901	0.0453508	
CPU_Freq[1267200]: 0.102363	0.0511862	
CPU_Freq[1113600]: 0.116595	0.0583129	
CPU_Freq[960000]: 0.133852	0.068459	
CPU_Freq[806400]: 0.159142	0.0820306	
CPU_Freq[652800]: 0.197209	0.101989	
CPU_Freq[499200]: 0.260905	0.134229	
CPU_Freq[345600]: 0.388646	0.195127	
Cluster 1: 
CPU_Freq[2035200]: 0.186093	0.0898667	0.0457261	
CPU_Freq[1881600]: 0.201789	0.0984672	0.0495557	
CPU_Freq[1728000]: 0.217482	0.106628	0.0536916	
CPU_Freq[1574400]: 0.236312	0.116425	0.0586693	
CPU_Freq[1420800]: 0.259323	0.128404	0.0647747	
CPU_Freq[1267200]: 0.288079	0.143383	0.0724384	
CPU_Freq[1113600]: 0.325201	0.166353	0.0828832	
CPU_Freq[960000]: 0.374286	0.188355	0.095632	
CPU_Freq[806400]: 0.443161	0.224353	0.114389	
CPU_Freq[652800]: 0.54627	0.27835	0.142827	
CPU_Freq[499200]: 0.717417	0.368239	0.190909	
CPU_Freq[345600]: 1.05615	0.547006	0.288964	
Memory Frequency: 1600000000: 
Cluster 0: 
CPU_Freq[2035200]: 0.0663454	0.0308235	
CPU_Freq[1881600]: 0.0711093	0.03355	
CPU_Freq[1728000]: 0.0767455	0.0367611	
CPU_Freq[1574400]: 0.0835172	0.0405988	
CPU_Freq[1420800]: 0.0918057	0.0452662	
CPU_Freq[1267200]: 0.102184	0.0510652	
CPU_Freq[1113600]: 0.115555	0.0584639	
CPU_Freq[960000]: 0.133427	0.0682301	
CPU_Freq[806400]: 0.158522	0.0817168	
CPU_Freq[652800]: 0.196304	0.10155	
CPU_Freq[499200]: 0.259539	0.133589	
CPU_Freq[345600]: 0.38641	0.194106	
Cluster 1: 
CPU_Freq[2035200]: 0.190689	0.091833	0.0465578	
CPU_Freq[1881600]: 0.203906	0.0986859	0.0500158	
CPU_Freq[1728000]: 0.219526	0.106788	0.0541131	
CPU_Freq[1574400]: 0.238267	0.116514	0.0590448	
CPU_Freq[1420800]: 0.26117	0.128406	0.0650942	
CPU_Freq[1267200]: 0.289794	0.143279	0.0726883	
CPU_Freq[1113600]: 0.326582	0.162411	0.0825035	
CPU_Freq[960000]: 0.375606	0.187934	0.0956759	
CPU_Freq[806400]: 0.44417	0.223682	0.114271	
CPU_Freq[652800]: 0.546823	0.277313	0.142471	
CPU_Freq[499200]: 0.717233	0.366611	0.190169	
CPU_Freq[345600]: 1.05457	0.544261	0.287497	
Memory Frequency: 1331200000: 
Cluster 0: 
CPU_Freq[2035200]: 0.0668512	0.0308324	
CPU_Freq[1881600]: 0.0715596	0.0335345	
CPU_Freq[1728000]: 0.0771303	0.036717	
CPU_Freq[1574400]: 0.0838239	0.0405205	
CPU_Freq[1420800]: 0.0920173	0.0451464	
CPU_Freq[1267200]: 0.102277	0.0508938	
CPU_Freq[1113600]: 0.115497	0.0582265	
CPU_Freq[960000]: 0.13317	0.0679058	
CPU_Freq[806400]: 0.157991	0.0812725	
CPU_Freq[652800]: 0.195369	0.100929	
CPU_Freq[499200]: 0.257951	0.132683	
CPU_Freq[345600]: 0.383588	0.192661	
Cluster 1: 
CPU_Freq[2035200]: 0.193962	0.0924168	0.0473607	
CPU_Freq[1881600]: 0.20709	0.0991984	0.0507723	
CPU_Freq[1728000]: 0.222604	0.107216	0.0548151	
CPU_Freq[1574400]: 0.241221	0.116842	0.0596816	
CPU_Freq[1420800]: 0.263972	0.128612	0.0656515	
CPU_Freq[1267200]: 0.292406	0.143333	0.0731471	
CPU_Freq[1113600]: 0.328954	0.162272	0.0828365	
CPU_Freq[960000]: 0.377659	0.187539	0.095843	
CPU_Freq[806400]: 0.445784	0.222935	0.114209	
CPU_Freq[652800]: 0.547791	0.276047	0.142071	
CPU_Freq[499200]: 0.717157	0.364507	0.189225	
CPU_Freq[345600]: 1.05253	0.540574	0.285525	
Memory Frequency: 1062400000: 
Cluster 0: 
CPU_Freq[2035200]: 0.0683796	0.0308456	
CPU_Freq[1881600]: 0.0730044	0.0335112	
CPU_Freq[1728000]: 0.0784765	0.0366507	
CPU_Freq[1574400]: 0.0850523	0.0404027	
CPU_Freq[1420800]: 0.0931025	0.044966	
CPU_Freq[1267200]: 0.103185	0.0506356	
CPU_Freq[1113600]: 0.116178	0.0578691	
CPU_Freq[960000]: 0.133551	0.0674174	
CPU_Freq[806400]: 0.157958	0.0806032	
CPU_Freq[652800]: 0.194727	0.099994	
CPU_Freq[499200]: 0.256326	0.131318	
CPU_Freq[345600]: 0.380106	0.190484	
Cluster 1: 
CPU_Freq[2035200]: 0.199298	0.0937443	0.0488017	
CPU_Freq[1881600]: 0.212292	0.100419	0.0521436	
CPU_Freq[1728000]: 0.227649	0.10831	0.0561041	
CPU_Freq[1574400]: 0.246078	0.117784	0.0608724	
CPU_Freq[1420800]: 0.2686	0.129371	0.0667228	
CPU_Freq[1267200]: 0.29675	0.143863	0.07407	
CPU_Freq[1113600]: 0.332934	0.162511	0.08357	
CPU_Freq[960000]: 0.38116	0.187393	0.0963264	
CPU_Freq[806400]: 0.448623	0.222258	0.114347	
CPU_Freq[652800]: 0.549657	0.274589	0.141702	
CPU_Freq[499200]: 0.717451	0.361787	0.188035	
CPU_Freq[345600]: 1.04985	0.53547	0.282786	
Memory Frequency: 800000000: 
Cluster 0: 
CPU_Freq[2035200]: 0.0728262	0.0308672	
CPU_Freq[1881600]: 0.077315	0.0334734	
CPU_Freq[1728000]: 0.0826271	0.0365429	
CPU_Freq[1574400]: 0.0890116	0.0402114	
CPU_Freq[1420800]: 0.0968291	0.044673	
CPU_Freq[1267200]: 0.106622	0.0502162	
CPU_Freq[1113600]: 0.119246	0.0572886	
CPU_Freq[960000]: 0.136133	0.0666241	
CPU_Freq[806400]: 0.159867	0.0795161	
CPU_Freq[652800]: 0.195648	0.0984748	
CPU_Freq[499200]: 0.25565	0.1291	
CPU_Freq[345600]: 0.376413	0.186949	
Cluster 1: 
CPU_Freq[2035200]: 0.209011	0.0970491	0.0517366	
CPU_Freq[1881600]: 0.221788	0.103549	0.0549651	
CPU_Freq[1728000]: 0.236889	0.111235	0.0587921	
CPU_Freq[1574400]: 0.255012	0.120464	0.0634007	
CPU_Freq[1420800]: 0.277162	0.131751	0.0690571	
CPU_Freq[1267200]: 0.304849	0.145873	0.0761631	
CPU_Freq[1113600]: 0.340444	0.164047	0.0853554	
CPU_Freq[960000]: 0.387892	0.188305	0.0977057	
CPU_Freq[806400]: 0.45428	0.222307	0.115166	
CPU_Freq[652800]: 0.553733	0.273369	0.141695	
CPU_Freq[499200]: 0.718973	0.358516	0.186697	
CPU_Freq[345600]: 1.04655	0.528328	0.278931	

---------- CPU Power Predictions ---------- 
Memory Frequency: 1866000000: 
Cluster 0: 
CPU_Freq[2035200]: 1.90212	3.13544	
CPU_Freq[1881600]: 1.65055	2.70275	
CPU_Freq[1728000]: 1.42298	2.3106	
CPU_Freq[1574400]: 1.21942	1.95897	
CPU_Freq[1420800]: 1.03986	1.64789	
CPU_Freq[1267200]: 0.884295	1.37733	
CPU_Freq[1113600]: 0.752738	1.14731	
CPU_Freq[960000]: 0.645182	0.957823	
CPU_Freq[806400]: 0.56163	0.80887	
CPU_Freq[652800]: 0.502079	0.70045	
CPU_Freq[499200]: 0.466531	0.632565	
CPU_Freq[345600]: 0.454986	0.605213	
Cluster 1: 
CPU_Freq[2035200]: 1.22766	1.88534	2.61052	
CPU_Freq[1881600]: 1.07817	1.66069	2.2771	
CPU_Freq[1728000]: 0.941867	1.45376	1.97156	
CPU_Freq[1574400]: 0.818745	1.26453	1.6939	
CPU_Freq[1420800]: 0.708805	1.09303	1.4441	
CPU_Freq[1267200]: 0.612047	0.939232	1.22218	
CPU_Freq[1113600]: 0.528472	0.803151	1.02814	
CPU_Freq[960000]: 0.458078	0.684784	0.861964	
CPU_Freq[806400]: 0.400867	0.584131	0.723665	
CPU_Freq[652800]: 0.356837	0.501191	0.61324	
CPU_Freq[499200]: 0.32599	0.435965	0.530688	
CPU_Freq[345600]: 0.308324	0.388452	0.47601	
Memory Frequency: 1600000000: 
Cluster 0: 
CPU_Freq[2035200]: 1.90212	3.13544	
CPU_Freq[1881600]: 1.65055	2.70275	
CPU_Freq[1728000]: 1.42298	2.3106	
CPU_Freq[1574400]: 1.21942	1.95897	
CPU_Freq[1420800]: 1.03986	1.64789	
CPU_Freq[1267200]: 0.884295	1.37733	
CPU_Freq[1113600]: 0.752738	1.14731	
CPU_Freq[960000]: 0.645182	0.957823	
CPU_Freq[806400]: 0.56163	0.80887	
CPU_Freq[652800]: 0.502079	0.70045	
CPU_Freq[499200]: 0.466531	0.632565	
CPU_Freq[345600]: 0.454986	0.605213	
Cluster 1: 
CPU_Freq[2035200]: 1.22766	1.88534	2.61052	
CPU_Freq[1881600]: 1.07817	1.66069	2.2771	
CPU_Freq[1728000]: 0.941867	1.45376	1.97156	
CPU_Freq[1574400]: 0.818745	1.26453	1.6939	
CPU_Freq[1420800]: 0.708805	1.09303	1.4441	
CPU_Freq[1267200]: 0.612047	0.939232	1.22218	
CPU_Freq[1113600]: 0.528472	0.803151	1.02814	
CPU_Freq[960000]: 0.458078	0.684784	0.861964	
CPU_Freq[806400]: 0.400867	0.584131	0.723665	
CPU_Freq[652800]: 0.356837	0.501191	0.61324	
CPU_Freq[499200]: 0.32599	0.435965	0.530688	
CPU_Freq[345600]: 0.308324	0.388452	0.47601	
Memory Frequency: 1331200000: 
Cluster 0: 
CPU_Freq[2035200]: 1.90212	3.13544	
CPU_Freq[1881600]: 1.65055	2.70275	
CPU_Freq[1728000]: 1.42298	2.3106	
CPU_Freq[1574400]: 1.21942	1.95897	
CPU_Freq[1420800]: 1.03986	1.64789	
CPU_Freq[1267200]: 0.884295	1.37733	
CPU_Freq[1113600]: 0.752738	1.14731	
CPU_Freq[960000]: 0.645182	0.957823	
CPU_Freq[806400]: 0.56163	0.80887	
CPU_Freq[652800]: 0.502079	0.70045	
CPU_Freq[499200]: 0.466531	0.632565	
CPU_Freq[345600]: 0.454986	0.605213	
Cluster 1: 
CPU_Freq[2035200]: 1.22766	1.88534	2.61052	
CPU_Freq[1881600]: 1.07817	1.66069	2.2771	
CPU_Freq[1728000]: 0.941867	1.45376	1.97156	
CPU_Freq[1574400]: 0.818745	1.26453	1.6939	
CPU_Freq[1420800]: 0.708805	1.09303	1.4441	
CPU_Freq[1267200]: 0.612047	0.939232	1.22218	
CPU_Freq[1113600]: 0.528472	0.803151	1.02814	
CPU_Freq[960000]: 0.458078	0.684784	0.861964	
CPU_Freq[806400]: 0.400867	0.584131	0.723665	
CPU_Freq[652800]: 0.356837	0.501191	0.61324	
CPU_Freq[499200]: 0.32599	0.435965	0.530688	
CPU_Freq[345600]: 0.308324	0.388452	0.47601	
Memory Frequency: 1062400000: 
Cluster 0: 
CPU_Freq[2035200]: 1.90212	3.13544	
CPU_Freq[1881600]: 1.65055	2.70275	
CPU_Freq[1728000]: 1.42298	2.3106	
CPU_Freq[1574400]: 1.21942	1.95897	
CPU_Freq[1420800]: 1.03986	1.64789	
CPU_Freq[1267200]: 0.884295	1.37733	
CPU_Freq[1113600]: 0.752738	1.14731	
CPU_Freq[960000]: 0.645182	0.957823	
CPU_Freq[806400]: 0.56163	0.80887	
CPU_Freq[652800]: 0.502079	0.70045	
CPU_Freq[499200]: 0.466531	0.632565	
CPU_Freq[345600]: 0.454986	0.605213	
Cluster 1: 
CPU_Freq[2035200]: 1.22766	1.88534	2.61052	
CPU_Freq[1881600]: 1.07817	1.66069	2.2771	
CPU_Freq[1728000]: 0.941867	1.45376	1.97156	
CPU_Freq[1574400]: 0.818745	1.26453	1.6939	
CPU_Freq[1420800]: 0.708805	1.09303	1.4441	
CPU_Freq[1267200]: 0.612047	0.939232	1.22218	
CPU_Freq[1113600]: 0.528472	0.803151	1.02814	
CPU_Freq[960000]: 0.458078	0.684784	0.861964	
CPU_Freq[806400]: 0.400867	0.584131	0.723665	
CPU_Freq[652800]: 0.356837	0.501191	0.61324	
CPU_Freq[499200]: 0.32599	0.435965	0.530688	
CPU_Freq[345600]: 0.308324	0.388452	0.47601	
Memory Frequency: 800000000: 
Cluster 0: 
CPU_Freq[2035200]: 1.90212	3.13544	
CPU_Freq[1881600]: 1.65055	2.70275	
CPU_Freq[1728000]: 1.42298	2.3106	
CPU_Freq[1574400]: 1.21942	1.95897	
CPU_Freq[1420800]: 1.03986	1.64789	
CPU_Freq[1267200]: 0.884295	1.37733	
CPU_Freq[1113600]: 0.752738	1.14731	
CPU_Freq[960000]: 0.645182	0.957823	
CPU_Freq[806400]: 0.56163	0.80887	
CPU_Freq[652800]: 0.502079	0.70045	
CPU_Freq[499200]: 0.466531	0.632565	
CPU_Freq[345600]: 0.454986	0.605213	
Cluster 1: 
CPU_Freq[2035200]: 1.22766	1.88534	2.61052	
CPU_Freq[1881600]: 1.07817	1.66069	2.2771	
CPU_Freq[1728000]: 0.941867	1.45376	1.97156	
CPU_Freq[1574400]: 0.818745	1.26453	1.6939	
CPU_Freq[1420800]: 0.708805	1.09303	1.4441	
CPU_Freq[1267200]: 0.612047	0.939232	1.22218	
CPU_Freq[1113600]: 0.528472	0.803151	1.02814	
CPU_Freq[960000]: 0.458078	0.684784	0.861964	
CPU_Freq[806400]: 0.400867	0.584131	0.723665	
CPU_Freq[652800]: 0.356837	0.501191	0.61324	
CPU_Freq[499200]: 0.32599	0.435965	0.530688	
CPU_Freq[345600]: 0.308324	0.388452	0.47601	

---------- Memory Power Predictions ---------- 
Memory Frequency: 1866000000: 
Cluster 0: 
CPU_Freq[2035200]: 1.24372	1.11309	
CPU_Freq[1881600]: 1.2437	1.12451	
CPU_Freq[1728000]: 1.24085	1.13185	
CPU_Freq[1574400]: 1.23515	1.13512	
CPU_Freq[1420800]: 1.22662	1.1343	
CPU_Freq[1267200]: 1.21524	1.12941	
CPU_Freq[1113600]: 1.20102	1.12044	
CPU_Freq[960000]: 1.18396	1.10738	
CPU_Freq[806400]: 1.16405	1.09025	
CPU_Freq[652800]: 1.14131	1.06904	
CPU_Freq[499200]: 1.11572	1.04375	
CPU_Freq[345600]: 1.0873	1.01438	
Cluster 1: 
CPU_Freq[2035200]: 1.24989	1.13748	1.18792	
CPU_Freq[1881600]: 1.2484	1.14278	1.19054	
CPU_Freq[1728000]: 1.24507	1.14519	1.19128	
CPU_Freq[1574400]: 1.2399	1.14469	1.19012	
CPU_Freq[1420800]: 1.23289	1.14128	1.18708	
CPU_Freq[1267200]: 1.22405	1.13497	1.18214	
CPU_Freq[1113600]: 1.21336	1.12575	1.17532	
CPU_Freq[960000]: 1.20084	1.11364	1.16661	
CPU_Freq[806400]: 1.18648	1.09861	1.15602	
CPU_Freq[652800]: 1.17027	1.08068	1.14353	
CPU_Freq[499200]: 1.15224	1.05985	1.12916	
CPU_Freq[345600]: 1.13236	1.03611	1.11289	
Memory Frequency: 1600000000: 
Cluster 0: 
CPU_Freq[2035200]: 0.858262	0.73183	
CPU_Freq[1881600]: 0.858127	0.744118	
CPU_Freq[1728000]: 0.85515	0.752325	
CPU_Freq[1574400]: 0.849332	0.756454	
CPU_Freq[1420800]: 0.840673	0.756503	
CPU_Freq[1267200]: 0.829172	0.752472	
CPU_Freq[1113600]: 0.81483	0.744362	
CPU_Freq[960000]: 0.797646	0.732172	
CPU_Freq[806400]: 0.777621	0.715903	
CPU_Freq[652800]: 0.754755	0.695555	
CPU_Freq[499200]: 0.729047	0.671127	
CPU_Freq[345600]: 0.700498	0.642619	
Cluster 1: 
CPU_Freq[2035200]: 0.829634	0.731397	0.777509	
CPU_Freq[1881600]: 0.828143	0.736709	0.780126	
CPU_Freq[1728000]: 0.824813	0.739117	0.780854	
CPU_Freq[1574400]: 0.819645	0.73862	0.779694	
CPU_Freq[1420800]: 0.812637	0.735219	0.776645	
CPU_Freq[1267200]: 0.803791	0.728913	0.771708	
CPU_Freq[1113600]: 0.793106	0.719702	0.764883	
CPU_Freq[960000]: 0.780583	0.707587	0.75617	
CPU_Freq[806400]: 0.766221	0.692568	0.745568	
CPU_Freq[652800]: 0.750019	0.674644	0.733077	
CPU_Freq[499200]: 0.73198	0.653815	0.718698	
CPU_Freq[345600]: 0.712101	0.630082	0.702431	
Memory Frequency: 1331200000: 
Cluster 0: 
CPU_Freq[2035200]: 0.583852	0.452034	
CPU_Freq[1881600]: 0.583594	0.465194	
CPU_Freq[1728000]: 0.580494	0.474274	
CPU_Freq[1574400]: 0.574552	0.479275	
CPU_Freq[1420800]: 0.565769	0.480197	
CPU_Freq[1267200]: 0.554145	0.477039	
CPU_Freq[1113600]: 0.539679	0.469802	
CPU_Freq[960000]: 0.522372	0.458485	
CPU_Freq[806400]: 0.502224	0.443089	
CPU_Freq[652800]: 0.479234	0.423613	
CPU_Freq[499200]: 0.453403	0.400058	
CPU_Freq[345600]: 0.424731	0.372424	
Cluster 1: 
CPU_Freq[2035200]: 0.539527	0.445536	0.490015	
CPU_Freq[1881600]: 0.538035	0.450852	0.492627	
CPU_Freq[1728000]: 0.534706	0.453264	0.49335	
CPU_Freq[1574400]: 0.529537	0.452772	0.492186	
CPU_Freq[1420800]: 0.52253	0.449375	0.489132	
CPU_Freq[1267200]: 0.513684	0.443073	0.484191	
CPU_Freq[1113600]: 0.502999	0.433867	0.477361	
CPU_Freq[960000]: 0.490476	0.421757	0.468643	
CPU_Freq[806400]: 0.476113	0.406742	0.458036	
CPU_Freq[652800]: 0.459912	0.388822	0.445541	
CPU_Freq[499200]: 0.441873	0.367998	0.431158	
CPU_Freq[345600]: 0.421994	0.344269	0.414886	
Memory Frequency: 1062400000: 
Cluster 0: 
CPU_Freq[2035200]: 0.425148	0.278262	
CPU_Freq[1881600]: 0.424765	0.292295	
CPU_Freq[1728000]: 0.421542	0.302248	
CPU_Freq[1574400]: 0.415477	0.308122	
CPU_Freq[1420800]: 0.406571	0.309917	
CPU_Freq[1267200]: 0.394823	0.307632	
CPU_Freq[1113600]: 0.380234	0.301267	
CPU_Freq[960000]: 0.362804	0.290823	
CPU_Freq[806400]: 0.342532	0.2763	
CPU_Freq[652800]: 0.319419	0.257697	
CPU_Freq[499200]: 0.293464	0.235015	
CPU_Freq[345600]: 0.264668	0.208253	
Cluster 1: 
CPU_Freq[2035200]: 0.384695	0.284818	0.330425	
CPU_Freq[1881600]: 0.383204	0.290139	0.333033	
CPU_Freq[1728000]: 0.379875	0.292556	0.333752	
CPU_Freq[1574400]: 0.374706	0.292068	0.332582	
CPU_Freq[1420800]: 0.367699	0.288675	0.329525	
CPU_Freq[1267200]: 0.358853	0.282378	0.324578	
CPU_Freq[1113600]: 0.348168	0.273176	0.317744	
CPU_Freq[960000]: 0.335645	0.26107	0.309021	
CPU_Freq[806400]: 0.321282	0.24606	0.29841	
CPU_Freq[652800]: 0.305081	0.228145	0.28591	
CPU_Freq[499200]: 0.287041	0.207325	0.271522	
CPU_Freq[345600]: 0.267163	0.183601	0.255246	
Memory Frequency: 800000000: 
Cluster 0: 
CPU_Freq[2035200]: 0.381827	0.210897	
CPU_Freq[1881600]: 0.381325	0.225782	
CPU_Freq[1728000]: 0.377981	0.236587	
CPU_Freq[1574400]: 0.371795	0.243313	
CPU_Freq[1420800]: 0.362768	0.245959	
CPU_Freq[1267200]: 0.3509	0.244526	
CPU_Freq[1113600]: 0.336191	0.239014	
CPU_Freq[960000]: 0.31864	0.229422	
CPU_Freq[806400]: 0.298247	0.215751	
CPU_Freq[652800]: 0.275014	0.198	
CPU_Freq[499200]: 0.248939	0.17617	
CPU_Freq[345600]: 0.220022	0.15026	
Cluster 1: 
CPU_Freq[2035200]: 0.364034	0.248637	0.298009	
CPU_Freq[1881600]: 0.362543	0.253962	0.300612	
CPU_Freq[1728000]: 0.359213	0.256383	0.301326	
CPU_Freq[1574400]: 0.354045	0.2559	0.300152	
CPU_Freq[1420800]: 0.347038	0.252512	0.29709	
CPU_Freq[1267200]: 0.338192	0.246219	0.292139	
CPU_Freq[1113600]: 0.327507	0.237022	0.2853	
CPU_Freq[960000]: 0.314983	0.22492	0.276573	
CPU_Freq[806400]: 0.300621	0.209914	0.265957	
CPU_Freq[652800]: 0.28442	0.192003	0.253453	
CPU_Freq[499200]: 0.26638	0.171187	0.239061	
CPU_Freq[345600]: 0.246502	0.147468	0.22278	

[Congratulations!] All the training Phase finished. Training finished time: 1687719532814. Set the CPU frequency of all clusters back to the highest frequency
[DEBUG] The best resource width for MM tasks on cluster 1 and 2 are <2> and <4>
[DEBUG] Using <2> cores in cluster 1 and <4> cores in cluster 2 achieves the lowest predicted EDP.
[DEBUG] For MM tasks, 58.6566% of tasks should be scheduled to cluster 0
[DEBUG] For MM tasks, 41.3434% of tasks should be scheduled to cluster 1
[DEBUG] The best resource width for MM tasks on cluster 1 and 2 are <2> and <4>
[DEBUG] Using <2> cores in cluster 1 and <4> cores in cluster 2 achieves the lowest predicted EDP.
[DEBUG] For MM tasks, 58.9849% of tasks should be scheduled to cluster 0
[DEBUG] For MM tasks, 41.0151% of tasks should be scheduled to cluster 1
[DEBUG] The best resource width for MM tasks on cluster 1 and 2 are <2> and <4>
[DEBUG] Using <2> cores in cluster 1 and <4> cores in cluster 2 achieves the lowest predicted EDP.
[DEBUG] For MM tasks, 58.8561% of tasks should be scheduled to cluster 0
[DEBUG] For MM tasks, 41.144% of tasks should be scheduled to cluster 1
[DEBUG] The best resource width for MM tasks on cluster 1 and 2 are <2> and <4>
[DEBUG] Using <2> cores in cluster 1 and <4> cores in cluster 2 achieves the lowest predicted EDP.
[DEBUG] For MM tasks, 58.6567% of tasks should be scheduled to cluster 0
[DEBUG] For MM tasks, 41.3433% of tasks should be scheduled to cluster 1
[DEBUG] The best resource width for MM tasks on cluster 1 and 2 are <2> and <4>
[DEBUG] Using <2> cores in cluster 1 and <4> cores in cluster 2 achieves the lowest predicted EDP.
[DEBUG] For MM tasks, 58.8679% of tasks should be scheduled to cluster 0
[DEBUG] For MM tasks, 41.1321% of tasks should be scheduled to cluster 1
[DEBUG] The best resource width for MM tasks on cluster 1 and 2 are <2> and <4>
[DEBUG] Using <2> cores in cluster 1 and <4> cores in cluster 2 achieves the lowest predicted EDP.
[DEBUG] For MM tasks, 58.8529% of tasks should be scheduled to cluster 0
[DEBUG] For MM tasks, 41.1471% of tasks should be scheduled to cluster 1
[DEBUG] The best resource width for MM tasks on cluster 1 and 2 are <1> and <4>
[DEBUG] Using <2> cores in cluster 1 and <4> cores in cluster 2 achieves the lowest predicted EDP.
[DEBUG] For MM tasks, 58.698% of tasks should be scheduled to cluster 0
[DEBUG] For MM tasks, 41.302% of tasks should be scheduled to cluster 1
[DEBUG] The best resource width for MM tasks on cluster 1 and 2 are <1> and <4>
[DEBUG] Using <2> cores in cluster 1 and <4> cores in cluster 2 achieves the lowest predicted EDP.
[DEBUG] For MM tasks, 58.7701% of tasks should be scheduled to cluster 0
[DEBUG] For MM tasks, 41.2299% of tasks should be scheduled to cluster 1
[DEBUG] The best resource width for MM tasks on cluster 1 and 2 are <1> and <2>
[DEBUG] Using <2> cores in cluster 1 and <4> cores in cluster 2 achieves the lowest predicted EDP.
[DEBUG] For MM tasks, 58.4967% of tasks should be scheduled to cluster 0
[DEBUG] For MM tasks, 41.5033% of tasks should be scheduled to cluster 1
[DEBUG] The best resource width for MM tasks on cluster 1 and 2 are <1> and <2>
[DEBUG] Using <2> cores in cluster 1 and <4> cores in cluster 2 achieves the lowest predicted EDP.
[DEBUG] For MM tasks, 58.3026% of tasks should be scheduled to cluster 0
[DEBUG] For MM tasks, 41.6974% of tasks should be scheduled to cluster 1
[DEBUG] The best resource width for MM tasks on cluster 1 and 2 are <1> and <2>
[DEBUG] Using <2> cores in cluster 1 and <4> cores in cluster 2 achieves the lowest predicted EDP.
[DEBUG] For MM tasks, 58.3135% of tasks should be scheduled to cluster 0
[DEBUG] For MM tasks, 41.6865% of tasks should be scheduled to cluster 1
[DEBUG] The best resource width for MM tasks on cluster 1 and 2 are <1> and <2>
[DEBUG] Using <2> cores in cluster 1 and <4> cores in cluster 2 achieves the lowest predicted EDP.
[DEBUG] For MM tasks, 58.2671% of tasks should be scheduled to cluster 0
[DEBUG] For MM tasks, 41.7329% of tasks should be scheduled to cluster 1
[DEBUG] The best resource width for MM tasks on cluster 1 and 2 are <1> and <2>
[DEBUG] Using <2> cores in cluster 1 and <4> cores in cluster 2 achieves the lowest predicted EDP.
[DEBUG] For MM tasks, 58.4723% of tasks should be scheduled to cluster 0
[DEBUG] For MM tasks, 41.5277% of tasks should be scheduled to cluster 1
[DEBUG] The best resource width for MM tasks on cluster 1 and 2 are <1> and <2>
[DEBUG] Using <2> cores in cluster 1 and <4> cores in cluster 2 achieves the lowest predicted EDP.
[DEBUG] For MM tasks, 58.3118% of tasks should be scheduled to cluster 0
[DEBUG] For MM tasks, 41.6882% of tasks should be scheduled to cluster 1
[DEBUG] The best resource width for MM tasks on cluster 1 and 2 are <1> and <2>
[DEBUG] Using <2> cores in cluster 1 and <4> cores in cluster 2 achieves the lowest predicted EDP.
[DEBUG] For MM tasks, 58.4053% of tasks should be scheduled to cluster 0
[DEBUG] For MM tasks, 41.5947% of tasks should be scheduled to cluster 1
[DEBUG] The best resource width for MM tasks on cluster 1 and 2 are <1> and <2>
[DEBUG] Using <2> cores in cluster 1 and <4> cores in cluster 2 achieves the lowest predicted EDP.
[DEBUG] For MM tasks, 58.4585% of tasks should be scheduled to cluster 0
[DEBUG] For MM tasks, 41.5415% of tasks should be scheduled to cluster 1
[DEBUG] The best resource width for MM tasks on cluster 1 and 2 are <1> and <2>
[DEBUG] Using <2> cores in cluster 1 and <4> cores in cluster 2 achieves the lowest predicted EDP.
[DEBUG] For MM tasks, 58.255% of tasks should be scheduled to cluster 0
[DEBUG] For MM tasks, 41.745% of tasks should be scheduled to cluster 1
[DEBUG] The best resource width for MM tasks on cluster 1 and 2 are <1> and <2>
[DEBUG] Using <2> cores in cluster 1 and <4> cores in cluster 2 achieves the lowest predicted EDP.
[DEBUG] For MM tasks, 58.5289% of tasks should be scheduled to cluster 0
[DEBUG] For MM tasks, 41.4711% of tasks should be scheduled to cluster 1
[DEBUG] The best resource width for MM tasks on cluster 1 and 2 are <1> and <2>
[DEBUG] Using <2> cores in cluster 1 and <4> cores in cluster 2 achieves the lowest predicted EDP.
[DEBUG] For MM tasks, 58.3145% of tasks should be scheduled to cluster 0
[DEBUG] For MM tasks, 41.6855% of tasks should be scheduled to cluster 1
[DEBUG] The best resource width for MM tasks on cluster 1 and 2 are <1> and <2>
[DEBUG] Using <2> cores in cluster 1 and <4> cores in cluster 2 achieves the lowest predicted EDP.
[DEBUG] For MM tasks, 58.2773% of tasks should be scheduled to cluster 0
[DEBUG] For MM tasks, 41.7227% of tasks should be scheduled to cluster 1
[DEBUG] The best resource width for MM tasks on cluster 1 and 2 are <1> and <2>
[DEBUG] Using <2> cores in cluster 1 and <4> cores in cluster 2 achieves the lowest predicted EDP.
[DEBUG] For MM tasks, 58.3391% of tasks should be scheduled to cluster 0
[DEBUG] For MM tasks, 41.6609% of tasks should be scheduled to cluster 1
[DEBUG] The best resource width for MM tasks on cluster 1 and 2 are <1> and <2>
[DEBUG] Using <2> cores in cluster 1 and <4> cores in cluster 2 achieves the lowest predicted EDP.
[DEBUG] For MM tasks, 58.4218% of tasks should be scheduled to cluster 0
[DEBUG] For MM tasks, 41.5781% of tasks should be scheduled to cluster 1
[DEBUG] The best resource width for MM tasks on cluster 1 and 2 are <1> and <2>
[DEBUG] Using <2> cores in cluster 1 and <4> cores in cluster 2 achieves the lowest predicted EDP.
[DEBUG] For MM tasks, 58.578% of tasks should be scheduled to cluster 0
[DEBUG] For MM tasks, 41.422% of tasks should be scheduled to cluster 1
[DEBUG] The best resource width for MM tasks on cluster 1 and 2 are <1> and <2>
[DEBUG] Using <2> cores in cluster 1 and <4> cores in cluster 2 achieves the lowest predicted EDP.
[DEBUG] For MM tasks, 58.7779% of tasks should be scheduled to cluster 0
[DEBUG] For MM tasks, 41.2221% of tasks should be scheduled to cluster 1
[DEBUG] The best resource width for MM tasks on cluster 1 and 2 are <1> and <2>
[DEBUG] Using <2> cores in cluster 1 and <4> cores in cluster 2 achieves the lowest predicted EDP.
[DEBUG] For MM tasks, 58.5657% of tasks should be scheduled to cluster 0
[DEBUG] For MM tasks, 41.4343% of tasks should be scheduled to cluster 1
[DEBUG] The best resource width for MM tasks on cluster 1 and 2 are <1> and <2>
[DEBUG] Using <2> cores in cluster 1 and <4> cores in cluster 2 achieves the lowest predicted EDP.
[DEBUG] For MM tasks, 58.3315% of tasks should be scheduled to cluster 0
[DEBUG] For MM tasks, 41.6685% of tasks should be scheduled to cluster 1
[DEBUG] The best resource width for MM tasks on cluster 1 and 2 are <1> and <2>
[DEBUG] Using <2> cores in cluster 1 and <4> cores in cluster 2 achieves the lowest predicted EDP.
[DEBUG] For MM tasks, 58.5148% of tasks should be scheduled to cluster 0
[DEBUG] For MM tasks, 41.4852% of tasks should be scheduled to cluster 1
[DEBUG] The best resource width for MM tasks on cluster 1 and 2 are <1> and <2>
[DEBUG] Using <2> cores in cluster 1 and <4> cores in cluster 2 achieves the lowest predicted EDP.
[DEBUG] For MM tasks, 58.2487% of tasks should be scheduled to cluster 0
[DEBUG] For MM tasks, 41.7513% of tasks should be scheduled to cluster 1
[DEBUG] The best resource width for MM tasks on cluster 1 and 2 are <1> and <2>
[DEBUG] Using <2> cores in cluster 1 and <4> cores in cluster 2 achieves the lowest predicted EDP.
[DEBUG] For MM tasks, 58.2155% of tasks should be scheduled to cluster 0
[DEBUG] For MM tasks, 41.7846% of tasks should be scheduled to cluster 1
[DEBUG] The best resource width for MM tasks on cluster 1 and 2 are <1> and <2>
[DEBUG] Using <2> cores in cluster 1 and <4> cores in cluster 2 achieves the lowest predicted EDP.
[DEBUG] For MM tasks, 58.5175% of tasks should be scheduled to cluster 0
[DEBUG] For MM tasks, 41.4825% of tasks should be scheduled to cluster 1
[DEBUG] The best resource width for MM tasks on cluster 1 and 2 are <1> and <2>
[DEBUG] Using <2> cores in cluster 1 and <4> cores in cluster 2 achieves the lowest predicted EDP.
[DEBUG] For MM tasks, 58.1404% of tasks should be scheduled to cluster 0
[DEBUG] For MM tasks, 41.8596% of tasks should be scheduled to cluster 1
[DEBUG] The best resource width for MM tasks on cluster 1 and 2 are <1> and <2>
[DEBUG] Using <2> cores in cluster 1 and <4> cores in cluster 2 achieves the lowest predicted EDP.
[DEBUG] For MM tasks, 58.4937% of tasks should be scheduled to cluster 0
[DEBUG] For MM tasks, 41.5063% of tasks should be scheduled to cluster 1
[DEBUG] The best resource width for MM tasks on cluster 1 and 2 are <1> and <2>
[DEBUG] Using <2> cores in cluster 1 and <4> cores in cluster 2 achieves the lowest predicted EDP.
[DEBUG] For MM tasks, 58.4864% of tasks should be scheduled to cluster 0
[DEBUG] For MM tasks, 41.5136% of tasks should be scheduled to cluster 1
[DEBUG] The best resource width for MM tasks on cluster 1 and 2 are <1> and <2>
[DEBUG] Using <2> cores in cluster 1 and <4> cores in cluster 2 achieves the lowest predicted EDP.
[DEBUG] For MM tasks, 58.2723% of tasks should be scheduled to cluster 0
[DEBUG] For MM tasks, 41.7277% of tasks should be scheduled to cluster 1
[DEBUG] The best resource width for MM tasks on cluster 1 and 2 are <1> and <2>
[DEBUG] Using <2> cores in cluster 1 and <4> cores in cluster 2 achieves the lowest predicted EDP.
[DEBUG] For MM tasks, 58.4937% of tasks should be scheduled to cluster 0
[DEBUG] For MM tasks, 41.5063% of tasks should be scheduled to cluster 1
[DEBUG] The best resource width for MM tasks on cluster 1 and 2 are <1> and <2>
[DEBUG] Using <2> cores in cluster 1 and <4> cores in cluster 2 achieves the lowest predicted EDP.
[DEBUG] For MM tasks, 58.2586% of tasks should be scheduled to cluster 0
[DEBUG] For MM tasks, 41.7414% of tasks should be scheduled to cluster 1
[DEBUG] The best resource width for MM tasks on cluster 1 and 2 are <1> and <2>
[DEBUG] Using <2> cores in cluster 1 and <4> cores in cluster 2 achieves the lowest predicted EDP.
[DEBUG] For MM tasks, 58.3241% of tasks should be scheduled to cluster 0
[DEBUG] For MM tasks, 41.676% of tasks should be scheduled to cluster 1
[DEBUG] The best resource width for MM tasks on cluster 1 and 2 are <1> and <2>
[DEBUG] Using <2> cores in cluster 1 and <4> cores in cluster 2 achieves the lowest predicted EDP.
[DEBUG] For MM tasks, 58.2923% of tasks should be scheduled to cluster 0
[DEBUG] For MM tasks, 41.7077% of tasks should be scheduled to cluster 1
[DEBUG] The best resource width for MM tasks on cluster 1 and 2 are <1> and <2>
[DEBUG] Using <2> cores in cluster 1 and <4> cores in cluster 2 achieves the lowest predicted EDP.
[DEBUG] For MM tasks, 58.5084% of tasks should be scheduled to cluster 0
[DEBUG] For MM tasks, 41.4916% of tasks should be scheduled to cluster 1
[DEBUG] The best resource width for MM tasks on cluster 1 and 2 are <1> and <2>
[DEBUG] Using <2> cores in cluster 1 and <4> cores in cluster 2 achieves the lowest predicted EDP.
[DEBUG] For MM tasks, 58.5424% of tasks should be scheduled to cluster 0
[DEBUG] For MM tasks, 41.4576% of tasks should be scheduled to cluster 1
[DEBUG] The best resource width for MM tasks on cluster 1 and 2 are <1> and <2>
[DEBUG] Using <2> cores in cluster 1 and <4> cores in cluster 2 achieves the lowest predicted EDP.
[DEBUG] For MM tasks, 58.5739% of tasks should be scheduled to cluster 0
[DEBUG] For MM tasks, 41.4261% of tasks should be scheduled to cluster 1
[DEBUG] The best resource width for MM tasks on cluster 1 and 2 are <1> and <2>
[DEBUG] Using <2> cores in cluster 1 and <4> cores in cluster 2 achieves the lowest predicted EDP.
[DEBUG] For MM tasks, 58.3248% of tasks should be scheduled to cluster 0
[DEBUG] For MM tasks, 41.6752% of tasks should be scheduled to cluster 1
[DEBUG] The best resource width for MM tasks on cluster 1 and 2 are <1> and <2>
[DEBUG] Using <2> cores in cluster 1 and <4> cores in cluster 2 achieves the lowest predicted EDP.
[DEBUG] For MM tasks, 58.2808% of tasks should be scheduled to cluster 0
[DEBUG] For MM tasks, 41.7192% of tasks should be scheduled to cluster 1
[DEBUG] The best resource width for MM tasks on cluster 1 and 2 are <1> and <2>
[DEBUG] Using <2> cores in cluster 1 and <4> cores in cluster 2 achieves the lowest predicted EDP.
[DEBUG] For MM tasks, 58.0739% of tasks should be scheduled to cluster 0
[DEBUG] For MM tasks, 41.9261% of tasks should be scheduled to cluster 1
[DEBUG] The best resource width for MM tasks on cluster 1 and 2 are <1> and <2>
[DEBUG] Using <2> cores in cluster 1 and <4> cores in cluster 2 achieves the lowest predicted EDP.
[DEBUG] For MM tasks, 58.2551% of tasks should be scheduled to cluster 0
[DEBUG] For MM tasks, 41.7449% of tasks should be scheduled to cluster 1
[DEBUG] The best resource width for MM tasks on cluster 1 and 2 are <1> and <2>
[DEBUG] Using <2> cores in cluster 1 and <4> cores in cluster 2 achieves the lowest predicted EDP.
[DEBUG] For MM tasks, 58.369% of tasks should be scheduled to cluster 0
[DEBUG] For MM tasks, 41.631% of tasks should be scheduled to cluster 1
[DEBUG] The best resource width for MM tasks on cluster 1 and 2 are <1> and <2>
[DEBUG] Using <2> cores in cluster 1 and <4> cores in cluster 2 achieves the lowest predicted EDP.
[DEBUG] For MM tasks, 58.4265% of tasks should be scheduled to cluster 0
[DEBUG] For MM tasks, 41.5735% of tasks should be scheduled to cluster 1
[DEBUG] The best resource width for MM tasks on cluster 1 and 2 are <1> and <2>
[DEBUG] Using <2> cores in cluster 1 and <4> cores in cluster 2 achieves the lowest predicted EDP.
[DEBUG] For MM tasks, 58.5726% of tasks should be scheduled to cluster 0
[DEBUG] For MM tasks, 41.4274% of tasks should be scheduled to cluster 1
[DEBUG] The best resource width for MM tasks on cluster 1 and 2 are <1> and <2>
[DEBUG] Using <2> cores in cluster 1 and <4> cores in cluster 2 achieves the lowest predicted EDP.
[DEBUG] For MM tasks, 58.4809% of tasks should be scheduled to cluster 0
[DEBUG] For MM tasks, 41.5191% of tasks should be scheduled to cluster 1
[DEBUG] The best resource width for MM tasks on cluster 1 and 2 are <1> and <2>
[DEBUG] Using <2> cores in cluster 1 and <4> cores in cluster 2 achieves the lowest predicted EDP.
[DEBUG] For MM tasks, 58.4852% of tasks should be scheduled to cluster 0
[DEBUG] For MM tasks, 41.5148% of tasks should be scheduled to cluster 1
[DEBUG] The best resource width for MM tasks on cluster 1 and 2 are <1> and <2>
[DEBUG] Using <2> cores in cluster 1 and <4> cores in cluster 2 achieves the lowest predicted EDP.
[DEBUG] For MM tasks, 58.5292% of tasks should be scheduled to cluster 0
[DEBUG] For MM tasks, 41.4708% of tasks should be scheduled to cluster 1
[DEBUG] The best resource width for MM tasks on cluster 1 and 2 are <1> and <2>
[DEBUG] Using <2> cores in cluster 1 and <4> cores in cluster 2 achieves the lowest predicted EDP.
[DEBUG] For MM tasks, 58.2799% of tasks should be scheduled to cluster 0
[DEBUG] For MM tasks, 41.7201% of tasks should be scheduled to cluster 1
[DEBUG] The best resource width for MM tasks on cluster 1 and 2 are <1> and <2>
[DEBUG] Using <2> cores in cluster 1 and <4> cores in cluster 2 achieves the lowest predicted EDP.
[DEBUG] For MM tasks, 58.6207% of tasks should be scheduled to cluster 0
[DEBUG] For MM tasks, 41.3793% of tasks should be scheduled to cluster 1
[DEBUG] The best resource width for MM tasks on cluster 1 and 2 are <1> and <2>
[DEBUG] Using <2> cores in cluster 1 and <4> cores in cluster 2 achieves the lowest predicted EDP.
[DEBUG] For MM tasks, 58.2049% of tasks should be scheduled to cluster 0
[DEBUG] For MM tasks, 41.7951% of tasks should be scheduled to cluster 1
[DEBUG] The best resource width for MM tasks on cluster 1 and 2 are <1> and <2>
[DEBUG] Using <2> cores in cluster 1 and <4> cores in cluster 2 achieves the lowest predicted EDP.
[DEBUG] For MM tasks, 58.2798% of tasks should be scheduled to cluster 0
[DEBUG] For MM tasks, 41.7202% of tasks should be scheduled to cluster 1
[DEBUG] The best resource width for MM tasks on cluster 1 and 2 are <1> and <2>
[DEBUG] Using <2> cores in cluster 1 and <4> cores in cluster 2 achieves the lowest predicted EDP.
[DEBUG] For MM tasks, 58.5078% of tasks should be scheduled to cluster 0
[DEBUG] For MM tasks, 41.4922% of tasks should be scheduled to cluster 1
[DEBUG] The best resource width for MM tasks on cluster 1 and 2 are <1> and <2>
[DEBUG] Using <2> cores in cluster 1 and <4> cores in cluster 2 achieves the lowest predicted EDP.
[DEBUG] For MM tasks, 58.0568% of tasks should be scheduled to cluster 0
[DEBUG] For MM tasks, 41.9432% of tasks should be scheduled to cluster 1
[DEBUG] The best resource width for MM tasks on cluster 1 and 2 are <1> and <2>
[DEBUG] Using <2> cores in cluster 1 and <4> cores in cluster 2 achieves the lowest predicted EDP.
[DEBUG] For MM tasks, 58.243% of tasks should be scheduled to cluster 0
[DEBUG] For MM tasks, 41.757% of tasks should be scheduled to cluster 1
[DEBUG] The best resource width for MM tasks on cluster 1 and 2 are <1> and <2>
[DEBUG] Using <2> cores in cluster 1 and <4> cores in cluster 2 achieves the lowest predicted EDP.
[DEBUG] For MM tasks, 58.5932% of tasks should be scheduled to cluster 0
[DEBUG] For MM tasks, 41.4068% of tasks should be scheduled to cluster 1
[DEBUG] The best resource width for MM tasks on cluster 1 and 2 are <1> and <2>
[DEBUG] Using <2> cores in cluster 1 and <4> cores in cluster 2 achieves the lowest predicted EDP.
[DEBUG] For MM tasks, 58.4555% of tasks should be scheduled to cluster 0
[DEBUG] For MM tasks, 41.5445% of tasks should be scheduled to cluster 1
[DEBUG] The best resource width for MM tasks on cluster 1 and 2 are <1> and <2>
[DEBUG] Using <2> cores in cluster 1 and <4> cores in cluster 2 achieves the lowest predicted EDP.
[DEBUG] For MM tasks, 58.5494% of tasks should be scheduled to cluster 0
[DEBUG] For MM tasks, 41.4506% of tasks should be scheduled to cluster 1
[DEBUG] The best resource width for MM tasks on cluster 1 and 2 are <1> and <2>
[DEBUG] Using <2> cores in cluster 1 and <4> cores in cluster 2 achieves the lowest predicted EDP.
[DEBUG] For MM tasks, 58.4286% of tasks should be scheduled to cluster 0
[DEBUG] For MM tasks, 41.5714% of tasks should be scheduled to cluster 1
[DEBUG] The best resource width for MM tasks on cluster 1 and 2 are <1> and <2>
[DEBUG] Using <2> cores in cluster 1 and <4> cores in cluster 2 achieves the lowest predicted EDP.
[DEBUG] For MM tasks, 58.5199% of tasks should be scheduled to cluster 0
[DEBUG] For MM tasks, 41.4801% of tasks should be scheduled to cluster 1
[DEBUG] The best resource width for MM tasks on cluster 1 and 2 are <1> and <2>
[DEBUG] Using <2> cores in cluster 1 and <4> cores in cluster 2 achieves the lowest predicted EDP.
[DEBUG] For MM tasks, 58.517% of tasks should be scheduled to cluster 0
[DEBUG] For MM tasks, 41.483% of tasks should be scheduled to cluster 1
[DEBUG] The best resource width for MM tasks on cluster 1 and 2 are <1> and <2>
[DEBUG] Using <2> cores in cluster 1 and <4> cores in cluster 2 achieves the lowest predicted EDP.
[DEBUG] For MM tasks, 58.4641% of tasks should be scheduled to cluster 0
[DEBUG] For MM tasks, 41.5359% of tasks should be scheduled to cluster 1
Thread 5 sleeps for 136024 ms. 
Task type: 0: Thread 5 with width 1 completes 0 tasks.
Task type: 0: Thread 5 with width 2 completes 1257 tasks.
Task type: 0: Thread 5 with width 4 completes 333 tasks.
Task type: 1: Thread 5 with width 1 completes 0 tasks.
Task type: 1: Thread 5 with width 2 completes 0 tasks.
Task type: 1: Thread 5 with width 4 completes 0 tasks.
Task type: 2: Thread 5 with width 1 completes 0 tasks.
Task type: 2: Thread 5 with width 2 completes 0 tasks.
Task type: 2: Thread 5 with width 4 completes 0 tasks.
Task type: 3: Thread 5 with width 1 completes 0 tasks.
Task type: 3: Thread 5 with width 2 completes 0 tasks.
Task type: 3: Thread 5 with width 4 completes 0 tasks.
Task type: 4: Thread 5 with width 1 completes 0 tasks.
Task type: 4: Thread 5 with width 2 completes 0 tasks.
Task type: 4: Thread 5 with width 4 completes 0 tasks.
Task type: 5: Thread 5 with width 1 completes 0 tasks.
Task type: 5: Thread 5 with width 2 completes 0 tasks.
Task type: 5: Thread 5 with width 4 completes 0 tasks.
The total execution time of thread 5 is 127.505 s.
Thread 4 sleeps for 135522 ms. 
Task type: 0: Thread 4 with width 1 completes 2 tasks.
Task type: 0: Thread 4 with width 2 completes 1257 tasks.
Task type: 0: Thread 4 with width 4 completes 333 tasks.
Task type: 1: Thread 4 with width 1 completes 0 tasks.
Task type: 1: Thread 4 with width 2 completes 0 tasks.
Task type: 1: Thread 4 with width 4 completes 0 tasks.
Task type: 2: Thread 4 with width 1 completes 0 tasks.
Task type: 2: Thread 4 with width 2 completes 0 tasks.
Task type: 2: Thread 4 with width 4 completes 0 tasks.
Task type: 3: Thread 4 with width 1 completes 0 tasks.
Task type: 3: Thread 4 with width 2 completes 0 tasks.
Task type: 3: Thread 4 with width 4 completes 0 tasks.
Task type: 4: Thread 4 with width 1 completes 0 tasks.
Task type: 4: Thread 4 with width 2 completes 0 tasks.
Task type: 4: Thread 4 with width 4 completes 0 tasks.
Task type: 5: Thread 4 with width 1 completes 0 tasks.
Task type: 5: Thread 4 with width 2 completes 0 tasks.
Task type: 5: Thread 4 with width 4 completes 0 tasks.
The total execution time of thread 4 is 127.945 s.
Thread 1 sleeps for 25888 ms. 
Task type: 0: Thread 1 with width 1 completes 3350 tasks.
Task type: 0: Thread 1 with width 2 completes 751 tasks.
Task type: 0: Thread 1 with width 4 completes 0 tasks.
Task type: 1: Thread 1 with width 1 completes 0 tasks.
Task type: 1: Thread 1 with width 2 completes 0 tasks.
Task type: 1: Thread 1 with width 4 completes 0 tasks.
Task type: 2: Thread 1 with width 1 completes 0 tasks.
Task type: 2: Thread 1 with width 2 completes 0 tasks.
Task type: 2: Thread 1 with width 4 completes 0 tasks.
Task type: 3: Thread 1 with width 1 completes 0 tasks.
Task type: 3: Thread 1 with width 2 completes 0 tasks.
Task type: 3: Thread 1 with width 4 completes 0 tasks.
Task type: 4: Thread 1 with width 1 completes 0 tasks.
Task type: 4: Thread 1 with width 2 completes 0 tasks.
Task type: 4: Thread 1 with width 4 completes 0 tasks.
Task type: 5: Thread 1 with width 1 completes 0 tasks.
Task type: 5: Thread 1 with width 2 completes 0 tasks.
Task type: 5: Thread 1 with width 4 completes 0 tasks.
The total execution time of thread 1 is 238.072 s.
Thread 0 sleeps for 23286 ms. 
Task type: 0: Thread 0 with width 1 completes 3386 tasks.
Task type: 0: Thread 0 with width 2 completes 751 tasks.
Task type: 0: Thread 0 with width 4 completes 0 tasks.
Task type: 1: Thread 0 with width 1 completes 0 tasks.
Task type: 1: Thread 0 with width 2 completes 0 tasks.
Task type: 1: Thread 0 with width 4 completes 0 tasks.
Task type: 2: Thread 0 with width 1 completes 0 tasks.
Task type: 2: Thread 0 with width 2 completes 0 tasks.
Task type: 2: Thread 0 with width 4 completes 0 tasks.
Task type: 3: Thread 0 with width 1 completes 0 tasks.
Task type: 3: Thread 0 with width 2 completes 0 tasks.
Task type: 3: Thread 0 with width 4 completes 0 tasks.
Task type: 4: Thread 0 with width 1 completes 0 tasks.
Task type: 4: Thread 0 with width 2 completes 0 tasks.
Task type: 4: Thread 0 with width 4 completes 0 tasks.
Task type: 5: Thread 0 with width 1 completes 0 tasks.
Task type: 5: Thread 0 with width 2 completes 0 tasks.
Task type: 5: Thread 0 with width 4 completes 0 tasks.
The total execution time of thread 0 is 240.73 s.
Thread 3 sleeps for 166220 ms. 
Task type: 0: Thread 3 with width 1 completes 1 tasks.
Task type: 0: Thread 3 with width 2 completes 917 tasks.
Task type: 0: Thread 3 with width 4 completes 333 tasks.
Task type: 1: Thread 3 with width 1 completes 0 tasks.
Task type: 1: Thread 3 with width 2 completes 0 tasks.
Task type: 1: Thread 3 with width 4 completes 0 tasks.
Task type: 2: Thread 3 with width 1 completes 0 tasks.
Task type: 2: Thread 3 with width 2 completes 0 tasks.
Task type: 2: Thread 3 with width 4 completes 0 tasks.
Task type: 3: Thread 3 with width 1 completes 0 tasks.
Task type: 3: Thread 3 with width 2 completes 0 tasks.
Task type: 3: Thread 3 with width 4 completes 0 tasks.
Task type: 4: Thread 3 with width 1 completes 0 tasks.
Task type: 4: Thread 3 with width 2 completes 0 tasks.
Task type: 4: Thread 3 with width 4 completes 0 tasks.
Task type: 5: Thread 3 with width 1 completes 0 tasks.
Task type: 5: Thread 3 with width 2 completes 0 tasks.
Task type: 5: Thread 3 with width 4 completes 0 tasks.
The total execution time of thread 3 is 97.3322 s.
Thread 2 sleeps for 163004 ms. 
Task type: 0: Thread 2 with width 1 completes 3 tasks.
Task type: 0: Thread 2 with width 2 completes 917 tasks.
Task type: 0: Thread 2 with width 4 completes 333 tasks.
Task type: 1: Thread 2 with width 1 completes 0 tasks.
Task type: 1: Thread 2 with width 2 completes 0 tasks.
Task type: 1: Thread 2 with width 4 completes 0 tasks.
Task type: 2: Thread 2 with width 1 completes 0 tasks.
Task type: 2: Thread 2 with width 2 completes 0 tasks.
Task type: 2: Thread 2 with width 4 completes 0 tasks.
Task type: 3: Thread 2 with width 1 completes 0 tasks.
Task type: 3: Thread 2 with width 2 completes 0 tasks.
Task type: 3: Thread 2 with width 4 completes 0 tasks.
Task type: 4: Thread 2 with width 1 completes 0 tasks.
Task type: 4: Thread 2 with width 2 completes 0 tasks.
Task type: 4: Thread 2 with width 4 completes 0 tasks.
Task type: 5: Thread 2 with width 1 completes 0 tasks.
Task type: 5: Thread 2 with width 2 completes 0 tasks.
Task type: 5: Thread 2 with width 4 completes 0 tasks.
The total execution time of thread 2 is 100.489 s.
10000,4,1687719529752	1687719794224,264.472,37.8113
Total number of steals across clusters: 0


